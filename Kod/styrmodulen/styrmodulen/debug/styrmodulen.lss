
styrmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  0000161c  000016b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000161c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006e  0080010e  0080010e  000016be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001730  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e2  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002fc  00000000  00000000  00002962  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a02  00000000  00000000  00002c5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004cc  00000000  00000000  00004660  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00010882  00000000  00000000  00004b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001722  00000000  00000000  000153ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00016ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003f12  00000000  00000000  00016c00  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
       2:	00 00       	nop
       4:	7e c7       	rjmp	.+3836   	; 0xf02 <__vector_1>
       6:	00 00       	nop
       8:	15 c4       	rjmp	.+2090   	; 0x834 <__vector_2>
       a:	00 00       	nop
       c:	3b c4       	rjmp	.+2166   	; 0x884 <__vector_3>
       e:	00 00       	nop
      10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
      12:	00 00       	nop
      14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
      16:	00 00       	nop
      18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
      1a:	00 00       	nop
      1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
      1e:	00 00       	nop
      20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
      22:	00 00       	nop
      24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
      26:	00 00       	nop
      28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
      2e:	00 00       	nop
      30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
      32:	00 00       	nop
      34:	b6 c3       	rjmp	.+1900   	; 0x7a2 <__vector_13>
      36:	00 00       	nop
      38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
      3a:	00 00       	nop
      3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
      3e:	00 00       	nop
      40:	54 c0       	rjmp	.+168    	; 0xea <__bad_interrupt>
      42:	00 00       	nop
      44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
      46:	00 00       	nop
      48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
      4e:	00 00       	nop
      50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
      52:	00 00       	nop
      54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
      56:	00 00       	nop
      58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
      5a:	00 00       	nop
      5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
      5e:	00 00       	nop
      60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
      62:	00 00       	nop
      64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
      66:	00 00       	nop
      68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
      6a:	00 00       	nop
      6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
      6e:	00 00       	nop
      70:	3c c0       	rjmp	.+120    	; 0xea <__bad_interrupt>
      72:	00 00       	nop
      74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
      76:	00 00       	nop
      78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
      7a:	00 00       	nop
      7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
      7e:	00 00       	nop
      80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
      82:	00 00       	nop
      84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
      86:	00 00       	nop
      88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
      8a:	00 00       	nop
      8c:	cf 07       	cpc	r28, r31
      8e:	d4 07       	cpc	r29, r20
      90:	e0 07       	cpc	r30, r16
      92:	fa 07       	cpc	r31, r26
      94:	fe 07       	cpc	r31, r30
      96:	02 08       	sbc	r0, r2
      98:	06 08       	sbc	r0, r6
      9a:	a7 08       	sbc	r10, r7
      9c:	10 08       	sbc	r1, r0
      9e:	15 08       	sbc	r1, r5
      a0:	1c 08       	sbc	r1, r12
      a2:	23 08       	sbc	r2, r3
      a4:	2a 08       	sbc	r2, r10
      a6:	31 08       	sbc	r3, r1
      a8:	38 08       	sbc	r3, r8
      aa:	3f 08       	sbc	r3, r15

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	d0 e4       	ldi	r29, 0x40	; 64
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	11 e0       	ldi	r17, 0x01	; 1
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	ec e1       	ldi	r30, 0x1C	; 28
      c0:	f6 e1       	ldi	r31, 0x16	; 22
      c2:	00 e0       	ldi	r16, 0x00	; 0
      c4:	0b bf       	out	0x3b, r16	; 59
      c6:	02 c0       	rjmp	.+4      	; 0xcc <__do_copy_data+0x14>
      c8:	07 90       	elpm	r0, Z+
      ca:	0d 92       	st	X+, r0
      cc:	ae 30       	cpi	r26, 0x0E	; 14
      ce:	b1 07       	cpc	r27, r17
      d0:	d9 f7       	brne	.-10     	; 0xc8 <__do_copy_data+0x10>

000000d2 <__do_clear_bss>:
      d2:	21 e0       	ldi	r18, 0x01	; 1
      d4:	ae e0       	ldi	r26, 0x0E	; 14
      d6:	b1 e0       	ldi	r27, 0x01	; 1
      d8:	01 c0       	rjmp	.+2      	; 0xdc <.do_clear_bss_start>

000000da <.do_clear_bss_loop>:
      da:	1d 92       	st	X+, r1

000000dc <.do_clear_bss_start>:
      dc:	ac 37       	cpi	r26, 0x7C	; 124
      de:	b2 07       	cpc	r27, r18
      e0:	e1 f7       	brne	.-8      	; 0xda <.do_clear_bss_loop>
      e2:	0e 94 a9 08 	call	0x1152	; 0x1152 <main>
      e6:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <_exit>

000000ea <__bad_interrupt>:
      ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <board_init>:
      ec:	08 95       	ret

000000ee <linje_get_error>:
	
	else if(turn_done && distance_left < st_value && distance_right < st_value && distance_front > st_value){	//sväng är klar och roboten har kört ur kurvan, återgå till vanlig PD-reglering
		twoway_turn_right = false;
		ongoing_turn = false;
		first_time = true;
		regler_against_wall = false;
      ee:	2f 92       	push	r2
      f0:	3f 92       	push	r3
      f2:	4f 92       	push	r4
      f4:	5f 92       	push	r5
      f6:	6f 92       	push	r6
      f8:	7f 92       	push	r7
      fa:	8f 92       	push	r8
      fc:	9f 92       	push	r9
      fe:	af 92       	push	r10
     100:	bf 92       	push	r11
     102:	cf 92       	push	r12
     104:	df 92       	push	r13
     106:	ef 92       	push	r14
     108:	ff 92       	push	r15
     10a:	0f 93       	push	r16
     10c:	1f 93       	push	r17
     10e:	cf 93       	push	r28
     110:	df 93       	push	r29
     112:	10 92 38 01 	sts	0x0138, r1
     116:	10 92 37 01 	sts	0x0137, r1
     11a:	f8 94       	cli
     11c:	80 90 5f 01 	lds	r8, 0x015F
     120:	90 90 60 01 	lds	r9, 0x0160
     124:	20 90 70 01 	lds	r2, 0x0170
     128:	30 90 71 01 	lds	r3, 0x0171
     12c:	78 94       	sei
     12e:	c0 90 37 01 	lds	r12, 0x0137
     132:	d0 90 38 01 	lds	r13, 0x0138
     136:	05 e0       	ldi	r16, 0x05	; 5
     138:	10 e0       	ldi	r17, 0x00	; 0
     13a:	c0 e0       	ldi	r28, 0x00	; 0
     13c:	d0 e0       	ldi	r29, 0x00	; 0
     13e:	41 2c       	mov	r4, r1
     140:	51 2c       	mov	r5, r1
     142:	32 01       	movw	r6, r4
     144:	0f 2e       	mov	r0, r31
     146:	f5 e0       	ldi	r31, 0x05	; 5
     148:	af 2e       	mov	r10, r31
     14a:	b1 2c       	mov	r11, r1
     14c:	f0 2d       	mov	r31, r0
     14e:	c5 01       	movw	r24, r10
     150:	80 1b       	sub	r24, r16
     152:	91 0b       	sbc	r25, r17
     154:	08 97       	sbiw	r24, 0x08	; 8
     156:	14 f5       	brge	.+68     	; 0x19c <linje_get_error+0xae>
     158:	74 01       	movw	r14, r8
     15a:	0c 2e       	mov	r0, r28
     15c:	02 c0       	rjmp	.+4      	; 0x162 <linje_get_error+0x74>
     15e:	f5 94       	asr	r15
     160:	e7 94       	ror	r14
     162:	0a 94       	dec	r0
     164:	e2 f7       	brpl	.-8      	; 0x15e <linje_get_error+0x70>
     166:	83 e0       	ldi	r24, 0x03	; 3
     168:	e8 22       	and	r14, r24
     16a:	ff 24       	eor	r15, r15
     16c:	0e 9d       	mul	r16, r14
     16e:	b0 01       	movw	r22, r0
     170:	0f 9d       	mul	r16, r15
     172:	70 0d       	add	r23, r0
     174:	1e 9d       	mul	r17, r14
     176:	70 0d       	add	r23, r0
     178:	11 24       	eor	r1, r1
     17a:	07 2e       	mov	r0, r23
     17c:	00 0c       	add	r0, r0
     17e:	88 0b       	sbc	r24, r24
     180:	99 0b       	sbc	r25, r25
     182:	0e 94 ed 09 	call	0x13da	; 0x13da <__floatsisf>
     186:	9b 01       	movw	r18, r22
     188:	ac 01       	movw	r20, r24
     18a:	c3 01       	movw	r24, r6
     18c:	b2 01       	movw	r22, r4
     18e:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__addsf3>
     192:	2b 01       	movw	r4, r22
     194:	3c 01       	movw	r6, r24
     196:	ce 0c       	add	r12, r14
     198:	df 1c       	adc	r13, r15
     19a:	22 c0       	rjmp	.+68     	; 0x1e0 <linje_get_error+0xf2>
     19c:	ce 01       	movw	r24, r28
     19e:	40 97       	sbiw	r24, 0x10	; 16
     1a0:	71 01       	movw	r14, r2
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <linje_get_error+0xba>
     1a4:	f5 94       	asr	r15
     1a6:	e7 94       	ror	r14
     1a8:	8a 95       	dec	r24
     1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <linje_get_error+0xb6>
     1ac:	83 e0       	ldi	r24, 0x03	; 3
     1ae:	e8 22       	and	r14, r24
     1b0:	ff 24       	eor	r15, r15
     1b2:	0e 9d       	mul	r16, r14
     1b4:	b0 01       	movw	r22, r0
     1b6:	0f 9d       	mul	r16, r15
     1b8:	70 0d       	add	r23, r0
     1ba:	1e 9d       	mul	r17, r14
     1bc:	70 0d       	add	r23, r0
     1be:	11 24       	eor	r1, r1
     1c0:	07 2e       	mov	r0, r23
     1c2:	00 0c       	add	r0, r0
     1c4:	88 0b       	sbc	r24, r24
     1c6:	99 0b       	sbc	r25, r25
     1c8:	0e 94 ed 09 	call	0x13da	; 0x13da <__floatsisf>
     1cc:	9b 01       	movw	r18, r22
     1ce:	ac 01       	movw	r20, r24
     1d0:	c3 01       	movw	r24, r6
     1d2:	b2 01       	movw	r22, r4
     1d4:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__addsf3>
     1d8:	2b 01       	movw	r4, r22
     1da:	3c 01       	movw	r6, r24
     1dc:	ce 0c       	add	r12, r14
     1de:	df 1c       	adc	r13, r15
     1e0:	22 96       	adiw	r28, 0x02	; 2
     1e2:	01 50       	subi	r16, 0x01	; 1
     1e4:	11 09       	sbc	r17, r1
     1e6:	c6 31       	cpi	r28, 0x16	; 22
     1e8:	d1 05       	cpc	r29, r1
     1ea:	09 f0       	breq	.+2      	; 0x1ee <linje_get_error+0x100>
     1ec:	b0 cf       	rjmp	.-160    	; 0x14e <linje_get_error+0x60>
     1ee:	d0 92 38 01 	sts	0x0138, r13
     1f2:	c0 92 37 01 	sts	0x0137, r12
     1f6:	c1 14       	cp	r12, r1
     1f8:	d1 04       	cpc	r13, r1
     1fa:	69 f0       	breq	.+26     	; 0x216 <linje_get_error+0x128>
     1fc:	b6 01       	movw	r22, r12
     1fe:	dd 0c       	add	r13, r13
     200:	88 0b       	sbc	r24, r24
     202:	99 0b       	sbc	r25, r25
     204:	0e 94 ed 09 	call	0x13da	; 0x13da <__floatsisf>
     208:	9b 01       	movw	r18, r22
     20a:	ac 01       	movw	r20, r24
     20c:	c3 01       	movw	r24, r6
     20e:	b2 01       	movw	r22, r4
     210:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__divsf3>
     214:	03 c0       	rjmp	.+6      	; 0x21c <linje_get_error+0x12e>
     216:	60 e0       	ldi	r22, 0x00	; 0
     218:	70 e0       	ldi	r23, 0x00	; 0
     21a:	cb 01       	movw	r24, r22
     21c:	0e 94 ba 09 	call	0x1374	; 0x1374 <__fixsfsi>
     220:	cb 01       	movw	r24, r22
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	ff 90       	pop	r15
     22c:	ef 90       	pop	r14
     22e:	df 90       	pop	r13
     230:	cf 90       	pop	r12
     232:	bf 90       	pop	r11
     234:	af 90       	pop	r10
     236:	9f 90       	pop	r9
     238:	8f 90       	pop	r8
     23a:	7f 90       	pop	r7
     23c:	6f 90       	pop	r6
     23e:	5f 90       	pop	r5
     240:	4f 90       	pop	r4
     242:	3f 90       	pop	r3
     244:	2f 90       	pop	r2
     246:	08 95       	ret

00000248 <linje_RGBsveng>:
     248:	cf 93       	push	r28
     24a:	df 93       	push	r29
     24c:	f8 94       	cli
     24e:	20 91 5f 01 	lds	r18, 0x015F
     252:	30 91 60 01 	lds	r19, 0x0160
     256:	40 91 70 01 	lds	r20, 0x0170
     25a:	50 91 71 01 	lds	r21, 0x0171
     25e:	78 94       	sei
     260:	80 91 6c 01 	lds	r24, 0x016C
     264:	88 23       	and	r24, r24
     266:	09 f4       	brne	.+2      	; 0x26a <linje_RGBsveng+0x22>
     268:	93 c0       	rjmp	.+294    	; 0x390 <linje_RGBsveng+0x148>
     26a:	60 91 35 01 	lds	r22, 0x0135
     26e:	70 91 36 01 	lds	r23, 0x0136
     272:	67 2b       	or	r22, r23
     274:	61 f4       	brne	.+24     	; 0x28e <linje_RGBsveng+0x46>
     276:	10 92 40 01 	sts	0x0140, r1
     27a:	10 92 3f 01 	sts	0x013F, r1
     27e:	81 e0       	ldi	r24, 0x01	; 1
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	90 93 36 01 	sts	0x0136, r25
     286:	80 93 35 01 	sts	0x0135, r24
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	88 c0       	rjmp	.+272    	; 0x39e <linje_RGBsveng+0x156>
     28e:	60 91 3f 01 	lds	r22, 0x013F
     292:	70 91 40 01 	lds	r23, 0x0140
     296:	65 31       	cpi	r22, 0x15	; 21
     298:	71 05       	cpc	r23, r1
     29a:	0c f0       	brlt	.+2      	; 0x29e <linje_RGBsveng+0x56>
     29c:	6f c0       	rjmp	.+222    	; 0x37c <linje_RGBsveng+0x134>
     29e:	81 30       	cpi	r24, 0x01	; 1
     2a0:	69 f5       	brne	.+90     	; 0x2fc <linje_RGBsveng+0xb4>
     2a2:	a0 ef       	ldi	r26, 0xF0	; 240
     2a4:	bf ef       	ldi	r27, 0xFF	; 255
     2a6:	6b ef       	ldi	r22, 0xFB	; 251
     2a8:	e0 e0       	ldi	r30, 0x00	; 0
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	81 11       	cpse	r24, r1
     2b0:	1f c0       	rjmp	.+62     	; 0x2f0 <linje_RGBsveng+0xa8>
     2b2:	e8 30       	cpi	r30, 0x08	; 8
     2b4:	f1 05       	cpc	r31, r1
     2b6:	84 f4       	brge	.+32     	; 0x2d8 <linje_RGBsveng+0x90>
     2b8:	cf 01       	movw	r24, r30
     2ba:	88 0f       	add	r24, r24
     2bc:	99 1f       	adc	r25, r25
     2be:	e9 01       	movw	r28, r18
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <linje_RGBsveng+0x7e>
     2c2:	d5 95       	asr	r29
     2c4:	c7 95       	ror	r28
     2c6:	8a 95       	dec	r24
     2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <linje_RGBsveng+0x7a>
     2ca:	ce 01       	movw	r24, r28
     2cc:	86 95       	lsr	r24
     2ce:	81 70       	andi	r24, 0x01	; 1
     2d0:	68 9f       	mul	r22, r24
     2d2:	80 2d       	mov	r24, r0
     2d4:	11 24       	eor	r1, r1
     2d6:	0c c0       	rjmp	.+24     	; 0x2f0 <linje_RGBsveng+0xa8>
     2d8:	ca 01       	movw	r24, r20
     2da:	0a 2e       	mov	r0, r26
     2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <linje_RGBsveng+0x9a>
     2de:	95 95       	asr	r25
     2e0:	87 95       	ror	r24
     2e2:	0a 94       	dec	r0
     2e4:	e2 f7       	brpl	.-8      	; 0x2de <linje_RGBsveng+0x96>
     2e6:	86 95       	lsr	r24
     2e8:	81 70       	andi	r24, 0x01	; 1
     2ea:	68 9f       	mul	r22, r24
     2ec:	80 2d       	mov	r24, r0
     2ee:	11 24       	eor	r1, r1
     2f0:	31 96       	adiw	r30, 0x01	; 1
     2f2:	6f 5f       	subi	r22, 0xFF	; 255
     2f4:	12 96       	adiw	r26, 0x02	; 2
     2f6:	66 30       	cpi	r22, 0x06	; 6
     2f8:	d1 f6       	brne	.-76     	; 0x2ae <linje_RGBsveng+0x66>
     2fa:	51 c0       	rjmp	.+162    	; 0x39e <linje_RGBsveng+0x156>
     2fc:	82 30       	cpi	r24, 0x02	; 2
     2fe:	69 f4       	brne	.+26     	; 0x31a <linje_RGBsveng+0xd2>
     300:	20 7f       	andi	r18, 0xF0	; 240
     302:	30 93 60 01 	sts	0x0160, r19
     306:	20 93 5f 01 	sts	0x015F, r18
     30a:	43 70       	andi	r20, 0x03	; 3
     30c:	55 27       	eor	r21, r21
     30e:	50 93 71 01 	sts	0x0171, r21
     312:	40 93 70 01 	sts	0x0170, r20
     316:	eb de       	rcall	.-554    	; 0xee <linje_get_error>
     318:	42 c0       	rjmp	.+132    	; 0x39e <linje_RGBsveng+0x156>
     31a:	83 30       	cpi	r24, 0x03	; 3
     31c:	a9 f5       	brne	.+106    	; 0x388 <linje_RGBsveng+0x140>
     31e:	a6 e0       	ldi	r26, 0x06	; 6
     320:	b0 e0       	ldi	r27, 0x00	; 0
     322:	e6 e0       	ldi	r30, 0x06	; 6
     324:	6b e0       	ldi	r22, 0x0B	; 11
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	81 11       	cpse	r24, r1
     32c:	1f c0       	rjmp	.+62     	; 0x36c <linje_RGBsveng+0x124>
     32e:	68 30       	cpi	r22, 0x08	; 8
     330:	71 05       	cpc	r23, r1
     332:	84 f4       	brge	.+32     	; 0x354 <linje_RGBsveng+0x10c>
     334:	cb 01       	movw	r24, r22
     336:	88 0f       	add	r24, r24
     338:	99 1f       	adc	r25, r25
     33a:	e9 01       	movw	r28, r18
     33c:	02 c0       	rjmp	.+4      	; 0x342 <linje_RGBsveng+0xfa>
     33e:	d5 95       	asr	r29
     340:	c7 95       	ror	r28
     342:	8a 95       	dec	r24
     344:	e2 f7       	brpl	.-8      	; 0x33e <linje_RGBsveng+0xf6>
     346:	ce 01       	movw	r24, r28
     348:	86 95       	lsr	r24
     34a:	81 70       	andi	r24, 0x01	; 1
     34c:	e8 9f       	mul	r30, r24
     34e:	80 2d       	mov	r24, r0
     350:	11 24       	eor	r1, r1
     352:	0c c0       	rjmp	.+24     	; 0x36c <linje_RGBsveng+0x124>
     354:	ca 01       	movw	r24, r20
     356:	0a 2e       	mov	r0, r26
     358:	02 c0       	rjmp	.+4      	; 0x35e <linje_RGBsveng+0x116>
     35a:	95 95       	asr	r25
     35c:	87 95       	ror	r24
     35e:	0a 94       	dec	r0
     360:	e2 f7       	brpl	.-8      	; 0x35a <linje_RGBsveng+0x112>
     362:	86 95       	lsr	r24
     364:	81 70       	andi	r24, 0x01	; 1
     366:	e8 9f       	mul	r30, r24
     368:	80 2d       	mov	r24, r0
     36a:	11 24       	eor	r1, r1
     36c:	61 50       	subi	r22, 0x01	; 1
     36e:	71 09       	sbc	r23, r1
     370:	e1 50       	subi	r30, 0x01	; 1
     372:	12 97       	sbiw	r26, 0x02	; 2
     374:	61 15       	cp	r22, r1
     376:	71 05       	cpc	r23, r1
     378:	c1 f6       	brne	.-80     	; 0x32a <linje_RGBsveng+0xe2>
     37a:	11 c0       	rjmp	.+34     	; 0x39e <linje_RGBsveng+0x156>
     37c:	10 92 36 01 	sts	0x0136, r1
     380:	10 92 35 01 	sts	0x0135, r1
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	0b c0       	rjmp	.+22     	; 0x39e <linje_RGBsveng+0x156>
     388:	80 e0       	ldi	r24, 0x00	; 0
     38a:	09 c0       	rjmp	.+18     	; 0x39e <linje_RGBsveng+0x156>
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	07 c0       	rjmp	.+14     	; 0x39e <linje_RGBsveng+0x156>
     390:	80 91 3f 01 	lds	r24, 0x013F
     394:	90 91 40 01 	lds	r25, 0x0140
     398:	45 97       	sbiw	r24, 0x15	; 21
     39a:	c4 f3       	brlt	.-16     	; 0x38c <linje_RGBsveng+0x144>
     39c:	ef cf       	rjmp	.-34     	; 0x37c <linje_RGBsveng+0x134>
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	08 95       	ret

000003a4 <sekvens_goal_detekted>:
     3a4:	80 91 70 01 	lds	r24, 0x0170
     3a8:	90 91 71 01 	lds	r25, 0x0171
     3ac:	0a 97       	sbiw	r24, 0x0a	; 10
     3ae:	3c f0       	brlt	.+14     	; 0x3be <sekvens_goal_detekted+0x1a>
     3b0:	80 91 5f 01 	lds	r24, 0x015F
     3b4:	90 91 60 01 	lds	r25, 0x0160
     3b8:	8a 3a       	cpi	r24, 0xAA	; 170
     3ba:	9a 40       	sbci	r25, 0x0A	; 10
     3bc:	34 f4       	brge	.+12     	; 0x3ca <sekvens_goal_detekted+0x26>
     3be:	9b b1       	in	r25, 0x0b	; 11
     3c0:	82 e0       	ldi	r24, 0x02	; 2
     3c2:	89 27       	eor	r24, r25
     3c4:	8b b9       	out	0x0b, r24	; 11
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	08 95       	ret
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	08 95       	ret

000003ce <detect_goal>:
     3ce:	ea df       	rcall	.-44     	; 0x3a4 <sekvens_goal_detekted>
     3d0:	88 23       	and	r24, r24
     3d2:	91 f0       	breq	.+36     	; 0x3f8 <detect_goal+0x2a>
     3d4:	80 91 14 01 	lds	r24, 0x0114
     3d8:	90 91 15 01 	lds	r25, 0x0115
     3dc:	89 2b       	or	r24, r25
     3de:	61 f4       	brne	.+24     	; 0x3f8 <detect_goal+0x2a>
     3e0:	10 92 40 01 	sts	0x0140, r1
     3e4:	10 92 3f 01 	sts	0x013F, r1
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	90 93 15 01 	sts	0x0115, r25
     3f0:	80 93 14 01 	sts	0x0114, r24
     3f4:	80 e0       	ldi	r24, 0x00	; 0
     3f6:	08 95       	ret
     3f8:	d5 df       	rcall	.-86     	; 0x3a4 <sekvens_goal_detekted>
     3fa:	88 23       	and	r24, r24
     3fc:	a1 f0       	breq	.+40     	; 0x426 <detect_goal+0x58>
     3fe:	80 91 14 01 	lds	r24, 0x0114
     402:	90 91 15 01 	lds	r25, 0x0115
     406:	01 97       	sbiw	r24, 0x01	; 1
     408:	71 f4       	brne	.+28     	; 0x426 <detect_goal+0x58>
     40a:	80 91 3f 01 	lds	r24, 0x013F
     40e:	90 91 40 01 	lds	r25, 0x0140
     412:	44 97       	sbiw	r24, 0x14	; 20
     414:	44 f4       	brge	.+16     	; 0x426 <detect_goal+0x58>
     416:	82 e0       	ldi	r24, 0x02	; 2
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	90 93 15 01 	sts	0x0115, r25
     41e:	80 93 14 01 	sts	0x0114, r24
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	08 95       	ret
     426:	be df       	rcall	.-132    	; 0x3a4 <sekvens_goal_detekted>
     428:	88 23       	and	r24, r24
     42a:	99 f0       	breq	.+38     	; 0x452 <detect_goal+0x84>
     42c:	20 91 14 01 	lds	r18, 0x0114
     430:	30 91 15 01 	lds	r19, 0x0115
     434:	22 30       	cpi	r18, 0x02	; 2
     436:	31 05       	cpc	r19, r1
     438:	61 f4       	brne	.+24     	; 0x452 <detect_goal+0x84>
     43a:	20 91 3f 01 	lds	r18, 0x013F
     43e:	30 91 40 01 	lds	r19, 0x0140
     442:	24 31       	cpi	r18, 0x14	; 20
     444:	31 05       	cpc	r19, r1
     446:	5c f4       	brge	.+22     	; 0x45e <detect_goal+0x90>
     448:	10 92 15 01 	sts	0x0115, r1
     44c:	10 92 14 01 	sts	0x0114, r1
     450:	08 95       	ret
     452:	80 91 3f 01 	lds	r24, 0x013F
     456:	90 91 40 01 	lds	r25, 0x0140
     45a:	44 97       	sbiw	r24, 0x14	; 20
     45c:	34 f0       	brlt	.+12     	; 0x46a <detect_goal+0x9c>
     45e:	10 92 15 01 	sts	0x0115, r1
     462:	10 92 14 01 	sts	0x0114, r1
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	08 95       	ret
     46a:	08 95       	ret

0000046c <detect_labyrint>:
     46c:	80 91 68 01 	lds	r24, 0x0168
     470:	89 31       	cpi	r24, 0x19	; 25
     472:	08 f5       	brcc	.+66     	; 0x4b6 <detect_labyrint+0x4a>
     474:	80 91 6d 01 	lds	r24, 0x016D
     478:	89 31       	cpi	r24, 0x19	; 25
     47a:	e8 f4       	brcc	.+58     	; 0x4b6 <detect_labyrint+0x4a>
     47c:	80 91 33 01 	lds	r24, 0x0133
     480:	90 91 34 01 	lds	r25, 0x0134
     484:	89 2b       	or	r24, r25
     486:	59 f4       	brne	.+22     	; 0x49e <detect_labyrint+0x32>
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	90 93 34 01 	sts	0x0134, r25
     490:	80 93 33 01 	sts	0x0133, r24
     494:	10 92 3e 01 	sts	0x013E, r1
     498:	10 92 3d 01 	sts	0x013D, r1
     49c:	08 95       	ret
     49e:	80 91 3d 01 	lds	r24, 0x013D
     4a2:	90 91 3e 01 	lds	r25, 0x013E
     4a6:	0a 97       	sbiw	r24, 0x0a	; 10
     4a8:	64 f0       	brlt	.+24     	; 0x4c2 <detect_labyrint+0x56>
     4aa:	10 92 34 01 	sts	0x0134, r1
     4ae:	10 92 33 01 	sts	0x0133, r1
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	08 95       	ret
     4b6:	10 92 13 01 	sts	0x0113, r1
     4ba:	10 92 12 01 	sts	0x0112, r1
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	08 95       	ret
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	08 95       	ret

000004c6 <turn_left>:
     4c6:	2d 98       	cbi	0x05, 5	; 5
     4c8:	2e 9a       	sbi	0x05, 6	; 5
     4ca:	86 e4       	ldi	r24, 0x46	; 70
     4cc:	87 bd       	out	0x27, r24	; 39
     4ce:	8c e3       	ldi	r24, 0x3C	; 60
     4d0:	88 bd       	out	0x28, r24	; 40
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	80 93 39 01 	sts	0x0139, r24
     4d8:	08 95       	ret

000004da <turn_right>:
     4da:	2d 9a       	sbi	0x05, 5	; 5
     4dc:	2e 98       	cbi	0x05, 6	; 5
     4de:	86 e4       	ldi	r24, 0x46	; 70
     4e0:	87 bd       	out	0x27, r24	; 39
     4e2:	8c e3       	ldi	r24, 0x3C	; 60
     4e4:	88 bd       	out	0x28, r24	; 40
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	80 93 39 01 	sts	0x0139, r24
     4ec:	08 95       	ret

000004ee <linje>:
     4ee:	4f 92       	push	r4
     4f0:	5f 92       	push	r5
     4f2:	6f 92       	push	r6
     4f4:	7f 92       	push	r7
     4f6:	8f 92       	push	r8
     4f8:	9f 92       	push	r9
     4fa:	af 92       	push	r10
     4fc:	bf 92       	push	r11
     4fe:	cf 92       	push	r12
     500:	df 92       	push	r13
     502:	ef 92       	push	r14
     504:	ff 92       	push	r15
     506:	f8 94       	cli
     508:	60 91 17 01 	lds	r22, 0x0117
     50c:	70 91 18 01 	lds	r23, 0x0118
     510:	80 91 19 01 	lds	r24, 0x0119
     514:	90 91 1a 01 	lds	r25, 0x011A
     518:	2d d7       	rcall	.+3674   	; 0x1374 <__fixsfsi>
     51a:	78 94       	sei
     51c:	20 91 25 01 	lds	r18, 0x0125
     520:	30 91 26 01 	lds	r19, 0x0126
     524:	a9 01       	movw	r20, r18
     526:	46 1b       	sub	r20, r22
     528:	57 0b       	sbc	r21, r23
     52a:	ba 01       	movw	r22, r20
     52c:	07 2e       	mov	r0, r23
     52e:	00 0c       	add	r0, r0
     530:	88 0b       	sbc	r24, r24
     532:	99 0b       	sbc	r25, r25
     534:	52 d7       	rcall	.+3748   	; 0x13da <__floatsisf>
     536:	6b 01       	movw	r12, r22
     538:	7c 01       	movw	r14, r24
     53a:	60 93 21 01 	sts	0x0121, r22
     53e:	70 93 22 01 	sts	0x0122, r23
     542:	80 93 23 01 	sts	0x0123, r24
     546:	90 93 24 01 	sts	0x0124, r25
     54a:	20 91 1b 01 	lds	r18, 0x011B
     54e:	30 91 1c 01 	lds	r19, 0x011C
     552:	40 91 1d 01 	lds	r20, 0x011D
     556:	50 91 1e 01 	lds	r21, 0x011E
     55a:	3f d6       	rcall	.+3198   	; 0x11da <__subsf3>
     55c:	4b 01       	movw	r8, r22
     55e:	5c 01       	movw	r10, r24
     560:	60 93 29 01 	sts	0x0129, r22
     564:	70 93 2a 01 	sts	0x012A, r23
     568:	80 93 2b 01 	sts	0x012B, r24
     56c:	90 93 2c 01 	sts	0x012C, r25
     570:	60 91 02 01 	lds	r22, 0x0102
     574:	70 91 03 01 	lds	r23, 0x0103
     578:	07 2e       	mov	r0, r23
     57a:	00 0c       	add	r0, r0
     57c:	88 0b       	sbc	r24, r24
     57e:	99 0b       	sbc	r25, r25
     580:	2c d7       	rcall	.+3672   	; 0x13da <__floatsisf>
     582:	9b 01       	movw	r18, r22
     584:	ac 01       	movw	r20, r24
     586:	c7 01       	movw	r24, r14
     588:	b6 01       	movw	r22, r12
     58a:	b3 d7       	rcall	.+3942   	; 0x14f2 <__mulsf3>
     58c:	2b 01       	movw	r4, r22
     58e:	3c 01       	movw	r6, r24
     590:	60 91 00 01 	lds	r22, 0x0100
     594:	70 91 01 01 	lds	r23, 0x0101
     598:	07 2e       	mov	r0, r23
     59a:	00 0c       	add	r0, r0
     59c:	88 0b       	sbc	r24, r24
     59e:	99 0b       	sbc	r25, r25
     5a0:	1c d7       	rcall	.+3640   	; 0x13da <__floatsisf>
     5a2:	9b 01       	movw	r18, r22
     5a4:	ac 01       	movw	r20, r24
     5a6:	c5 01       	movw	r24, r10
     5a8:	b4 01       	movw	r22, r8
     5aa:	a3 d7       	rcall	.+3910   	; 0x14f2 <__mulsf3>
     5ac:	9b 01       	movw	r18, r22
     5ae:	ac 01       	movw	r20, r24
     5b0:	c3 01       	movw	r24, r6
     5b2:	b2 01       	movw	r22, r4
     5b4:	13 d6       	rcall	.+3110   	; 0x11dc <__addsf3>
     5b6:	de d6       	rcall	.+3516   	; 0x1374 <__fixsfsi>
     5b8:	9b 01       	movw	r18, r22
     5ba:	70 93 20 01 	sts	0x0120, r23
     5be:	60 93 1f 01 	sts	0x011F, r22
     5c2:	c0 92 1b 01 	sts	0x011B, r12
     5c6:	d0 92 1c 01 	sts	0x011C, r13
     5ca:	e0 92 1d 01 	sts	0x011D, r14
     5ce:	f0 92 1e 01 	sts	0x011E, r15
     5d2:	40 91 37 01 	lds	r20, 0x0137
     5d6:	50 91 38 01 	lds	r21, 0x0138
     5da:	45 2b       	or	r20, r21
     5dc:	b9 f4       	brne	.+46     	; 0x60c <linje+0x11e>
     5de:	2e 9a       	sbi	0x05, 6	; 5
     5e0:	2d 9a       	sbi	0x05, 5	; 5
     5e2:	80 91 45 01 	lds	r24, 0x0145
     5e6:	90 91 46 01 	lds	r25, 0x0146
     5ea:	99 23       	and	r25, r25
     5ec:	0c f4       	brge	.+2      	; 0x5f0 <linje+0x102>
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	95 95       	asr	r25
     5f2:	87 95       	ror	r24
     5f4:	87 bd       	out	0x27, r24	; 39
     5f6:	80 91 43 01 	lds	r24, 0x0143
     5fa:	90 91 44 01 	lds	r25, 0x0144
     5fe:	99 23       	and	r25, r25
     600:	0c f4       	brge	.+2      	; 0x604 <linje+0x116>
     602:	01 96       	adiw	r24, 0x01	; 1
     604:	95 95       	asr	r25
     606:	87 95       	ror	r24
     608:	88 bd       	out	0x28, r24	; 40
     60a:	5b c0       	rjmp	.+182    	; 0x6c2 <linje+0x1d4>
     60c:	77 23       	and	r23, r23
     60e:	6c f5       	brge	.+90     	; 0x66a <linje+0x17c>
     610:	9b 01       	movw	r18, r22
     612:	77 23       	and	r23, r23
     614:	24 f4       	brge	.+8      	; 0x61e <linje+0x130>
     616:	22 27       	eor	r18, r18
     618:	33 27       	eor	r19, r19
     61a:	26 1b       	sub	r18, r22
     61c:	37 0b       	sbc	r19, r23
     61e:	80 91 43 01 	lds	r24, 0x0143
     622:	90 91 44 01 	lds	r25, 0x0144
     626:	28 17       	cp	r18, r24
     628:	39 07       	cpc	r19, r25
     62a:	9c f0       	brlt	.+38     	; 0x652 <linje+0x164>
     62c:	2d 9a       	sbi	0x05, 5	; 5
     62e:	2e 98       	cbi	0x05, 6	; 5
     630:	80 91 45 01 	lds	r24, 0x0145
     634:	87 bd       	out	0x27, r24	; 39
     636:	80 91 1f 01 	lds	r24, 0x011F
     63a:	90 91 20 01 	lds	r25, 0x0120
     63e:	99 23       	and	r25, r25
     640:	1c f4       	brge	.+6      	; 0x648 <linje+0x15a>
     642:	91 95       	neg	r25
     644:	81 95       	neg	r24
     646:	91 09       	sbc	r25, r1
     648:	90 91 43 01 	lds	r25, 0x0143
     64c:	89 1b       	sub	r24, r25
     64e:	88 bd       	out	0x28, r24	; 40
     650:	38 c0       	rjmp	.+112    	; 0x6c2 <linje+0x1d4>
     652:	2e 98       	cbi	0x05, 6	; 5
     654:	2d 98       	cbi	0x05, 5	; 5
     656:	80 91 45 01 	lds	r24, 0x0145
     65a:	87 bd       	out	0x27, r24	; 39
     65c:	90 91 1f 01 	lds	r25, 0x011F
     660:	80 91 43 01 	lds	r24, 0x0143
     664:	89 0f       	add	r24, r25
     666:	88 bd       	out	0x28, r24	; 40
     668:	2c c0       	rjmp	.+88     	; 0x6c2 <linje+0x1d4>
     66a:	16 16       	cp	r1, r22
     66c:	17 06       	cpc	r1, r23
     66e:	fc f4       	brge	.+62     	; 0x6ae <linje+0x1c0>
     670:	80 91 45 01 	lds	r24, 0x0145
     674:	90 91 46 01 	lds	r25, 0x0146
     678:	28 17       	cp	r18, r24
     67a:	39 07       	cpc	r19, r25
     67c:	64 f0       	brlt	.+24     	; 0x696 <linje+0x1a8>
     67e:	2e 9a       	sbi	0x05, 6	; 5
     680:	2d 98       	cbi	0x05, 5	; 5
     682:	80 91 43 01 	lds	r24, 0x0143
     686:	88 bd       	out	0x28, r24	; 40
     688:	80 91 1f 01 	lds	r24, 0x011F
     68c:	90 91 45 01 	lds	r25, 0x0145
     690:	89 1b       	sub	r24, r25
     692:	87 bd       	out	0x27, r24	; 39
     694:	16 c0       	rjmp	.+44     	; 0x6c2 <linje+0x1d4>
     696:	2e 98       	cbi	0x05, 6	; 5
     698:	2d 98       	cbi	0x05, 5	; 5
     69a:	80 91 43 01 	lds	r24, 0x0143
     69e:	88 bd       	out	0x28, r24	; 40
     6a0:	80 91 45 01 	lds	r24, 0x0145
     6a4:	90 91 1f 01 	lds	r25, 0x011F
     6a8:	89 1b       	sub	r24, r25
     6aa:	87 bd       	out	0x27, r24	; 39
     6ac:	0a c0       	rjmp	.+20     	; 0x6c2 <linje+0x1d4>
     6ae:	67 2b       	or	r22, r23
     6b0:	41 f4       	brne	.+16     	; 0x6c2 <linje+0x1d4>
     6b2:	2e 98       	cbi	0x05, 6	; 5
     6b4:	2d 98       	cbi	0x05, 5	; 5
     6b6:	80 91 45 01 	lds	r24, 0x0145
     6ba:	87 bd       	out	0x27, r24	; 39
     6bc:	80 91 43 01 	lds	r24, 0x0143
     6c0:	88 bd       	out	0x28, r24	; 40
     6c2:	ff 90       	pop	r15
     6c4:	ef 90       	pop	r14
     6c6:	df 90       	pop	r13
     6c8:	cf 90       	pop	r12
     6ca:	bf 90       	pop	r11
     6cc:	af 90       	pop	r10
     6ce:	9f 90       	pop	r9
     6d0:	8f 90       	pop	r8
     6d2:	7f 90       	pop	r7
     6d4:	6f 90       	pop	r6
     6d6:	5f 90       	pop	r5
     6d8:	4f 90       	pop	r4
     6da:	08 95       	ret

000006dc <linje_main>:
     6dc:	80 91 65 01 	lds	r24, 0x0165
     6e0:	82 32       	cpi	r24, 0x22	; 34
     6e2:	38 f4       	brcc	.+14     	; 0x6f2 <linje_main+0x16>
     6e4:	10 92 48 01 	sts	0x0148, r1
     6e8:	10 92 47 01 	sts	0x0147, r1
     6ec:	59 9a       	sbi	0x0b, 1	; 11
     6ee:	58 9a       	sbi	0x0b, 0	; 11
     6f0:	08 95       	ret
     6f2:	80 91 6c 01 	lds	r24, 0x016C
     6f6:	81 50       	subi	r24, 0x01	; 1
     6f8:	83 30       	cpi	r24, 0x03	; 3
     6fa:	88 f4       	brcc	.+34     	; 0x71e <linje_main+0x42>
     6fc:	a5 dd       	rcall	.-1206   	; 0x248 <linje_RGBsveng>
     6fe:	68 2f       	mov	r22, r24
     700:	88 0f       	add	r24, r24
     702:	77 0b       	sbc	r23, r23
     704:	88 0b       	sbc	r24, r24
     706:	99 0b       	sbc	r25, r25
     708:	68 d6       	rcall	.+3280   	; 0x13da <__floatsisf>
     70a:	60 93 17 01 	sts	0x0117, r22
     70e:	70 93 18 01 	sts	0x0118, r23
     712:	80 93 19 01 	sts	0x0119, r24
     716:	90 93 1a 01 	sts	0x011A, r25
     71a:	e9 ce       	rjmp	.-558    	; 0x4ee <linje>
     71c:	08 95       	ret
     71e:	57 de       	rcall	.-850    	; 0x3ce <detect_goal>
     720:	88 23       	and	r24, r24
     722:	29 f0       	breq	.+10     	; 0x72e <linje_main+0x52>
     724:	10 92 48 01 	sts	0x0148, r1
     728:	10 92 47 01 	sts	0x0147, r1
     72c:	08 95       	ret
     72e:	9e de       	rcall	.-708    	; 0x46c <detect_labyrint>
     730:	88 23       	and	r24, r24
     732:	31 f0       	breq	.+12     	; 0x740 <linje_main+0x64>
     734:	58 9a       	sbi	0x0b, 0	; 11
     736:	10 92 48 01 	sts	0x0148, r1
     73a:	10 92 47 01 	sts	0x0147, r1
     73e:	08 95       	ret
     740:	d6 dc       	rcall	.-1620   	; 0xee <linje_get_error>
     742:	bc 01       	movw	r22, r24
     744:	99 0f       	add	r25, r25
     746:	88 0b       	sbc	r24, r24
     748:	99 0b       	sbc	r25, r25
     74a:	47 d6       	rcall	.+3214   	; 0x13da <__floatsisf>
     74c:	60 93 17 01 	sts	0x0117, r22
     750:	70 93 18 01 	sts	0x0118, r23
     754:	80 93 19 01 	sts	0x0119, r24
     758:	90 93 1a 01 	sts	0x011A, r25
     75c:	c8 ce       	rjmp	.-624    	; 0x4ee <linje>
     75e:	08 95       	ret

00000760 <initengine>:
     760:	84 b5       	in	r24, 0x24	; 36
     762:	83 6a       	ori	r24, 0xA3	; 163
     764:	84 bd       	out	0x24, r24	; 36
     766:	17 bc       	out	0x27, r1	; 39
     768:	18 bc       	out	0x28, r1	; 40
     76a:	85 b5       	in	r24, 0x25	; 37
     76c:	83 60       	ori	r24, 0x03	; 3
     76e:	85 bd       	out	0x25, r24	; 37
     770:	88 e7       	ldi	r24, 0x78	; 120
     772:	84 b9       	out	0x04, r24	; 4
     774:	85 b1       	in	r24, 0x05	; 5
     776:	15 b8       	out	0x05, r1	; 5
     778:	08 95       	ret

0000077a <timerinit>:
     77a:	83 e0       	ldi	r24, 0x03	; 3
     77c:	8a b9       	out	0x0a, r24	; 10
     77e:	e1 e8       	ldi	r30, 0x81	; 129
     780:	f0 e0       	ldi	r31, 0x00	; 0
     782:	80 81       	ld	r24, Z
     784:	8d 60       	ori	r24, 0x0D	; 13
     786:	80 83       	st	Z, r24
     788:	80 ea       	ldi	r24, 0xA0	; 160
     78a:	95 e0       	ldi	r25, 0x05	; 5
     78c:	90 93 89 00 	sts	0x0089, r25
     790:	80 93 88 00 	sts	0x0088, r24
     794:	ef e6       	ldi	r30, 0x6F	; 111
     796:	f0 e0       	ldi	r31, 0x00	; 0
     798:	80 81       	ld	r24, Z
     79a:	82 60       	ori	r24, 0x02	; 2
     79c:	80 83       	st	Z, r24
     79e:	b1 9a       	sbi	0x16, 1	; 22
     7a0:	08 95       	ret

000007a2 <__vector_13>:
     7a2:	1f 92       	push	r1
     7a4:	0f 92       	push	r0
     7a6:	0f b6       	in	r0, 0x3f	; 63
     7a8:	0f 92       	push	r0
     7aa:	11 24       	eor	r1, r1
     7ac:	8f 93       	push	r24
     7ae:	9f 93       	push	r25
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	80 93 3a 01 	sts	0x013A, r24
     7b6:	80 91 3d 01 	lds	r24, 0x013D
     7ba:	90 91 3e 01 	lds	r25, 0x013E
     7be:	01 96       	adiw	r24, 0x01	; 1
     7c0:	82 33       	cpi	r24, 0x32	; 50
     7c2:	91 05       	cpc	r25, r1
     7c4:	2c f4       	brge	.+10     	; 0x7d0 <__vector_13+0x2e>
     7c6:	90 93 3e 01 	sts	0x013E, r25
     7ca:	80 93 3d 01 	sts	0x013D, r24
     7ce:	06 c0       	rjmp	.+12     	; 0x7dc <__vector_13+0x3a>
     7d0:	82 e3       	ldi	r24, 0x32	; 50
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	90 93 3e 01 	sts	0x013E, r25
     7d8:	80 93 3d 01 	sts	0x013D, r24
     7dc:	80 91 3f 01 	lds	r24, 0x013F
     7e0:	90 91 40 01 	lds	r25, 0x0140
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	82 33       	cpi	r24, 0x32	; 50
     7e8:	91 05       	cpc	r25, r1
     7ea:	2c f4       	brge	.+10     	; 0x7f6 <__vector_13+0x54>
     7ec:	90 93 40 01 	sts	0x0140, r25
     7f0:	80 93 3f 01 	sts	0x013F, r24
     7f4:	06 c0       	rjmp	.+12     	; 0x802 <__vector_13+0x60>
     7f6:	82 e3       	ldi	r24, 0x32	; 50
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	90 93 40 01 	sts	0x0140, r25
     7fe:	80 93 3f 01 	sts	0x013F, r24
     802:	80 91 41 01 	lds	r24, 0x0141
     806:	90 91 42 01 	lds	r25, 0x0142
     80a:	01 96       	adiw	r24, 0x01	; 1
     80c:	90 93 42 01 	sts	0x0142, r25
     810:	80 93 41 01 	sts	0x0141, r24
     814:	9f 91       	pop	r25
     816:	8f 91       	pop	r24
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <interrupt_init>:
     822:	8d b3       	in	r24, 0x1d	; 29
     824:	86 60       	ori	r24, 0x06	; 6
     826:	8d bb       	out	0x1d, r24	; 29
     828:	e9 e6       	ldi	r30, 0x69	; 105
     82a:	f0 e0       	ldi	r31, 0x00	; 0
     82c:	80 81       	ld	r24, Z
     82e:	88 62       	ori	r24, 0x28	; 40
     830:	80 83       	st	Z, r24
     832:	08 95       	ret

00000834 <__vector_2>:
     834:	1f 92       	push	r1
     836:	0f 92       	push	r0
     838:	0f b6       	in	r0, 0x3f	; 63
     83a:	0f 92       	push	r0
     83c:	11 24       	eor	r1, r1
     83e:	8f 93       	push	r24
     840:	9f 93       	push	r25
     842:	80 91 49 01 	lds	r24, 0x0149
     846:	90 91 4a 01 	lds	r25, 0x014A
     84a:	01 97       	sbiw	r24, 0x01	; 1
     84c:	39 f4       	brne	.+14     	; 0x85c <__vector_2+0x28>
     84e:	10 92 4a 01 	sts	0x014A, r1
     852:	10 92 49 01 	sts	0x0149, r1
     856:	59 9a       	sbi	0x0b, 1	; 11
     858:	58 98       	cbi	0x0b, 0	; 11
     85a:	0c c0       	rjmp	.+24     	; 0x874 <__vector_2+0x40>
     85c:	10 92 48 01 	sts	0x0148, r1
     860:	10 92 47 01 	sts	0x0147, r1
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	90 93 4a 01 	sts	0x014A, r25
     86c:	80 93 49 01 	sts	0x0149, r24
     870:	58 9a       	sbi	0x0b, 0	; 11
     872:	59 98       	cbi	0x0b, 1	; 11
     874:	e1 9a       	sbi	0x1c, 1	; 28
     876:	9f 91       	pop	r25
     878:	8f 91       	pop	r24
     87a:	0f 90       	pop	r0
     87c:	0f be       	out	0x3f, r0	; 63
     87e:	0f 90       	pop	r0
     880:	1f 90       	pop	r1
     882:	18 95       	reti

00000884 <__vector_3>:
     884:	1f 92       	push	r1
     886:	0f 92       	push	r0
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	0f 92       	push	r0
     88c:	11 24       	eor	r1, r1
     88e:	8f 93       	push	r24
     890:	9f 93       	push	r25
     892:	80 91 47 01 	lds	r24, 0x0147
     896:	90 91 48 01 	lds	r25, 0x0148
     89a:	89 2b       	or	r24, r25
     89c:	39 f4       	brne	.+14     	; 0x8ac <__vector_3+0x28>
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	90 93 48 01 	sts	0x0148, r25
     8a6:	80 93 47 01 	sts	0x0147, r24
     8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <__vector_3+0x30>
     8ac:	10 92 48 01 	sts	0x0148, r1
     8b0:	10 92 47 01 	sts	0x0147, r1
     8b4:	e2 9a       	sbi	0x1c, 2	; 28
     8b6:	9f 91       	pop	r25
     8b8:	8f 91       	pop	r24
     8ba:	0f 90       	pop	r0
     8bc:	0f be       	out	0x3f, r0	; 63
     8be:	0f 90       	pop	r0
     8c0:	1f 90       	pop	r1
     8c2:	18 95       	reti

000008c4 <i2c_setup>:
     8c4:	88 23       	and	r24, r24
     8c6:	69 f0       	breq	.+26     	; 0x8e2 <i2c_setup+0x1e>
     8c8:	3e 98       	cbi	0x07, 6	; 7
     8ca:	3f 98       	cbi	0x07, 7	; 7
     8cc:	e8 9a       	sbi	0x1d, 0	; 29
     8ce:	e9 e6       	ldi	r30, 0x69	; 105
     8d0:	f0 e0       	ldi	r31, 0x00	; 0
     8d2:	80 81       	ld	r24, Z
     8d4:	83 60       	ori	r24, 0x03	; 3
     8d6:	80 83       	st	Z, r24
     8d8:	80 e1       	ldi	r24, 0x10	; 16
     8da:	80 93 b8 00 	sts	0x00B8, r24
     8de:	10 92 b9 00 	sts	0x00B9, r1
     8e2:	08 95       	ret

000008e4 <i2c_send>:
     8e4:	8f 92       	push	r8
     8e6:	9f 92       	push	r9
     8e8:	af 92       	push	r10
     8ea:	bf 92       	push	r11
     8ec:	cf 92       	push	r12
     8ee:	df 92       	push	r13
     8f0:	ef 92       	push	r14
     8f2:	ff 92       	push	r15
     8f4:	0f 93       	push	r16
     8f6:	1f 93       	push	r17
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	eb 01       	movw	r28, r22
     8fe:	08 81       	ld	r16, Y
     900:	02 95       	swap	r16
     902:	0f 70       	andi	r16, 0x0F	; 15
     904:	10 e0       	ldi	r17, 0x00	; 0
     906:	4b 01       	movw	r8, r22
     908:	68 94       	set
     90a:	ee 24       	eor	r14, r14
     90c:	e3 f8       	bld	r14, 3
     90e:	f1 2c       	mov	r15, r1
     910:	40 e0       	ldi	r20, 0x00	; 0
     912:	50 e0       	ldi	r21, 0x00	; 0
     914:	ec eb       	ldi	r30, 0xBC	; 188
     916:	f0 e0       	ldi	r31, 0x00	; 0
     918:	0f 2e       	mov	r0, r31
     91a:	f4 ea       	ldi	r31, 0xA4	; 164
     91c:	df 2e       	mov	r13, r31
     91e:	f0 2d       	mov	r31, r0
     920:	a9 eb       	ldi	r26, 0xB9	; 185
     922:	b0 e0       	ldi	r27, 0x00	; 0
     924:	8e 7f       	andi	r24, 0xFE	; 254
     926:	c8 2e       	mov	r12, r24
     928:	6b eb       	ldi	r22, 0xBB	; 187
     92a:	70 e0       	ldi	r23, 0x00	; 0
     92c:	84 e8       	ldi	r24, 0x84	; 132
     92e:	68 94       	set
     930:	aa 24       	eor	r10, r10
     932:	a4 f8       	bld	r10, 4
     934:	b1 2c       	mov	r11, r1
     936:	d0 82       	st	Z, r13
     938:	90 81       	ld	r25, Z
     93a:	99 23       	and	r25, r25
     93c:	ec f7       	brge	.-6      	; 0x938 <i2c_send+0x54>
     93e:	2c 91       	ld	r18, X
     940:	28 7f       	andi	r18, 0xF8	; 248
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	2e 15       	cp	r18, r14
     946:	3f 05       	cpc	r19, r15
     948:	69 f5       	brne	.+90     	; 0x9a4 <i2c_send+0xc0>
     94a:	eb 01       	movw	r28, r22
     94c:	c8 82       	st	Y, r12
     94e:	80 83       	st	Z, r24
     950:	90 81       	ld	r25, Z
     952:	99 23       	and	r25, r25
     954:	ec f7       	brge	.-6      	; 0x950 <i2c_send+0x6c>
     956:	9c 91       	ld	r25, X
     958:	98 7f       	andi	r25, 0xF8	; 248
     95a:	98 31       	cpi	r25, 0x18	; 24
     95c:	29 f0       	breq	.+10     	; 0x968 <i2c_send+0x84>
     95e:	84 e9       	ldi	r24, 0x94	; 148
     960:	80 93 bc 00 	sts	0x00BC, r24
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	1f c0       	rjmp	.+62     	; 0x9a6 <i2c_send+0xc2>
     968:	e4 01       	movw	r28, r8
     96a:	99 91       	ld	r25, Y+
     96c:	4e 01       	movw	r8, r28
     96e:	eb 01       	movw	r28, r22
     970:	98 83       	st	Y, r25
     972:	80 83       	st	Z, r24
     974:	90 81       	ld	r25, Z
     976:	99 23       	and	r25, r25
     978:	ec f7       	brge	.-6      	; 0x974 <i2c_send+0x90>
     97a:	9c 91       	ld	r25, X
     97c:	98 7f       	andi	r25, 0xF8	; 248
     97e:	98 32       	cpi	r25, 0x28	; 40
     980:	29 f0       	breq	.+10     	; 0x98c <i2c_send+0xa8>
     982:	84 e9       	ldi	r24, 0x94	; 148
     984:	80 93 bc 00 	sts	0x00BC, r24
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	0d c0       	rjmp	.+26     	; 0x9a6 <i2c_send+0xc2>
     98c:	4f 5f       	subi	r20, 0xFF	; 255
     98e:	5f 4f       	sbci	r21, 0xFF	; 255
     990:	ea 2c       	mov	r14, r10
     992:	fb 2c       	mov	r15, r11
     994:	04 17       	cp	r16, r20
     996:	15 07       	cpc	r17, r21
     998:	74 f6       	brge	.-100    	; 0x936 <i2c_send+0x52>
     99a:	84 e9       	ldi	r24, 0x94	; 148
     99c:	80 93 bc 00 	sts	0x00BC, r24
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	01 c0       	rjmp	.+2      	; 0x9a6 <i2c_send+0xc2>
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	1f 91       	pop	r17
     9ac:	0f 91       	pop	r16
     9ae:	ff 90       	pop	r15
     9b0:	ef 90       	pop	r14
     9b2:	df 90       	pop	r13
     9b4:	cf 90       	pop	r12
     9b6:	bf 90       	pop	r11
     9b8:	af 90       	pop	r10
     9ba:	9f 90       	pop	r9
     9bc:	8f 90       	pop	r8
     9be:	08 95       	ret

000009c0 <req_gyro_turn>:
     9c0:	cf 93       	push	r28
     9c2:	df 93       	push	r29
     9c4:	1f 92       	push	r1
     9c6:	cd b7       	in	r28, 0x3d	; 61
     9c8:	de b7       	in	r29, 0x3e	; 62
     9ca:	87 e0       	ldi	r24, 0x07	; 7
     9cc:	89 83       	std	Y+1, r24	; 0x01
     9ce:	be 01       	movw	r22, r28
     9d0:	6f 5f       	subi	r22, 0xFF	; 255
     9d2:	7f 4f       	sbci	r23, 0xFF	; 255
     9d4:	86 e0       	ldi	r24, 0x06	; 6
     9d6:	86 df       	rcall	.-244    	; 0x8e4 <i2c_send>
     9d8:	81 e0       	ldi	r24, 0x01	; 1
     9da:	80 93 39 01 	sts	0x0139, r24
     9de:	87 ea       	ldi	r24, 0xA7	; 167
     9e0:	91 e6       	ldi	r25, 0x61	; 97
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	f1 f7       	brne	.-4      	; 0x9e2 <req_gyro_turn+0x22>
     9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <req_gyro_turn+0x28>
     9e8:	00 00       	nop
     9ea:	0f 90       	pop	r0
     9ec:	df 91       	pop	r29
     9ee:	cf 91       	pop	r28
     9f0:	08 95       	ret

000009f2 <manual_drive>:
     9f2:	20 91 2f 01 	lds	r18, 0x012F
     9f6:	30 91 30 01 	lds	r19, 0x0130
     9fa:	21 30       	cpi	r18, 0x01	; 1
     9fc:	31 05       	cpc	r19, r1
     9fe:	39 f4       	brne	.+14     	; 0xa0e <manual_drive+0x1c>
     a00:	86 e0       	ldi	r24, 0x06	; 6
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	90 93 32 01 	sts	0x0132, r25
     a08:	80 93 31 01 	sts	0x0131, r24
     a0c:	65 c0       	rjmp	.+202    	; 0xad8 <manual_drive+0xe6>
     a0e:	80 91 2d 01 	lds	r24, 0x012D
     a12:	90 91 2e 01 	lds	r25, 0x012E
     a16:	01 97       	sbiw	r24, 0x01	; 1
     a18:	39 f4       	brne	.+14     	; 0xa28 <manual_drive+0x36>
     a1a:	85 e0       	ldi	r24, 0x05	; 5
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	90 93 32 01 	sts	0x0132, r25
     a22:	80 93 31 01 	sts	0x0131, r24
     a26:	4e c0       	rjmp	.+156    	; 0xac4 <manual_drive+0xd2>
     a28:	80 91 31 01 	lds	r24, 0x0131
     a2c:	90 91 32 01 	lds	r25, 0x0132
     a30:	00 97       	sbiw	r24, 0x00	; 0
     a32:	29 f4       	brne	.+10     	; 0xa3e <manual_drive+0x4c>
     a34:	2e 98       	cbi	0x05, 6	; 5
     a36:	2d 98       	cbi	0x05, 5	; 5
     a38:	17 bc       	out	0x27, r1	; 39
     a3a:	18 bc       	out	0x28, r1	; 40
     a3c:	08 95       	ret
     a3e:	81 30       	cpi	r24, 0x01	; 1
     a40:	91 05       	cpc	r25, r1
     a42:	49 f4       	brne	.+18     	; 0xa56 <manual_drive+0x64>
     a44:	2e 98       	cbi	0x05, 6	; 5
     a46:	2d 98       	cbi	0x05, 5	; 5
     a48:	80 91 45 01 	lds	r24, 0x0145
     a4c:	87 bd       	out	0x27, r24	; 39
     a4e:	80 91 43 01 	lds	r24, 0x0143
     a52:	88 bd       	out	0x28, r24	; 40
     a54:	08 95       	ret
     a56:	82 30       	cpi	r24, 0x02	; 2
     a58:	91 05       	cpc	r25, r1
     a5a:	59 f4       	brne	.+22     	; 0xa72 <manual_drive+0x80>
     a5c:	85 b1       	in	r24, 0x05	; 5
     a5e:	80 66       	ori	r24, 0x60	; 96
     a60:	85 b9       	out	0x05, r24	; 5
     a62:	80 91 45 01 	lds	r24, 0x0145
     a66:	8d 50       	subi	r24, 0x0D	; 13
     a68:	87 bd       	out	0x27, r24	; 39
     a6a:	80 91 43 01 	lds	r24, 0x0143
     a6e:	88 bd       	out	0x28, r24	; 40
     a70:	08 95       	ret
     a72:	83 30       	cpi	r24, 0x03	; 3
     a74:	91 05       	cpc	r25, r1
     a76:	81 f4       	brne	.+32     	; 0xa98 <manual_drive+0xa6>
     a78:	2e 98       	cbi	0x05, 6	; 5
     a7a:	2d 98       	cbi	0x05, 5	; 5
     a7c:	80 91 45 01 	lds	r24, 0x0145
     a80:	87 bd       	out	0x27, r24	; 39
     a82:	20 91 43 01 	lds	r18, 0x0143
     a86:	90 91 44 01 	lds	r25, 0x0144
     a8a:	82 2f       	mov	r24, r18
     a8c:	63 e0       	ldi	r22, 0x03	; 3
     a8e:	70 e0       	ldi	r23, 0x00	; 0
     a90:	93 d5       	rcall	.+2854   	; 0x15b8 <__divmodhi4>
     a92:	26 1b       	sub	r18, r22
     a94:	28 bd       	out	0x28, r18	; 40
     a96:	08 95       	ret
     a98:	84 30       	cpi	r24, 0x04	; 4
     a9a:	91 05       	cpc	r25, r1
     a9c:	81 f4       	brne	.+32     	; 0xabe <manual_drive+0xcc>
     a9e:	2e 98       	cbi	0x05, 6	; 5
     aa0:	2d 98       	cbi	0x05, 5	; 5
     aa2:	20 91 45 01 	lds	r18, 0x0145
     aa6:	90 91 46 01 	lds	r25, 0x0146
     aaa:	82 2f       	mov	r24, r18
     aac:	63 e0       	ldi	r22, 0x03	; 3
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	83 d5       	rcall	.+2822   	; 0x15b8 <__divmodhi4>
     ab2:	26 1b       	sub	r18, r22
     ab4:	27 bd       	out	0x27, r18	; 39
     ab6:	80 91 43 01 	lds	r24, 0x0143
     aba:	88 bd       	out	0x28, r24	; 40
     abc:	08 95       	ret
     abe:	85 30       	cpi	r24, 0x05	; 5
     ac0:	91 05       	cpc	r25, r1
     ac2:	19 f4       	brne	.+6      	; 0xaca <manual_drive+0xd8>
     ac4:	7d df       	rcall	.-262    	; 0x9c0 <req_gyro_turn>
     ac6:	09 cd       	rjmp	.-1518   	; 0x4da <turn_right>
     ac8:	08 95       	ret
     aca:	06 97       	sbiw	r24, 0x06	; 6
     acc:	d9 f4       	brne	.+54     	; 0xb04 <manual_drive+0x112>
     ace:	23 2b       	or	r18, r19
     ad0:	19 f4       	brne	.+6      	; 0xad8 <manual_drive+0xe6>
     ad2:	76 df       	rcall	.-276    	; 0x9c0 <req_gyro_turn>
     ad4:	f8 cc       	rjmp	.-1552   	; 0x4c6 <turn_left>
     ad6:	08 95       	ret
     ad8:	80 91 39 01 	lds	r24, 0x0139
     adc:	81 11       	cpse	r24, r1
     ade:	09 c0       	rjmp	.+18     	; 0xaf2 <manual_drive+0x100>
     ae0:	10 92 32 01 	sts	0x0132, r1
     ae4:	10 92 31 01 	sts	0x0131, r1
     ae8:	10 92 2e 01 	sts	0x012E, r1
     aec:	10 92 2d 01 	sts	0x012D, r1
     af0:	08 95       	ret
     af2:	2d 98       	cbi	0x05, 5	; 5
     af4:	2e 9a       	sbi	0x05, 6	; 5
     af6:	80 91 45 01 	lds	r24, 0x0145
     afa:	87 bd       	out	0x27, r24	; 39
     afc:	80 91 43 01 	lds	r24, 0x0143
     b00:	88 bd       	out	0x28, r24	; 40
     b02:	08 95       	ret
     b04:	10 92 32 01 	sts	0x0132, r1
     b08:	10 92 31 01 	sts	0x0131, r1
     b0c:	08 95       	ret

00000b0e <PD_for_lab>:
     b0e:	2f 92       	push	r2
     b10:	3f 92       	push	r3
     b12:	4f 92       	push	r4
     b14:	5f 92       	push	r5
     b16:	6f 92       	push	r6
     b18:	7f 92       	push	r7
     b1a:	8f 92       	push	r8
     b1c:	9f 92       	push	r9
     b1e:	af 92       	push	r10
     b20:	bf 92       	push	r11
     b22:	cf 92       	push	r12
     b24:	df 92       	push	r13
     b26:	ef 92       	push	r14
     b28:	ff 92       	push	r15
     b2a:	0f 93       	push	r16
     b2c:	1f 93       	push	r17
     b2e:	cf 93       	push	r28
     b30:	df 93       	push	r29
     b32:	cd b7       	in	r28, 0x3d	; 61
     b34:	de b7       	in	r29, 0x3e	; 62
     b36:	2a 97       	sbiw	r28, 0x0a	; 10
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	f8 94       	cli
     b3c:	de bf       	out	0x3e, r29	; 62
     b3e:	0f be       	out	0x3f, r0	; 63
     b40:	cd bf       	out	0x3d, r28	; 61
     b42:	4c 01       	movw	r8, r24
     b44:	3a 01       	movw	r6, r20
     b46:	e0 90 06 01 	lds	r14, 0x0106
     b4a:	f0 90 07 01 	lds	r15, 0x0107
     b4e:	c7 01       	movw	r24, r14
     b50:	86 1b       	sub	r24, r22
     b52:	97 0b       	sbc	r25, r23
     b54:	9a 87       	std	Y+10, r25	; 0x0a
     b56:	89 87       	std	Y+9, r24	; 0x09
     b58:	40 90 27 01 	lds	r4, 0x0127
     b5c:	50 90 28 01 	lds	r5, 0x0128
     b60:	a0 90 0a 01 	lds	r10, 0x010A
     b64:	b0 90 0b 01 	lds	r11, 0x010B
     b68:	60 91 08 01 	lds	r22, 0x0108
     b6c:	70 91 09 01 	lds	r23, 0x0109
     b70:	07 2e       	mov	r0, r23
     b72:	00 0c       	add	r0, r0
     b74:	88 0b       	sbc	r24, r24
     b76:	99 0b       	sbc	r25, r25
     b78:	30 d4       	rcall	.+2144   	; 0x13da <__floatsisf>
     b7a:	69 83       	std	Y+1, r22	; 0x01
     b7c:	7a 83       	std	Y+2, r23	; 0x02
     b7e:	8b 83       	std	Y+3, r24	; 0x03
     b80:	9c 83       	std	Y+4, r25	; 0x04
     b82:	e9 85       	ldd	r30, Y+9	; 0x09
     b84:	fa 85       	ldd	r31, Y+10	; 0x0a
     b86:	ea 9d       	mul	r30, r10
     b88:	b0 01       	movw	r22, r0
     b8a:	eb 9d       	mul	r30, r11
     b8c:	70 0d       	add	r23, r0
     b8e:	fa 9d       	mul	r31, r10
     b90:	70 0d       	add	r23, r0
     b92:	11 24       	eor	r1, r1
     b94:	07 2e       	mov	r0, r23
     b96:	00 0c       	add	r0, r0
     b98:	88 0b       	sbc	r24, r24
     b9a:	99 0b       	sbc	r25, r25
     b9c:	1e d4       	rcall	.+2108   	; 0x13da <__floatsisf>
     b9e:	6d 83       	std	Y+5, r22	; 0x05
     ba0:	7e 83       	std	Y+6, r23	; 0x06
     ba2:	8f 83       	std	Y+7, r24	; 0x07
     ba4:	98 87       	std	Y+8, r25	; 0x08
     ba6:	62 01       	movw	r12, r4
     ba8:	cc 0c       	add	r12, r12
     baa:	dd 1c       	adc	r13, r13
     bac:	86 01       	movw	r16, r12
     bae:	02 5b       	subi	r16, 0xB2	; 178
     bb0:	1e 4f       	sbci	r17, 0xFE	; 254
     bb2:	f8 01       	movw	r30, r16
     bb4:	80 81       	ld	r24, Z
     bb6:	91 81       	ldd	r25, Z+1	; 0x01
     bb8:	69 85       	ldd	r22, Y+9	; 0x09
     bba:	7a 85       	ldd	r23, Y+10	; 0x0a
     bbc:	68 1b       	sub	r22, r24
     bbe:	79 0b       	sbc	r23, r25
     bc0:	07 2e       	mov	r0, r23
     bc2:	00 0c       	add	r0, r0
     bc4:	88 0b       	sbc	r24, r24
     bc6:	99 0b       	sbc	r25, r25
     bc8:	08 d4       	rcall	.+2064   	; 0x13da <__floatsisf>
     bca:	29 81       	ldd	r18, Y+1	; 0x01
     bcc:	3a 81       	ldd	r19, Y+2	; 0x02
     bce:	4b 81       	ldd	r20, Y+3	; 0x03
     bd0:	5c 81       	ldd	r21, Y+4	; 0x04
     bd2:	8f d4       	rcall	.+2334   	; 0x14f2 <__mulsf3>
     bd4:	9b 01       	movw	r18, r22
     bd6:	ac 01       	movw	r20, r24
     bd8:	6d 81       	ldd	r22, Y+5	; 0x05
     bda:	7e 81       	ldd	r23, Y+6	; 0x06
     bdc:	8f 81       	ldd	r24, Y+7	; 0x07
     bde:	98 85       	ldd	r25, Y+8	; 0x08
     be0:	fd d2       	rcall	.+1530   	; 0x11dc <__addsf3>
     be2:	20 e0       	ldi	r18, 0x00	; 0
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	40 e2       	ldi	r20, 0x20	; 32
     be8:	51 e4       	ldi	r21, 0x41	; 65
     bea:	5c d3       	rcall	.+1720   	; 0x12a4 <__divsf3>
     bec:	c3 d3       	rcall	.+1926   	; 0x1374 <__fixsfsi>
     bee:	1b 01       	movw	r2, r22
     bf0:	70 93 73 01 	sts	0x0173, r23
     bf4:	60 93 72 01 	sts	0x0172, r22
     bf8:	89 85       	ldd	r24, Y+9	; 0x09
     bfa:	9a 85       	ldd	r25, Y+10	; 0x0a
     bfc:	f8 01       	movw	r30, r16
     bfe:	91 83       	std	Z+1, r25	; 0x01
     c00:	80 83       	st	Z, r24
     c02:	f7 01       	movw	r30, r14
     c04:	e8 19       	sub	r30, r8
     c06:	f9 09       	sbc	r31, r9
     c08:	fe 83       	std	Y+6, r31	; 0x06
     c0a:	ed 83       	std	Y+5, r30	; 0x05
     c0c:	f0 93 6b 01 	sts	0x016B, r31
     c10:	e0 93 6a 01 	sts	0x016A, r30
     c14:	86 01       	movw	r16, r12
     c16:	02 59       	subi	r16, 0x92	; 146
     c18:	1e 4f       	sbci	r17, 0xFE	; 254
     c1a:	f8 01       	movw	r30, r16
     c1c:	80 81       	ld	r24, Z
     c1e:	91 81       	ldd	r25, Z+1	; 0x01
     c20:	6d 81       	ldd	r22, Y+5	; 0x05
     c22:	7e 81       	ldd	r23, Y+6	; 0x06
     c24:	68 1b       	sub	r22, r24
     c26:	79 0b       	sbc	r23, r25
     c28:	07 2e       	mov	r0, r23
     c2a:	00 0c       	add	r0, r0
     c2c:	88 0b       	sbc	r24, r24
     c2e:	99 0b       	sbc	r25, r25
     c30:	d4 d3       	rcall	.+1960   	; 0x13da <__floatsisf>
     c32:	6b 01       	movw	r12, r22
     c34:	7c 01       	movw	r14, r24
     c36:	60 93 29 01 	sts	0x0129, r22
     c3a:	70 93 2a 01 	sts	0x012A, r23
     c3e:	80 93 2b 01 	sts	0x012B, r24
     c42:	90 93 2c 01 	sts	0x012C, r25
     c46:	8d 81       	ldd	r24, Y+5	; 0x05
     c48:	9e 81       	ldd	r25, Y+6	; 0x06
     c4a:	a8 9e       	mul	r10, r24
     c4c:	b0 01       	movw	r22, r0
     c4e:	a9 9e       	mul	r10, r25
     c50:	70 0d       	add	r23, r0
     c52:	b8 9e       	mul	r11, r24
     c54:	70 0d       	add	r23, r0
     c56:	11 24       	eor	r1, r1
     c58:	07 2e       	mov	r0, r23
     c5a:	00 0c       	add	r0, r0
     c5c:	88 0b       	sbc	r24, r24
     c5e:	99 0b       	sbc	r25, r25
     c60:	bc d3       	rcall	.+1912   	; 0x13da <__floatsisf>
     c62:	4b 01       	movw	r8, r22
     c64:	5c 01       	movw	r10, r24
     c66:	a7 01       	movw	r20, r14
     c68:	96 01       	movw	r18, r12
     c6a:	69 81       	ldd	r22, Y+1	; 0x01
     c6c:	7a 81       	ldd	r23, Y+2	; 0x02
     c6e:	8b 81       	ldd	r24, Y+3	; 0x03
     c70:	9c 81       	ldd	r25, Y+4	; 0x04
     c72:	3f d4       	rcall	.+2174   	; 0x14f2 <__mulsf3>
     c74:	9b 01       	movw	r18, r22
     c76:	ac 01       	movw	r20, r24
     c78:	c5 01       	movw	r24, r10
     c7a:	b4 01       	movw	r22, r8
     c7c:	af d2       	rcall	.+1374   	; 0x11dc <__addsf3>
     c7e:	20 e0       	ldi	r18, 0x00	; 0
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	40 e2       	ldi	r20, 0x20	; 32
     c84:	51 e4       	ldi	r21, 0x41	; 65
     c86:	0e d3       	rcall	.+1564   	; 0x12a4 <__divsf3>
     c88:	75 d3       	rcall	.+1770   	; 0x1374 <__fixsfsi>
     c8a:	9b 01       	movw	r18, r22
     c8c:	70 93 62 01 	sts	0x0162, r23
     c90:	60 93 61 01 	sts	0x0161, r22
     c94:	8d 81       	ldd	r24, Y+5	; 0x05
     c96:	9e 81       	ldd	r25, Y+6	; 0x06
     c98:	f8 01       	movw	r30, r16
     c9a:	91 83       	std	Z+1, r25	; 0x01
     c9c:	80 83       	st	Z, r24
     c9e:	c2 01       	movw	r24, r4
     ca0:	01 96       	adiw	r24, 0x01	; 1
     ca2:	90 93 28 01 	sts	0x0128, r25
     ca6:	80 93 27 01 	sts	0x0127, r24
     caa:	40 91 04 01 	lds	r20, 0x0104
     cae:	50 91 05 01 	lds	r21, 0x0105
     cb2:	84 17       	cp	r24, r20
     cb4:	95 07       	cpc	r25, r21
     cb6:	24 f0       	brlt	.+8      	; 0xcc0 <PD_for_lab+0x1b2>
     cb8:	10 92 28 01 	sts	0x0128, r1
     cbc:	10 92 27 01 	sts	0x0127, r1
     cc0:	33 23       	and	r19, r19
     cc2:	2c f0       	brlt	.+10     	; 0xcce <PD_for_lab+0x1c0>
     cc4:	10 92 62 01 	sts	0x0162, r1
     cc8:	10 92 61 01 	sts	0x0161, r1
     ccc:	11 c0       	rjmp	.+34     	; 0xcf0 <PD_for_lab+0x1e2>
     cce:	87 b5       	in	r24, 0x27	; 39
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	91 95       	neg	r25
     cd4:	81 95       	neg	r24
     cd6:	91 09       	sbc	r25, r1
     cd8:	82 17       	cp	r24, r18
     cda:	93 07       	cpc	r25, r19
     cdc:	4c f0       	brlt	.+18     	; 0xcf0 <PD_for_lab+0x1e2>
     cde:	87 b5       	in	r24, 0x27	; 39
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	91 95       	neg	r25
     ce4:	81 95       	neg	r24
     ce6:	91 09       	sbc	r25, r1
     ce8:	90 93 62 01 	sts	0x0162, r25
     cec:	80 93 61 01 	sts	0x0161, r24
     cf0:	33 20       	and	r3, r3
     cf2:	2c f0       	brlt	.+10     	; 0xcfe <PD_for_lab+0x1f0>
     cf4:	10 92 73 01 	sts	0x0173, r1
     cf8:	10 92 72 01 	sts	0x0172, r1
     cfc:	11 c0       	rjmp	.+34     	; 0xd20 <PD_for_lab+0x212>
     cfe:	88 b5       	in	r24, 0x28	; 40
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	91 95       	neg	r25
     d04:	81 95       	neg	r24
     d06:	91 09       	sbc	r25, r1
     d08:	82 15       	cp	r24, r2
     d0a:	93 05       	cpc	r25, r3
     d0c:	4c f0       	brlt	.+18     	; 0xd20 <PD_for_lab+0x212>
     d0e:	88 b5       	in	r24, 0x28	; 40
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	91 95       	neg	r25
     d14:	81 95       	neg	r24
     d16:	91 09       	sbc	r25, r1
     d18:	90 93 73 01 	sts	0x0173, r25
     d1c:	80 93 72 01 	sts	0x0172, r24
     d20:	90 e2       	ldi	r25, 0x20	; 32
     d22:	69 16       	cp	r6, r25
     d24:	71 04       	cpc	r7, r1
     d26:	1c f4       	brge	.+6      	; 0xd2e <PD_for_lab+0x220>
     d28:	4b de       	rcall	.-874    	; 0x9c0 <req_gyro_turn>
     d2a:	cd db       	rcall	.-2150   	; 0x4c6 <turn_left>
     d2c:	2b c0       	rjmp	.+86     	; 0xd84 <PD_for_lab+0x276>
     d2e:	e0 91 27 01 	lds	r30, 0x0127
     d32:	f0 91 28 01 	lds	r31, 0x0128
     d36:	ee 0f       	add	r30, r30
     d38:	ff 1f       	adc	r31, r31
     d3a:	e2 59       	subi	r30, 0x92	; 146
     d3c:	fe 4f       	sbci	r31, 0xFE	; 254
     d3e:	80 81       	ld	r24, Z
     d40:	91 81       	ldd	r25, Z+1	; 0x01
     d42:	87 3f       	cpi	r24, 0xF7	; 247
     d44:	9f 4f       	sbci	r25, 0xFF	; 255
     d46:	94 f4       	brge	.+36     	; 0xd6c <PD_for_lab+0x25e>
     d48:	88 b5       	in	r24, 0x28	; 40
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	91 95       	neg	r25
     d4e:	81 95       	neg	r24
     d50:	91 09       	sbc	r25, r1
     d52:	90 93 73 01 	sts	0x0173, r25
     d56:	80 93 72 01 	sts	0x0172, r24
     d5a:	87 b5       	in	r24, 0x27	; 39
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	91 95       	neg	r25
     d60:	81 95       	neg	r24
     d62:	91 09       	sbc	r25, r1
     d64:	90 93 62 01 	sts	0x0162, r25
     d68:	80 93 61 01 	sts	0x0161, r24
     d6c:	90 91 61 01 	lds	r25, 0x0161
     d70:	80 91 45 01 	lds	r24, 0x0145
     d74:	89 0f       	add	r24, r25
     d76:	87 bd       	out	0x27, r24	; 39
     d78:	90 91 72 01 	lds	r25, 0x0172
     d7c:	80 91 43 01 	lds	r24, 0x0143
     d80:	89 0f       	add	r24, r25
     d82:	88 bd       	out	0x28, r24	; 40
     d84:	2a 96       	adiw	r28, 0x0a	; 10
     d86:	0f b6       	in	r0, 0x3f	; 63
     d88:	f8 94       	cli
     d8a:	de bf       	out	0x3e, r29	; 62
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	cd bf       	out	0x3d, r28	; 61
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	1f 91       	pop	r17
     d96:	0f 91       	pop	r16
     d98:	ff 90       	pop	r15
     d9a:	ef 90       	pop	r14
     d9c:	df 90       	pop	r13
     d9e:	cf 90       	pop	r12
     da0:	bf 90       	pop	r11
     da2:	af 90       	pop	r10
     da4:	9f 90       	pop	r9
     da6:	8f 90       	pop	r8
     da8:	7f 90       	pop	r7
     daa:	6f 90       	pop	r6
     dac:	5f 90       	pop	r5
     dae:	4f 90       	pop	r4
     db0:	3f 90       	pop	r3
     db2:	2f 90       	pop	r2
     db4:	08 95       	ret

00000db6 <labyreg>:
     db6:	f8 94       	cli
     db8:	40 91 65 01 	lds	r20, 0x0165
     dbc:	50 e0       	ldi	r21, 0x00	; 0
     dbe:	60 91 6d 01 	lds	r22, 0x016D
     dc2:	70 e0       	ldi	r23, 0x00	; 0
     dc4:	80 91 68 01 	lds	r24, 0x0168
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	78 94       	sei
     dcc:	a0 ce       	rjmp	.-704    	; 0xb0e <PD_for_lab>
     dce:	08 95       	ret

00000dd0 <regulator>:
     dd0:	80 91 0c 01 	lds	r24, 0x010C
     dd4:	90 91 0d 01 	lds	r25, 0x010D
     dd8:	81 30       	cpi	r24, 0x01	; 1
     dda:	91 05       	cpc	r25, r1
     ddc:	61 f4       	brne	.+24     	; 0xdf6 <regulator+0x26>
     dde:	80 91 3b 01 	lds	r24, 0x013B
     de2:	90 91 3c 01 	lds	r25, 0x013C
     de6:	01 97       	sbiw	r24, 0x01	; 1
     de8:	89 f4       	brne	.+34     	; 0xe0c <regulator+0x3c>
     dea:	78 dc       	rcall	.-1808   	; 0x6dc <linje_main>
     dec:	10 92 3c 01 	sts	0x013C, r1
     df0:	10 92 3b 01 	sts	0x013B, r1
     df4:	08 95       	ret
     df6:	89 2b       	or	r24, r25
     df8:	49 f4       	brne	.+18     	; 0xe0c <regulator+0x3c>
     dfa:	2d 98       	cbi	0x05, 5	; 5
     dfc:	2e 98       	cbi	0x05, 6	; 5
     dfe:	80 91 3a 01 	lds	r24, 0x013A
     e02:	88 23       	and	r24, r24
     e04:	19 f0       	breq	.+6      	; 0xe0c <regulator+0x3c>
     e06:	10 92 3a 01 	sts	0x013A, r1
     e0a:	d5 cf       	rjmp	.-86     	; 0xdb6 <labyreg>
     e0c:	08 95       	ret

00000e0e <i2c_recive>:
	byte* data;
	int counter=0;
	int start =TW_START;
	//int size = 0;

	TWCR |= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//START
     e0e:	ec eb       	ldi	r30, 0xBC	; 188
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	90 81       	ld	r25, Z
     e14:	94 6a       	ori	r25, 0xA4	; 164
     e16:	90 83       	st	Z, r25
	while(!(TWCR & (1<<TWINT))); //Wait for TWINT, START is now sent
     e18:	90 81       	ld	r25, Z
     e1a:	99 23       	and	r25, r25
     e1c:	ec f7       	brge	.-6      	; 0xe18 <i2c_recive+0xa>
	if((TWSR & 0xF8) != start) // om status en start eventuellt bara tw_start
     e1e:	90 91 b9 00 	lds	r25, 0x00B9
     e22:	98 7f       	andi	r25, 0xF8	; 248
     e24:	98 30       	cpi	r25, 0x08	; 8
     e26:	29 f0       	breq	.+10     	; 0xe32 <i2c_recive+0x24>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     e28:	84 e9       	ldi	r24, 0x94	; 148
     e2a:	80 93 bc 00 	sts	0x00BC, r24
		return false;
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	08 95       	ret
	}
	TWDR = prossesor | 0x01;	//adress och Read 
     e32:	81 60       	ori	r24, 0x01	; 1
     e34:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT)|(1<<TWEN);
     e38:	84 e8       	ldi	r24, 0x84	; 132
     e3a:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT))); // wait for SLA+R transmited and ACK/NACK recived
     e3e:	ec eb       	ldi	r30, 0xBC	; 188
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	80 81       	ld	r24, Z
     e44:	88 23       	and	r24, r24
     e46:	ec f7       	brge	.-6      	; 0xe42 <i2c_recive+0x34>
	if((TWSR & 0xF8) != TW_MR_SLA_ACK) // om slav adress har skickats och ack har fåtts
     e48:	80 91 b9 00 	lds	r24, 0x00B9
     e4c:	88 7f       	andi	r24, 0xF8	; 248
     e4e:	80 34       	cpi	r24, 0x40	; 64
     e50:	29 f0       	breq	.+10     	; 0xe5c <i2c_recive+0x4e>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     e52:	84 e9       	ldi	r24, 0x94	; 148
     e54:	80 93 bc 00 	sts	0x00BC, r24
		return false;
     e58:	80 e0       	ldi	r24, 0x00	; 0
     e5a:	08 95       	ret
	}
	
	TWCR |= (1<<TWINT)|(1<<TWEN);
     e5c:	ec eb       	ldi	r30, 0xBC	; 188
     e5e:	f0 e0       	ldi	r31, 0x00	; 0
     e60:	80 81       	ld	r24, Z
     e62:	84 68       	ori	r24, 0x84	; 132
     e64:	80 83       	st	Z, r24
	while(!(TWCR & (1<<TWINT)));
     e66:	80 81       	ld	r24, Z
     e68:	88 23       	and	r24, r24
     e6a:	ec f7       	brge	.-6      	; 0xe66 <i2c_recive+0x58>
	}*/
	/*if(counter == 0){
		data = data[(TWDR>>4) & 0x0f];
		size= (TWDR>>4) & 0x0f;
	}*/
	data = TWDR; //ta emot data 
     e6c:	80 91 bb 00 	lds	r24, 0x00BB
	counter++;	
	start=TW_REP_START;
	//TWCR = (1<<TWINT);
	//while(!(TWCR & (1<<TWINT)));
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     e70:	94 e9       	ldi	r25, 0x94	; 148
     e72:	90 93 bc 00 	sts	0x00BC, r25
	return data;
}
     e76:	08 95       	ret

00000e78 <i2c_store_data>:

void i2c_store_data(byte data) //bygger ihop data till en aray liknande den som blev skickad och sätter flaggan i2c_newdata då all data i ett paket motaget
{
	static int counter;
	static int size;
	if(counter == 0){ //om första databiten ta ut mängd data som kommer komma 
     e78:	20 91 10 01 	lds	r18, 0x0110
     e7c:	30 91 11 01 	lds	r19, 0x0111
     e80:	21 15       	cp	r18, r1
     e82:	31 05       	cpc	r19, r1
     e84:	89 f4       	brne	.+34     	; 0xea8 <i2c_store_data+0x30>
		size = (data>>4) & 0x0f;
     e86:	28 2f       	mov	r18, r24
     e88:	22 95       	swap	r18
     e8a:	2f 70       	andi	r18, 0x0F	; 15
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	30 93 0f 01 	sts	0x010F, r19
     e92:	20 93 0e 01 	sts	0x010E, r18
		i2c_data[counter] = data;
     e96:	80 93 50 01 	sts	0x0150, r24
		counter++;
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	90 93 11 01 	sts	0x0111, r25
     ea2:	80 93 10 01 	sts	0x0110, r24
     ea6:	18 c0       	rjmp	.+48     	; 0xed8 <i2c_store_data+0x60>
	}
	else if(counter < size+1){ //fyll på arayen med data
     ea8:	40 91 0e 01 	lds	r20, 0x010E
     eac:	50 91 0f 01 	lds	r21, 0x010F
     eb0:	4f 5f       	subi	r20, 0xFF	; 255
     eb2:	5f 4f       	sbci	r21, 0xFF	; 255
     eb4:	24 17       	cp	r18, r20
     eb6:	35 07       	cpc	r19, r21
     eb8:	5c f4       	brge	.+22     	; 0xed0 <i2c_store_data+0x58>
		i2c_data[counter] = data;
     eba:	f9 01       	movw	r30, r18
     ebc:	e0 5b       	subi	r30, 0xB0	; 176
     ebe:	fe 4f       	sbci	r31, 0xFE	; 254
     ec0:	80 83       	st	Z, r24
		counter++;
     ec2:	2f 5f       	subi	r18, 0xFF	; 255
     ec4:	3f 4f       	sbci	r19, 0xFF	; 255
     ec6:	30 93 11 01 	sts	0x0111, r19
     eca:	20 93 10 01 	sts	0x0110, r18
     ece:	04 c0       	rjmp	.+8      	; 0xed8 <i2c_store_data+0x60>
	}
	else{
		i2c_data[counter] = data;
     ed0:	f9 01       	movw	r30, r18
     ed2:	e0 5b       	subi	r30, 0xB0	; 176
     ed4:	fe 4f       	sbci	r31, 0xFE	; 254
     ed6:	80 83       	st	Z, r24
	}
	if(counter>=size+1){ // aray färdig all data motagen
     ed8:	80 91 0e 01 	lds	r24, 0x010E
     edc:	90 91 0f 01 	lds	r25, 0x010F
     ee0:	01 96       	adiw	r24, 0x01	; 1
     ee2:	20 91 10 01 	lds	r18, 0x0110
     ee6:	30 91 11 01 	lds	r19, 0x0111
     eea:	28 17       	cp	r18, r24
     eec:	39 07       	cpc	r19, r25
     eee:	44 f0       	brlt	.+16     	; 0xf00 <i2c_store_data+0x88>
		i2c_newdata = true;
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	80 93 16 01 	sts	0x0116, r24
		counter = 0;
     ef6:	10 92 11 01 	sts	0x0111, r1
     efa:	10 92 10 01 	sts	0x0110, r1
		EIMSK &= ~(1<<INT0);
     efe:	e8 98       	cbi	0x1d, 0	; 29
     f00:	08 95       	ret

00000f02 <__vector_1>:
byte i2c_data[15];
bool i2c_newdata=false;
int Reflex_data;
//aidshub was here
ISR(INT0_vect)// händer om annan processor kör request to send
{	
     f02:	1f 92       	push	r1
     f04:	0f 92       	push	r0
     f06:	0f b6       	in	r0, 0x3f	; 63
     f08:	0f 92       	push	r0
     f0a:	11 24       	eor	r1, r1
     f0c:	0b b6       	in	r0, 0x3b	; 59
     f0e:	0f 92       	push	r0
     f10:	2f 93       	push	r18
     f12:	3f 93       	push	r19
     f14:	4f 93       	push	r20
     f16:	5f 93       	push	r21
     f18:	6f 93       	push	r22
     f1a:	7f 93       	push	r23
     f1c:	8f 93       	push	r24
     f1e:	9f 93       	push	r25
     f20:	af 93       	push	r26
     f22:	bf 93       	push	r27
     f24:	ef 93       	push	r30
     f26:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f28:	00 00       	nop
	_delay_us(1);
	if (PINC&(1<< PC6)){	//komunikation vill skicka
     f2a:	36 9b       	sbis	0x06, 6	; 6
     f2c:	04 c0       	rjmp	.+8      	; 0xf36 <__vector_1+0x34>
		i2c_store_data(i2c_recive(0x02)); // adress processor 1
     f2e:	82 e0       	ldi	r24, 0x02	; 2
     f30:	6e df       	rcall	.-292    	; 0xe0e <i2c_recive>
     f32:	a2 df       	rcall	.-188    	; 0xe78 <i2c_store_data>
     f34:	05 c0       	rjmp	.+10     	; 0xf40 <__vector_1+0x3e>
		//PORTD ^=(1 << PD0);
	}
	else if(PINC&(1<< PC7)){ //sensor vill skicka  
     f36:	37 9b       	sbis	0x06, 7	; 6
     f38:	03 c0       	rjmp	.+6      	; 0xf40 <__vector_1+0x3e>
		i2c_store_data(i2c_recive(0x06)); // adress processor 3
     f3a:	86 e0       	ldi	r24, 0x06	; 6
     f3c:	68 df       	rcall	.-304    	; 0xe0e <i2c_recive>
     f3e:	9c df       	rcall	.-200    	; 0xe78 <i2c_store_data>
	}
}
     f40:	ff 91       	pop	r31
     f42:	ef 91       	pop	r30
     f44:	bf 91       	pop	r27
     f46:	af 91       	pop	r26
     f48:	9f 91       	pop	r25
     f4a:	8f 91       	pop	r24
     f4c:	7f 91       	pop	r23
     f4e:	6f 91       	pop	r22
     f50:	5f 91       	pop	r21
     f52:	4f 91       	pop	r20
     f54:	3f 91       	pop	r19
     f56:	2f 91       	pop	r18
     f58:	0f 90       	pop	r0
     f5a:	0b be       	out	0x3b, r0	; 59
     f5c:	0f 90       	pop	r0
     f5e:	0f be       	out	0x3f, r0	; 63
     f60:	0f 90       	pop	r0
     f62:	1f 90       	pop	r1
     f64:	18 95       	reti

00000f66 <i2c_handel_data>:
	}

}

void i2c_handel_data(void){ //hanterar den motagna datan och läger den på rätt plats och skickar vidare sensordata till komunikation
	if(i2c_newdata==true)
     f66:	80 91 16 01 	lds	r24, 0x0116
     f6a:	88 23       	and	r24, r24
     f6c:	09 f4       	brne	.+2      	; 0xf70 <i2c_handel_data+0xa>
     f6e:	f0 c0       	rjmp	.+480    	; 0x1150 <i2c_handel_data+0x1ea>
	{
		i2c_newdata=false;
     f70:	10 92 16 01 	sts	0x0116, r1
		if(!((i2c_data[0]>>3)&0x01)){
     f74:	80 91 50 01 	lds	r24, 0x0150
     f78:	83 fd       	sbrc	r24, 3
     f7a:	07 c0       	rjmp	.+14     	; 0xf8a <i2c_handel_data+0x24>
     f7c:	84 e6       	ldi	r24, 0x64	; 100
     f7e:	8a 95       	dec	r24
     f80:	f1 f7       	brne	.-4      	; 0xf7e <i2c_handel_data+0x18>
			_delay_us(300);
			i2c_send(0x02,i2c_data);// send to komunikation
     f82:	60 e5       	ldi	r22, 0x50	; 80
     f84:	71 e0       	ldi	r23, 0x01	; 1
     f86:	82 e0       	ldi	r24, 0x02	; 2
     f88:	ad dc       	rcall	.-1702   	; 0x8e4 <i2c_send>
		}
		switch (i2c_data[0] & 0x0f){
     f8a:	80 91 50 01 	lds	r24, 0x0150
     f8e:	e8 2f       	mov	r30, r24
     f90:	ef 70       	andi	r30, 0x0F	; 15
     f92:	8e 2f       	mov	r24, r30
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	fc 01       	movw	r30, r24
     f98:	ea 5b       	subi	r30, 0xBA	; 186
     f9a:	ff 4f       	sbci	r31, 0xFF	; 255
     f9c:	20 c3       	rjmp	.+1600   	; 0x15de <__tablejump2__>
			case 0x00 ://batteri nivå
				batteri=i2c_data[1],i2c_data[2];
     f9e:	80 91 51 01 	lds	r24, 0x0151
     fa2:	80 93 69 01 	sts	0x0169, r24
				break;
     fa6:	d3 c0       	rjmp	.+422    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x01 ://avståndssensorer
				distans_right = i2c_data[3];
     fa8:	e0 e5       	ldi	r30, 0x50	; 80
     faa:	f1 e0       	ldi	r31, 0x01	; 1
     fac:	83 81       	ldd	r24, Z+3	; 0x03
     fae:	80 93 6d 01 	sts	0x016D, r24
				distans_fram = i2c_data[2];;
     fb2:	82 81       	ldd	r24, Z+2	; 0x02
     fb4:	80 93 65 01 	sts	0x0165, r24
				distans_left = i2c_data[1];
     fb8:	81 81       	ldd	r24, Z+1	; 0x01
     fba:	80 93 68 01 	sts	0x0168, r24
				//updaterad_labyrint = true;
				break;
     fbe:	c7 c0       	rjmp	.+398    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x02 :// refelxsensor data
				regler_ready_linje = 1;					// Ny data har lästs in då uppdaterar vi regleringen
     fc0:	81 e0       	ldi	r24, 0x01	; 1
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	90 93 3c 01 	sts	0x013C, r25
     fc8:	80 93 3b 01 	sts	0x013B, r24
				Reflex_data = (i2c_data[2]<<8) + i2c_data[1];
     fcc:	e0 e5       	ldi	r30, 0x50	; 80
     fce:	f1 e0       	ldi	r31, 0x01	; 1
     fd0:	82 81       	ldd	r24, Z+2	; 0x02
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	98 2f       	mov	r25, r24
     fd6:	88 27       	eor	r24, r24
     fd8:	21 81       	ldd	r18, Z+1	; 0x01
     fda:	82 0f       	add	r24, r18
     fdc:	91 1d       	adc	r25, r1
     fde:	90 93 60 01 	sts	0x0160, r25
     fe2:	80 93 5f 01 	sts	0x015F, r24
				Reflex_data2 = i2c_data[3];// går inte att få in mer än 16 bitar i en int...
     fe6:	83 81       	ldd	r24, Z+3	; 0x03
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	90 93 71 01 	sts	0x0171, r25
     fee:	80 93 70 01 	sts	0x0170, r24
				break;
     ff2:	ad c0       	rjmp	.+346    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x03 :
				RGB_data=1;//"röd";"
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	80 93 6c 01 	sts	0x016C, r24
				break;
     ffa:	a9 c0       	rjmp	.+338    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x04 :
				RGB_data=2;//"grön";
     ffc:	82 e0       	ldi	r24, 0x02	; 2
     ffe:	80 93 6c 01 	sts	0x016C, r24
				break;		
    1002:	a5 c0       	rjmp	.+330    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x05 :
				RGB_data=3;//"blå";
    1004:	83 e0       	ldi	r24, 0x03	; 3
    1006:	80 93 6c 01 	sts	0x016C, r24
				break;
    100a:	a1 c0       	rjmp	.+322    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x06 : // gyro klart
				gyro_90 = true;
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	80 93 4d 01 	sts	0x014D, r24
				turning = false;
    1012:	10 92 39 01 	sts	0x0139, r1
				start = 0;
    1016:	10 92 48 01 	sts	0x0148, r1
    101a:	10 92 47 01 	sts	0x0147, r1
				break;
    101e:	97 c0       	rjmp	.+302    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x07 :// gyro data
				// Kod vi skickar till sensor
				break;
			case 0x08 : // manuel stå still
				manual_function=0;
    1020:	10 92 32 01 	sts	0x0132, r1
    1024:	10 92 31 01 	sts	0x0131, r1
				break;
    1028:	92 c0       	rjmp	.+292    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x09 : //manuel kar rakt fram
				manual_function=1;			
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	90 93 32 01 	sts	0x0132, r25
    1032:	80 93 31 01 	sts	0x0131, r24
				break;
    1036:	8b c0       	rjmp	.+278    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x0a : //manuel kör bakåt
				manual_function=2;				
    1038:	82 e0       	ldi	r24, 0x02	; 2
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	90 93 32 01 	sts	0x0132, r25
    1040:	80 93 31 01 	sts	0x0131, r24
				break;
    1044:	84 c0       	rjmp	.+264    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x0b ://manuel vänster fram
				manual_function=4;
    1046:	84 e0       	ldi	r24, 0x04	; 4
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	90 93 32 01 	sts	0x0132, r25
    104e:	80 93 31 01 	sts	0x0131, r24
				break;
    1052:	7d c0       	rjmp	.+250    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x0c ://manuel höger fram
				manual_function=3;
    1054:	83 e0       	ldi	r24, 0x03	; 3
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	90 93 32 01 	sts	0x0132, r25
    105c:	80 93 31 01 	sts	0x0131, r24
				break;
    1060:	76 c0       	rjmp	.+236    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x0d :// spin på stället åt vänster
				manual_function=6;
    1062:	86 e0       	ldi	r24, 0x06	; 6
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	90 93 32 01 	sts	0x0132, r25
    106a:	80 93 31 01 	sts	0x0131, r24
				break;
    106e:	6f c0       	rjmp	.+222    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x0e :// spin på stället åt höger
				manual_function=5;
    1070:	85 e0       	ldi	r24, 0x05	; 5
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	90 93 32 01 	sts	0x0132, r25
    1078:	80 93 31 01 	sts	0x0131, r24
				break;
    107c:	68 c0       	rjmp	.+208    	; 0x114e <i2c_handel_data+0x1e8>
			case 0x0f :	// GUI skickar en extra byte där vi behandlar knapparna "man/auto" samt "start" (av/på) (används för extrafunktioner i almenhet som inte får plats i vanliga data tabellen)
				if(i2c_data[1]==0xf0){
    107e:	80 91 51 01 	lds	r24, 0x0151
    1082:	80 3f       	cpi	r24, 0xF0	; 240
    1084:	91 f4       	brne	.+36     	; 0x10aa <i2c_handel_data+0x144>
					if(start==1){
    1086:	80 91 47 01 	lds	r24, 0x0147
    108a:	90 91 48 01 	lds	r25, 0x0148
    108e:	01 97       	sbiw	r24, 0x01	; 1
    1090:	29 f4       	brne	.+10     	; 0x109c <i2c_handel_data+0x136>
						start=0;
    1092:	10 92 48 01 	sts	0x0148, r1
    1096:	10 92 47 01 	sts	0x0147, r1
    109a:	59 c0       	rjmp	.+178    	; 0x114e <i2c_handel_data+0x1e8>
					}
					else{
						start=1;
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	90 93 48 01 	sts	0x0148, r25
    10a4:	80 93 47 01 	sts	0x0147, r24
    10a8:	52 c0       	rjmp	.+164    	; 0x114e <i2c_handel_data+0x1e8>
					}
				}
				else if(i2c_data[1]==0x0f){
    10aa:	8f 30       	cpi	r24, 0x0F	; 15
    10ac:	f1 f4       	brne	.+60     	; 0x10ea <i2c_handel_data+0x184>
					if(drive_mode==1){
    10ae:	80 91 49 01 	lds	r24, 0x0149
    10b2:	90 91 4a 01 	lds	r25, 0x014A
    10b6:	01 97       	sbiw	r24, 0x01	; 1
    10b8:	59 f4       	brne	.+22     	; 0x10d0 <i2c_handel_data+0x16a>
						PORTD |= (1 << PD1);
    10ba:	59 9a       	sbi	0x0b, 1	; 11
						PORTD &= ~(1 << PD0);
    10bc:	58 98       	cbi	0x0b, 0	; 11
						drive_mode=0;
    10be:	10 92 4a 01 	sts	0x014A, r1
    10c2:	10 92 49 01 	sts	0x0149, r1
						start=0;
    10c6:	10 92 48 01 	sts	0x0148, r1
    10ca:	10 92 47 01 	sts	0x0147, r1
    10ce:	3f c0       	rjmp	.+126    	; 0x114e <i2c_handel_data+0x1e8>
					}
					else{
						PORTD |= (1 << PD0);
    10d0:	58 9a       	sbi	0x0b, 0	; 11
						PORTD &= ~(1 << PD1);
    10d2:	59 98       	cbi	0x0b, 1	; 11
						drive_mode=1;
    10d4:	81 e0       	ldi	r24, 0x01	; 1
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	90 93 4a 01 	sts	0x014A, r25
    10dc:	80 93 49 01 	sts	0x0149, r24
						start=0;
    10e0:	10 92 48 01 	sts	0x0148, r1
    10e4:	10 92 47 01 	sts	0x0147, r1
    10e8:	32 c0       	rjmp	.+100    	; 0x114e <i2c_handel_data+0x1e8>
					}
				}
				else if(i2c_data[1]==0x00){			// Ändra P och D konstant för linje
    10ea:	81 11       	cpse	r24, r1
    10ec:	0f c0       	rjmp	.+30     	; 0x110c <i2c_handel_data+0x1a6>
					d_constant = i2c_data[2];
    10ee:	e0 e5       	ldi	r30, 0x50	; 80
    10f0:	f1 e0       	ldi	r31, 0x01	; 1
    10f2:	82 81       	ldd	r24, Z+2	; 0x02
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	90 93 01 01 	sts	0x0101, r25
    10fa:	80 93 00 01 	sts	0x0100, r24
					p_constant = i2c_data[3];
    10fe:	83 81       	ldd	r24, Z+3	; 0x03
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	90 93 03 01 	sts	0x0103, r25
    1106:	80 93 02 01 	sts	0x0102, r24
    110a:	21 c0       	rjmp	.+66     	; 0x114e <i2c_handel_data+0x1e8>
				}
				else if(i2c_data[1]==0x01){			// Ändra P och D konstant för labyrint
    110c:	81 30       	cpi	r24, 0x01	; 1
    110e:	79 f4       	brne	.+30     	; 0x112e <i2c_handel_data+0x1c8>
					d_constant_lab = i2c_data[2];
    1110:	e0 e5       	ldi	r30, 0x50	; 80
    1112:	f1 e0       	ldi	r31, 0x01	; 1
    1114:	82 81       	ldd	r24, Z+2	; 0x02
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	90 93 09 01 	sts	0x0109, r25
    111c:	80 93 08 01 	sts	0x0108, r24
					p_constant_lab = i2c_data[3];
    1120:	83 81       	ldd	r24, Z+3	; 0x03
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	90 93 0b 01 	sts	0x010B, r25
    1128:	80 93 0a 01 	sts	0x010A, r24
    112c:	10 c0       	rjmp	.+32     	; 0x114e <i2c_handel_data+0x1e8>
				}
				else if(i2c_data[1]==0x02){
    112e:	82 30       	cpi	r24, 0x02	; 2
    1130:	71 f4       	brne	.+28     	; 0x114e <i2c_handel_data+0x1e8>
					left = i2c_data[2];
    1132:	e0 e5       	ldi	r30, 0x50	; 80
    1134:	f1 e0       	ldi	r31, 0x01	; 1
    1136:	82 81       	ldd	r24, Z+2	; 0x02
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	90 93 46 01 	sts	0x0146, r25
    113e:	80 93 45 01 	sts	0x0145, r24
					right = i2c_data[3];
    1142:	83 81       	ldd	r24, Z+3	; 0x03
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	90 93 44 01 	sts	0x0144, r25
    114a:	80 93 43 01 	sts	0x0143, r24
				
				break;		
			default :
				break;
		}
		EIMSK |= (1<<INT0);
    114e:	e8 9a       	sbi	0x1d, 0	; 29
    1150:	08 95       	ret

00001152 <main>:
#include "i2c_master.c"


int main(void)
{
	interrupt_init();
    1152:	67 db       	rcall	.-2354   	; 0x822 <interrupt_init>
	board_init();
    1154:	0e 94 76 00 	call	0xec	; 0xec <board_init>
	initengine();
    1158:	03 db       	rcall	.-2554   	; 0x760 <initengine>
	timerinit();
    115a:	0f db       	rcall	.-2530   	; 0x77a <timerinit>
	i2c_setup(1);
    115c:	81 e0       	ldi	r24, 0x01	; 1
    115e:	b2 db       	rcall	.-2204   	; 0x8c4 <i2c_setup>
	sei();
    1160:	78 94       	sei
	//***********Set motors speed value here *****************
	left=130*0;				// kanske räcker med en variable för båda om båda kör exakt lika fort
    1162:	10 92 46 01 	sts	0x0146, r1
    1166:	10 92 45 01 	sts	0x0145, r1
	right=120*0;
    116a:	10 92 44 01 	sts	0x0144, r1
    116e:	10 92 43 01 	sts	0x0143, r1
	//********************************************************
	motor_left=left;
    1172:	17 bc       	out	0x27, r1	; 39
	motor_right=right;
    1174:	80 91 43 01 	lds	r24, 0x0143
    1178:	88 bd       	out	0x28, r24	; 40
	while(1){
		i2c_handel_data();  //test av fregulito
    117a:	f5 de       	rcall	.-534    	; 0xf66 <i2c_handel_data>
		if(turning)
    117c:	80 91 39 01 	lds	r24, 0x0139
    1180:	81 11       	cpse	r24, r1
    1182:	fb cf       	rjmp	.-10     	; 0x117a <main+0x28>
			;
		else if(drive_mode == 1){						// Drivemode is auto    // (drive_mode == 1 && start == 1)
    1184:	80 91 49 01 	lds	r24, 0x0149
    1188:	90 91 4a 01 	lds	r25, 0x014A
    118c:	81 30       	cpi	r24, 0x01	; 1
    118e:	91 05       	cpc	r25, r1
    1190:	f9 f4       	brne	.+62     	; 0x11d0 <main+0x7e>
			//current_position = arre[count_arre];	// används för att simulera linjeföljning, arrayen ändras i globala
			if((gyro_left == 1)|| (gyro_right == 1)){
    1192:	80 91 2f 01 	lds	r24, 0x012F
    1196:	90 91 30 01 	lds	r25, 0x0130
    119a:	01 97       	sbiw	r24, 0x01	; 1
    119c:	31 f0       	breq	.+12     	; 0x11aa <main+0x58>
    119e:	80 91 2d 01 	lds	r24, 0x012D
    11a2:	90 91 2e 01 	lds	r25, 0x012E
    11a6:	01 97       	sbiw	r24, 0x01	; 1
    11a8:	29 f4       	brne	.+10     	; 0x11b4 <main+0x62>
				drive_mode = 0;
    11aa:	10 92 4a 01 	sts	0x014A, r1
    11ae:	10 92 49 01 	sts	0x0149, r1
    11b2:	e3 cf       	rjmp	.-58     	; 0x117a <main+0x28>
			}
			else if(start == 1){
    11b4:	80 91 47 01 	lds	r24, 0x0147
    11b8:	90 91 48 01 	lds	r25, 0x0148
    11bc:	81 30       	cpi	r24, 0x01	; 1
    11be:	91 05       	cpc	r25, r1
    11c0:	11 f4       	brne	.+4      	; 0x11c6 <main+0x74>
				regulator();	
    11c2:	06 de       	rcall	.-1012   	; 0xdd0 <regulator>
    11c4:	da cf       	rjmp	.-76     	; 0x117a <main+0x28>
			}
			else if(start == 0){					// if start is zero then turn off the auto, stops motors
    11c6:	89 2b       	or	r24, r25
    11c8:	c1 f6       	brne	.-80     	; 0x117a <main+0x28>
				motor_left=0;
    11ca:	17 bc       	out	0x27, r1	; 39
				motor_right=0;
    11cc:	18 bc       	out	0x28, r1	; 40
    11ce:	d5 cf       	rjmp	.-86     	; 0x117a <main+0x28>
				}
			}
		else if(drive_mode==0){										// Drivemode is manual
    11d0:	89 2b       	or	r24, r25
    11d2:	99 f6       	brne	.-90     	; 0x117a <main+0x28>
			PORTD |= (1 << PD1);
    11d4:	59 9a       	sbi	0x0b, 1	; 11
			manual_drive();
    11d6:	0d dc       	rcall	.-2022   	; 0x9f2 <manual_drive>
    11d8:	d0 cf       	rjmp	.-96     	; 0x117a <main+0x28>

000011da <__subsf3>:
    11da:	50 58       	subi	r21, 0x80	; 128

000011dc <__addsf3>:
    11dc:	bb 27       	eor	r27, r27
    11de:	aa 27       	eor	r26, r26
    11e0:	0e d0       	rcall	.+28     	; 0x11fe <__addsf3x>
    11e2:	4d c1       	rjmp	.+666    	; 0x147e <__fp_round>
    11e4:	3e d1       	rcall	.+636    	; 0x1462 <__fp_pscA>
    11e6:	30 f0       	brcs	.+12     	; 0x11f4 <__addsf3+0x18>
    11e8:	43 d1       	rcall	.+646    	; 0x1470 <__fp_pscB>
    11ea:	20 f0       	brcs	.+8      	; 0x11f4 <__addsf3+0x18>
    11ec:	31 f4       	brne	.+12     	; 0x11fa <__addsf3+0x1e>
    11ee:	9f 3f       	cpi	r25, 0xFF	; 255
    11f0:	11 f4       	brne	.+4      	; 0x11f6 <__addsf3+0x1a>
    11f2:	1e f4       	brtc	.+6      	; 0x11fa <__addsf3+0x1e>
    11f4:	33 c1       	rjmp	.+614    	; 0x145c <__fp_nan>
    11f6:	0e f4       	brtc	.+2      	; 0x11fa <__addsf3+0x1e>
    11f8:	e0 95       	com	r30
    11fa:	e7 fb       	bst	r30, 7
    11fc:	29 c1       	rjmp	.+594    	; 0x1450 <__fp_inf>

000011fe <__addsf3x>:
    11fe:	e9 2f       	mov	r30, r25
    1200:	4f d1       	rcall	.+670    	; 0x14a0 <__fp_split3>
    1202:	80 f3       	brcs	.-32     	; 0x11e4 <__addsf3+0x8>
    1204:	ba 17       	cp	r27, r26
    1206:	62 07       	cpc	r22, r18
    1208:	73 07       	cpc	r23, r19
    120a:	84 07       	cpc	r24, r20
    120c:	95 07       	cpc	r25, r21
    120e:	18 f0       	brcs	.+6      	; 0x1216 <__addsf3x+0x18>
    1210:	71 f4       	brne	.+28     	; 0x122e <__addsf3x+0x30>
    1212:	9e f5       	brtc	.+102    	; 0x127a <__addsf3x+0x7c>
    1214:	67 c1       	rjmp	.+718    	; 0x14e4 <__fp_zero>
    1216:	0e f4       	brtc	.+2      	; 0x121a <__addsf3x+0x1c>
    1218:	e0 95       	com	r30
    121a:	0b 2e       	mov	r0, r27
    121c:	ba 2f       	mov	r27, r26
    121e:	a0 2d       	mov	r26, r0
    1220:	0b 01       	movw	r0, r22
    1222:	b9 01       	movw	r22, r18
    1224:	90 01       	movw	r18, r0
    1226:	0c 01       	movw	r0, r24
    1228:	ca 01       	movw	r24, r20
    122a:	a0 01       	movw	r20, r0
    122c:	11 24       	eor	r1, r1
    122e:	ff 27       	eor	r31, r31
    1230:	59 1b       	sub	r21, r25
    1232:	99 f0       	breq	.+38     	; 0x125a <__addsf3x+0x5c>
    1234:	59 3f       	cpi	r21, 0xF9	; 249
    1236:	50 f4       	brcc	.+20     	; 0x124c <__addsf3x+0x4e>
    1238:	50 3e       	cpi	r21, 0xE0	; 224
    123a:	68 f1       	brcs	.+90     	; 0x1296 <__addsf3x+0x98>
    123c:	1a 16       	cp	r1, r26
    123e:	f0 40       	sbci	r31, 0x00	; 0
    1240:	a2 2f       	mov	r26, r18
    1242:	23 2f       	mov	r18, r19
    1244:	34 2f       	mov	r19, r20
    1246:	44 27       	eor	r20, r20
    1248:	58 5f       	subi	r21, 0xF8	; 248
    124a:	f3 cf       	rjmp	.-26     	; 0x1232 <__addsf3x+0x34>
    124c:	46 95       	lsr	r20
    124e:	37 95       	ror	r19
    1250:	27 95       	ror	r18
    1252:	a7 95       	ror	r26
    1254:	f0 40       	sbci	r31, 0x00	; 0
    1256:	53 95       	inc	r21
    1258:	c9 f7       	brne	.-14     	; 0x124c <__addsf3x+0x4e>
    125a:	7e f4       	brtc	.+30     	; 0x127a <__addsf3x+0x7c>
    125c:	1f 16       	cp	r1, r31
    125e:	ba 0b       	sbc	r27, r26
    1260:	62 0b       	sbc	r22, r18
    1262:	73 0b       	sbc	r23, r19
    1264:	84 0b       	sbc	r24, r20
    1266:	ba f0       	brmi	.+46     	; 0x1296 <__addsf3x+0x98>
    1268:	91 50       	subi	r25, 0x01	; 1
    126a:	a1 f0       	breq	.+40     	; 0x1294 <__addsf3x+0x96>
    126c:	ff 0f       	add	r31, r31
    126e:	bb 1f       	adc	r27, r27
    1270:	66 1f       	adc	r22, r22
    1272:	77 1f       	adc	r23, r23
    1274:	88 1f       	adc	r24, r24
    1276:	c2 f7       	brpl	.-16     	; 0x1268 <__addsf3x+0x6a>
    1278:	0e c0       	rjmp	.+28     	; 0x1296 <__addsf3x+0x98>
    127a:	ba 0f       	add	r27, r26
    127c:	62 1f       	adc	r22, r18
    127e:	73 1f       	adc	r23, r19
    1280:	84 1f       	adc	r24, r20
    1282:	48 f4       	brcc	.+18     	; 0x1296 <__addsf3x+0x98>
    1284:	87 95       	ror	r24
    1286:	77 95       	ror	r23
    1288:	67 95       	ror	r22
    128a:	b7 95       	ror	r27
    128c:	f7 95       	ror	r31
    128e:	9e 3f       	cpi	r25, 0xFE	; 254
    1290:	08 f0       	brcs	.+2      	; 0x1294 <__addsf3x+0x96>
    1292:	b3 cf       	rjmp	.-154    	; 0x11fa <__addsf3+0x1e>
    1294:	93 95       	inc	r25
    1296:	88 0f       	add	r24, r24
    1298:	08 f0       	brcs	.+2      	; 0x129c <__addsf3x+0x9e>
    129a:	99 27       	eor	r25, r25
    129c:	ee 0f       	add	r30, r30
    129e:	97 95       	ror	r25
    12a0:	87 95       	ror	r24
    12a2:	08 95       	ret

000012a4 <__divsf3>:
    12a4:	0c d0       	rcall	.+24     	; 0x12be <__divsf3x>
    12a6:	eb c0       	rjmp	.+470    	; 0x147e <__fp_round>
    12a8:	e3 d0       	rcall	.+454    	; 0x1470 <__fp_pscB>
    12aa:	40 f0       	brcs	.+16     	; 0x12bc <__divsf3+0x18>
    12ac:	da d0       	rcall	.+436    	; 0x1462 <__fp_pscA>
    12ae:	30 f0       	brcs	.+12     	; 0x12bc <__divsf3+0x18>
    12b0:	21 f4       	brne	.+8      	; 0x12ba <__divsf3+0x16>
    12b2:	5f 3f       	cpi	r21, 0xFF	; 255
    12b4:	19 f0       	breq	.+6      	; 0x12bc <__divsf3+0x18>
    12b6:	cc c0       	rjmp	.+408    	; 0x1450 <__fp_inf>
    12b8:	51 11       	cpse	r21, r1
    12ba:	15 c1       	rjmp	.+554    	; 0x14e6 <__fp_szero>
    12bc:	cf c0       	rjmp	.+414    	; 0x145c <__fp_nan>

000012be <__divsf3x>:
    12be:	f0 d0       	rcall	.+480    	; 0x14a0 <__fp_split3>
    12c0:	98 f3       	brcs	.-26     	; 0x12a8 <__divsf3+0x4>

000012c2 <__divsf3_pse>:
    12c2:	99 23       	and	r25, r25
    12c4:	c9 f3       	breq	.-14     	; 0x12b8 <__divsf3+0x14>
    12c6:	55 23       	and	r21, r21
    12c8:	b1 f3       	breq	.-20     	; 0x12b6 <__divsf3+0x12>
    12ca:	95 1b       	sub	r25, r21
    12cc:	55 0b       	sbc	r21, r21
    12ce:	bb 27       	eor	r27, r27
    12d0:	aa 27       	eor	r26, r26
    12d2:	62 17       	cp	r22, r18
    12d4:	73 07       	cpc	r23, r19
    12d6:	84 07       	cpc	r24, r20
    12d8:	38 f0       	brcs	.+14     	; 0x12e8 <__divsf3_pse+0x26>
    12da:	9f 5f       	subi	r25, 0xFF	; 255
    12dc:	5f 4f       	sbci	r21, 0xFF	; 255
    12de:	22 0f       	add	r18, r18
    12e0:	33 1f       	adc	r19, r19
    12e2:	44 1f       	adc	r20, r20
    12e4:	aa 1f       	adc	r26, r26
    12e6:	a9 f3       	breq	.-22     	; 0x12d2 <__divsf3_pse+0x10>
    12e8:	33 d0       	rcall	.+102    	; 0x1350 <__divsf3_pse+0x8e>
    12ea:	0e 2e       	mov	r0, r30
    12ec:	3a f0       	brmi	.+14     	; 0x12fc <__divsf3_pse+0x3a>
    12ee:	e0 e8       	ldi	r30, 0x80	; 128
    12f0:	30 d0       	rcall	.+96     	; 0x1352 <__divsf3_pse+0x90>
    12f2:	91 50       	subi	r25, 0x01	; 1
    12f4:	50 40       	sbci	r21, 0x00	; 0
    12f6:	e6 95       	lsr	r30
    12f8:	00 1c       	adc	r0, r0
    12fa:	ca f7       	brpl	.-14     	; 0x12ee <__divsf3_pse+0x2c>
    12fc:	29 d0       	rcall	.+82     	; 0x1350 <__divsf3_pse+0x8e>
    12fe:	fe 2f       	mov	r31, r30
    1300:	27 d0       	rcall	.+78     	; 0x1350 <__divsf3_pse+0x8e>
    1302:	66 0f       	add	r22, r22
    1304:	77 1f       	adc	r23, r23
    1306:	88 1f       	adc	r24, r24
    1308:	bb 1f       	adc	r27, r27
    130a:	26 17       	cp	r18, r22
    130c:	37 07       	cpc	r19, r23
    130e:	48 07       	cpc	r20, r24
    1310:	ab 07       	cpc	r26, r27
    1312:	b0 e8       	ldi	r27, 0x80	; 128
    1314:	09 f0       	breq	.+2      	; 0x1318 <__divsf3_pse+0x56>
    1316:	bb 0b       	sbc	r27, r27
    1318:	80 2d       	mov	r24, r0
    131a:	bf 01       	movw	r22, r30
    131c:	ff 27       	eor	r31, r31
    131e:	93 58       	subi	r25, 0x83	; 131
    1320:	5f 4f       	sbci	r21, 0xFF	; 255
    1322:	2a f0       	brmi	.+10     	; 0x132e <__divsf3_pse+0x6c>
    1324:	9e 3f       	cpi	r25, 0xFE	; 254
    1326:	51 05       	cpc	r21, r1
    1328:	68 f0       	brcs	.+26     	; 0x1344 <__divsf3_pse+0x82>
    132a:	92 c0       	rjmp	.+292    	; 0x1450 <__fp_inf>
    132c:	dc c0       	rjmp	.+440    	; 0x14e6 <__fp_szero>
    132e:	5f 3f       	cpi	r21, 0xFF	; 255
    1330:	ec f3       	brlt	.-6      	; 0x132c <__divsf3_pse+0x6a>
    1332:	98 3e       	cpi	r25, 0xE8	; 232
    1334:	dc f3       	brlt	.-10     	; 0x132c <__divsf3_pse+0x6a>
    1336:	86 95       	lsr	r24
    1338:	77 95       	ror	r23
    133a:	67 95       	ror	r22
    133c:	b7 95       	ror	r27
    133e:	f7 95       	ror	r31
    1340:	9f 5f       	subi	r25, 0xFF	; 255
    1342:	c9 f7       	brne	.-14     	; 0x1336 <__divsf3_pse+0x74>
    1344:	88 0f       	add	r24, r24
    1346:	91 1d       	adc	r25, r1
    1348:	96 95       	lsr	r25
    134a:	87 95       	ror	r24
    134c:	97 f9       	bld	r25, 7
    134e:	08 95       	ret
    1350:	e1 e0       	ldi	r30, 0x01	; 1
    1352:	66 0f       	add	r22, r22
    1354:	77 1f       	adc	r23, r23
    1356:	88 1f       	adc	r24, r24
    1358:	bb 1f       	adc	r27, r27
    135a:	62 17       	cp	r22, r18
    135c:	73 07       	cpc	r23, r19
    135e:	84 07       	cpc	r24, r20
    1360:	ba 07       	cpc	r27, r26
    1362:	20 f0       	brcs	.+8      	; 0x136c <__divsf3_pse+0xaa>
    1364:	62 1b       	sub	r22, r18
    1366:	73 0b       	sbc	r23, r19
    1368:	84 0b       	sbc	r24, r20
    136a:	ba 0b       	sbc	r27, r26
    136c:	ee 1f       	adc	r30, r30
    136e:	88 f7       	brcc	.-30     	; 0x1352 <__divsf3_pse+0x90>
    1370:	e0 95       	com	r30
    1372:	08 95       	ret

00001374 <__fixsfsi>:
    1374:	04 d0       	rcall	.+8      	; 0x137e <__fixunssfsi>
    1376:	68 94       	set
    1378:	b1 11       	cpse	r27, r1
    137a:	b5 c0       	rjmp	.+362    	; 0x14e6 <__fp_szero>
    137c:	08 95       	ret

0000137e <__fixunssfsi>:
    137e:	98 d0       	rcall	.+304    	; 0x14b0 <__fp_splitA>
    1380:	88 f0       	brcs	.+34     	; 0x13a4 <__fixunssfsi+0x26>
    1382:	9f 57       	subi	r25, 0x7F	; 127
    1384:	90 f0       	brcs	.+36     	; 0x13aa <__fixunssfsi+0x2c>
    1386:	b9 2f       	mov	r27, r25
    1388:	99 27       	eor	r25, r25
    138a:	b7 51       	subi	r27, 0x17	; 23
    138c:	a0 f0       	brcs	.+40     	; 0x13b6 <__fixunssfsi+0x38>
    138e:	d1 f0       	breq	.+52     	; 0x13c4 <__fixunssfsi+0x46>
    1390:	66 0f       	add	r22, r22
    1392:	77 1f       	adc	r23, r23
    1394:	88 1f       	adc	r24, r24
    1396:	99 1f       	adc	r25, r25
    1398:	1a f0       	brmi	.+6      	; 0x13a0 <__fixunssfsi+0x22>
    139a:	ba 95       	dec	r27
    139c:	c9 f7       	brne	.-14     	; 0x1390 <__fixunssfsi+0x12>
    139e:	12 c0       	rjmp	.+36     	; 0x13c4 <__fixunssfsi+0x46>
    13a0:	b1 30       	cpi	r27, 0x01	; 1
    13a2:	81 f0       	breq	.+32     	; 0x13c4 <__fixunssfsi+0x46>
    13a4:	9f d0       	rcall	.+318    	; 0x14e4 <__fp_zero>
    13a6:	b1 e0       	ldi	r27, 0x01	; 1
    13a8:	08 95       	ret
    13aa:	9c c0       	rjmp	.+312    	; 0x14e4 <__fp_zero>
    13ac:	67 2f       	mov	r22, r23
    13ae:	78 2f       	mov	r23, r24
    13b0:	88 27       	eor	r24, r24
    13b2:	b8 5f       	subi	r27, 0xF8	; 248
    13b4:	39 f0       	breq	.+14     	; 0x13c4 <__fixunssfsi+0x46>
    13b6:	b9 3f       	cpi	r27, 0xF9	; 249
    13b8:	cc f3       	brlt	.-14     	; 0x13ac <__fixunssfsi+0x2e>
    13ba:	86 95       	lsr	r24
    13bc:	77 95       	ror	r23
    13be:	67 95       	ror	r22
    13c0:	b3 95       	inc	r27
    13c2:	d9 f7       	brne	.-10     	; 0x13ba <__fixunssfsi+0x3c>
    13c4:	3e f4       	brtc	.+14     	; 0x13d4 <__fixunssfsi+0x56>
    13c6:	90 95       	com	r25
    13c8:	80 95       	com	r24
    13ca:	70 95       	com	r23
    13cc:	61 95       	neg	r22
    13ce:	7f 4f       	sbci	r23, 0xFF	; 255
    13d0:	8f 4f       	sbci	r24, 0xFF	; 255
    13d2:	9f 4f       	sbci	r25, 0xFF	; 255
    13d4:	08 95       	ret

000013d6 <__floatunsisf>:
    13d6:	e8 94       	clt
    13d8:	09 c0       	rjmp	.+18     	; 0x13ec <__floatsisf+0x12>

000013da <__floatsisf>:
    13da:	97 fb       	bst	r25, 7
    13dc:	3e f4       	brtc	.+14     	; 0x13ec <__floatsisf+0x12>
    13de:	90 95       	com	r25
    13e0:	80 95       	com	r24
    13e2:	70 95       	com	r23
    13e4:	61 95       	neg	r22
    13e6:	7f 4f       	sbci	r23, 0xFF	; 255
    13e8:	8f 4f       	sbci	r24, 0xFF	; 255
    13ea:	9f 4f       	sbci	r25, 0xFF	; 255
    13ec:	99 23       	and	r25, r25
    13ee:	a9 f0       	breq	.+42     	; 0x141a <__floatsisf+0x40>
    13f0:	f9 2f       	mov	r31, r25
    13f2:	96 e9       	ldi	r25, 0x96	; 150
    13f4:	bb 27       	eor	r27, r27
    13f6:	93 95       	inc	r25
    13f8:	f6 95       	lsr	r31
    13fa:	87 95       	ror	r24
    13fc:	77 95       	ror	r23
    13fe:	67 95       	ror	r22
    1400:	b7 95       	ror	r27
    1402:	f1 11       	cpse	r31, r1
    1404:	f8 cf       	rjmp	.-16     	; 0x13f6 <__floatsisf+0x1c>
    1406:	fa f4       	brpl	.+62     	; 0x1446 <__floatsisf+0x6c>
    1408:	bb 0f       	add	r27, r27
    140a:	11 f4       	brne	.+4      	; 0x1410 <__floatsisf+0x36>
    140c:	60 ff       	sbrs	r22, 0
    140e:	1b c0       	rjmp	.+54     	; 0x1446 <__floatsisf+0x6c>
    1410:	6f 5f       	subi	r22, 0xFF	; 255
    1412:	7f 4f       	sbci	r23, 0xFF	; 255
    1414:	8f 4f       	sbci	r24, 0xFF	; 255
    1416:	9f 4f       	sbci	r25, 0xFF	; 255
    1418:	16 c0       	rjmp	.+44     	; 0x1446 <__floatsisf+0x6c>
    141a:	88 23       	and	r24, r24
    141c:	11 f0       	breq	.+4      	; 0x1422 <__floatsisf+0x48>
    141e:	96 e9       	ldi	r25, 0x96	; 150
    1420:	11 c0       	rjmp	.+34     	; 0x1444 <__floatsisf+0x6a>
    1422:	77 23       	and	r23, r23
    1424:	21 f0       	breq	.+8      	; 0x142e <__floatsisf+0x54>
    1426:	9e e8       	ldi	r25, 0x8E	; 142
    1428:	87 2f       	mov	r24, r23
    142a:	76 2f       	mov	r23, r22
    142c:	05 c0       	rjmp	.+10     	; 0x1438 <__floatsisf+0x5e>
    142e:	66 23       	and	r22, r22
    1430:	71 f0       	breq	.+28     	; 0x144e <__floatsisf+0x74>
    1432:	96 e8       	ldi	r25, 0x86	; 134
    1434:	86 2f       	mov	r24, r22
    1436:	70 e0       	ldi	r23, 0x00	; 0
    1438:	60 e0       	ldi	r22, 0x00	; 0
    143a:	2a f0       	brmi	.+10     	; 0x1446 <__floatsisf+0x6c>
    143c:	9a 95       	dec	r25
    143e:	66 0f       	add	r22, r22
    1440:	77 1f       	adc	r23, r23
    1442:	88 1f       	adc	r24, r24
    1444:	da f7       	brpl	.-10     	; 0x143c <__floatsisf+0x62>
    1446:	88 0f       	add	r24, r24
    1448:	96 95       	lsr	r25
    144a:	87 95       	ror	r24
    144c:	97 f9       	bld	r25, 7
    144e:	08 95       	ret

00001450 <__fp_inf>:
    1450:	97 f9       	bld	r25, 7
    1452:	9f 67       	ori	r25, 0x7F	; 127
    1454:	80 e8       	ldi	r24, 0x80	; 128
    1456:	70 e0       	ldi	r23, 0x00	; 0
    1458:	60 e0       	ldi	r22, 0x00	; 0
    145a:	08 95       	ret

0000145c <__fp_nan>:
    145c:	9f ef       	ldi	r25, 0xFF	; 255
    145e:	80 ec       	ldi	r24, 0xC0	; 192
    1460:	08 95       	ret

00001462 <__fp_pscA>:
    1462:	00 24       	eor	r0, r0
    1464:	0a 94       	dec	r0
    1466:	16 16       	cp	r1, r22
    1468:	17 06       	cpc	r1, r23
    146a:	18 06       	cpc	r1, r24
    146c:	09 06       	cpc	r0, r25
    146e:	08 95       	ret

00001470 <__fp_pscB>:
    1470:	00 24       	eor	r0, r0
    1472:	0a 94       	dec	r0
    1474:	12 16       	cp	r1, r18
    1476:	13 06       	cpc	r1, r19
    1478:	14 06       	cpc	r1, r20
    147a:	05 06       	cpc	r0, r21
    147c:	08 95       	ret

0000147e <__fp_round>:
    147e:	09 2e       	mov	r0, r25
    1480:	03 94       	inc	r0
    1482:	00 0c       	add	r0, r0
    1484:	11 f4       	brne	.+4      	; 0x148a <__fp_round+0xc>
    1486:	88 23       	and	r24, r24
    1488:	52 f0       	brmi	.+20     	; 0x149e <__fp_round+0x20>
    148a:	bb 0f       	add	r27, r27
    148c:	40 f4       	brcc	.+16     	; 0x149e <__fp_round+0x20>
    148e:	bf 2b       	or	r27, r31
    1490:	11 f4       	brne	.+4      	; 0x1496 <__fp_round+0x18>
    1492:	60 ff       	sbrs	r22, 0
    1494:	04 c0       	rjmp	.+8      	; 0x149e <__fp_round+0x20>
    1496:	6f 5f       	subi	r22, 0xFF	; 255
    1498:	7f 4f       	sbci	r23, 0xFF	; 255
    149a:	8f 4f       	sbci	r24, 0xFF	; 255
    149c:	9f 4f       	sbci	r25, 0xFF	; 255
    149e:	08 95       	ret

000014a0 <__fp_split3>:
    14a0:	57 fd       	sbrc	r21, 7
    14a2:	90 58       	subi	r25, 0x80	; 128
    14a4:	44 0f       	add	r20, r20
    14a6:	55 1f       	adc	r21, r21
    14a8:	59 f0       	breq	.+22     	; 0x14c0 <__fp_splitA+0x10>
    14aa:	5f 3f       	cpi	r21, 0xFF	; 255
    14ac:	71 f0       	breq	.+28     	; 0x14ca <__fp_splitA+0x1a>
    14ae:	47 95       	ror	r20

000014b0 <__fp_splitA>:
    14b0:	88 0f       	add	r24, r24
    14b2:	97 fb       	bst	r25, 7
    14b4:	99 1f       	adc	r25, r25
    14b6:	61 f0       	breq	.+24     	; 0x14d0 <__fp_splitA+0x20>
    14b8:	9f 3f       	cpi	r25, 0xFF	; 255
    14ba:	79 f0       	breq	.+30     	; 0x14da <__fp_splitA+0x2a>
    14bc:	87 95       	ror	r24
    14be:	08 95       	ret
    14c0:	12 16       	cp	r1, r18
    14c2:	13 06       	cpc	r1, r19
    14c4:	14 06       	cpc	r1, r20
    14c6:	55 1f       	adc	r21, r21
    14c8:	f2 cf       	rjmp	.-28     	; 0x14ae <__fp_split3+0xe>
    14ca:	46 95       	lsr	r20
    14cc:	f1 df       	rcall	.-30     	; 0x14b0 <__fp_splitA>
    14ce:	08 c0       	rjmp	.+16     	; 0x14e0 <__fp_splitA+0x30>
    14d0:	16 16       	cp	r1, r22
    14d2:	17 06       	cpc	r1, r23
    14d4:	18 06       	cpc	r1, r24
    14d6:	99 1f       	adc	r25, r25
    14d8:	f1 cf       	rjmp	.-30     	; 0x14bc <__fp_splitA+0xc>
    14da:	86 95       	lsr	r24
    14dc:	71 05       	cpc	r23, r1
    14de:	61 05       	cpc	r22, r1
    14e0:	08 94       	sec
    14e2:	08 95       	ret

000014e4 <__fp_zero>:
    14e4:	e8 94       	clt

000014e6 <__fp_szero>:
    14e6:	bb 27       	eor	r27, r27
    14e8:	66 27       	eor	r22, r22
    14ea:	77 27       	eor	r23, r23
    14ec:	cb 01       	movw	r24, r22
    14ee:	97 f9       	bld	r25, 7
    14f0:	08 95       	ret

000014f2 <__mulsf3>:
    14f2:	0b d0       	rcall	.+22     	; 0x150a <__mulsf3x>
    14f4:	c4 cf       	rjmp	.-120    	; 0x147e <__fp_round>
    14f6:	b5 df       	rcall	.-150    	; 0x1462 <__fp_pscA>
    14f8:	28 f0       	brcs	.+10     	; 0x1504 <__mulsf3+0x12>
    14fa:	ba df       	rcall	.-140    	; 0x1470 <__fp_pscB>
    14fc:	18 f0       	brcs	.+6      	; 0x1504 <__mulsf3+0x12>
    14fe:	95 23       	and	r25, r21
    1500:	09 f0       	breq	.+2      	; 0x1504 <__mulsf3+0x12>
    1502:	a6 cf       	rjmp	.-180    	; 0x1450 <__fp_inf>
    1504:	ab cf       	rjmp	.-170    	; 0x145c <__fp_nan>
    1506:	11 24       	eor	r1, r1
    1508:	ee cf       	rjmp	.-36     	; 0x14e6 <__fp_szero>

0000150a <__mulsf3x>:
    150a:	ca df       	rcall	.-108    	; 0x14a0 <__fp_split3>
    150c:	a0 f3       	brcs	.-24     	; 0x14f6 <__mulsf3+0x4>

0000150e <__mulsf3_pse>:
    150e:	95 9f       	mul	r25, r21
    1510:	d1 f3       	breq	.-12     	; 0x1506 <__mulsf3+0x14>
    1512:	95 0f       	add	r25, r21
    1514:	50 e0       	ldi	r21, 0x00	; 0
    1516:	55 1f       	adc	r21, r21
    1518:	62 9f       	mul	r22, r18
    151a:	f0 01       	movw	r30, r0
    151c:	72 9f       	mul	r23, r18
    151e:	bb 27       	eor	r27, r27
    1520:	f0 0d       	add	r31, r0
    1522:	b1 1d       	adc	r27, r1
    1524:	63 9f       	mul	r22, r19
    1526:	aa 27       	eor	r26, r26
    1528:	f0 0d       	add	r31, r0
    152a:	b1 1d       	adc	r27, r1
    152c:	aa 1f       	adc	r26, r26
    152e:	64 9f       	mul	r22, r20
    1530:	66 27       	eor	r22, r22
    1532:	b0 0d       	add	r27, r0
    1534:	a1 1d       	adc	r26, r1
    1536:	66 1f       	adc	r22, r22
    1538:	82 9f       	mul	r24, r18
    153a:	22 27       	eor	r18, r18
    153c:	b0 0d       	add	r27, r0
    153e:	a1 1d       	adc	r26, r1
    1540:	62 1f       	adc	r22, r18
    1542:	73 9f       	mul	r23, r19
    1544:	b0 0d       	add	r27, r0
    1546:	a1 1d       	adc	r26, r1
    1548:	62 1f       	adc	r22, r18
    154a:	83 9f       	mul	r24, r19
    154c:	a0 0d       	add	r26, r0
    154e:	61 1d       	adc	r22, r1
    1550:	22 1f       	adc	r18, r18
    1552:	74 9f       	mul	r23, r20
    1554:	33 27       	eor	r19, r19
    1556:	a0 0d       	add	r26, r0
    1558:	61 1d       	adc	r22, r1
    155a:	23 1f       	adc	r18, r19
    155c:	84 9f       	mul	r24, r20
    155e:	60 0d       	add	r22, r0
    1560:	21 1d       	adc	r18, r1
    1562:	82 2f       	mov	r24, r18
    1564:	76 2f       	mov	r23, r22
    1566:	6a 2f       	mov	r22, r26
    1568:	11 24       	eor	r1, r1
    156a:	9f 57       	subi	r25, 0x7F	; 127
    156c:	50 40       	sbci	r21, 0x00	; 0
    156e:	8a f0       	brmi	.+34     	; 0x1592 <__mulsf3_pse+0x84>
    1570:	e1 f0       	breq	.+56     	; 0x15aa <__mulsf3_pse+0x9c>
    1572:	88 23       	and	r24, r24
    1574:	4a f0       	brmi	.+18     	; 0x1588 <__mulsf3_pse+0x7a>
    1576:	ee 0f       	add	r30, r30
    1578:	ff 1f       	adc	r31, r31
    157a:	bb 1f       	adc	r27, r27
    157c:	66 1f       	adc	r22, r22
    157e:	77 1f       	adc	r23, r23
    1580:	88 1f       	adc	r24, r24
    1582:	91 50       	subi	r25, 0x01	; 1
    1584:	50 40       	sbci	r21, 0x00	; 0
    1586:	a9 f7       	brne	.-22     	; 0x1572 <__mulsf3_pse+0x64>
    1588:	9e 3f       	cpi	r25, 0xFE	; 254
    158a:	51 05       	cpc	r21, r1
    158c:	70 f0       	brcs	.+28     	; 0x15aa <__mulsf3_pse+0x9c>
    158e:	60 cf       	rjmp	.-320    	; 0x1450 <__fp_inf>
    1590:	aa cf       	rjmp	.-172    	; 0x14e6 <__fp_szero>
    1592:	5f 3f       	cpi	r21, 0xFF	; 255
    1594:	ec f3       	brlt	.-6      	; 0x1590 <__mulsf3_pse+0x82>
    1596:	98 3e       	cpi	r25, 0xE8	; 232
    1598:	dc f3       	brlt	.-10     	; 0x1590 <__mulsf3_pse+0x82>
    159a:	86 95       	lsr	r24
    159c:	77 95       	ror	r23
    159e:	67 95       	ror	r22
    15a0:	b7 95       	ror	r27
    15a2:	f7 95       	ror	r31
    15a4:	e7 95       	ror	r30
    15a6:	9f 5f       	subi	r25, 0xFF	; 255
    15a8:	c1 f7       	brne	.-16     	; 0x159a <__mulsf3_pse+0x8c>
    15aa:	fe 2b       	or	r31, r30
    15ac:	88 0f       	add	r24, r24
    15ae:	91 1d       	adc	r25, r1
    15b0:	96 95       	lsr	r25
    15b2:	87 95       	ror	r24
    15b4:	97 f9       	bld	r25, 7
    15b6:	08 95       	ret

000015b8 <__divmodhi4>:
    15b8:	97 fb       	bst	r25, 7
    15ba:	07 2e       	mov	r0, r23
    15bc:	16 f4       	brtc	.+4      	; 0x15c2 <__divmodhi4+0xa>
    15be:	00 94       	com	r0
    15c0:	06 d0       	rcall	.+12     	; 0x15ce <__divmodhi4_neg1>
    15c2:	77 fd       	sbrc	r23, 7
    15c4:	08 d0       	rcall	.+16     	; 0x15d6 <__divmodhi4_neg2>
    15c6:	14 d0       	rcall	.+40     	; 0x15f0 <__udivmodhi4>
    15c8:	07 fc       	sbrc	r0, 7
    15ca:	05 d0       	rcall	.+10     	; 0x15d6 <__divmodhi4_neg2>
    15cc:	3e f4       	brtc	.+14     	; 0x15dc <__divmodhi4_exit>

000015ce <__divmodhi4_neg1>:
    15ce:	90 95       	com	r25
    15d0:	81 95       	neg	r24
    15d2:	9f 4f       	sbci	r25, 0xFF	; 255
    15d4:	08 95       	ret

000015d6 <__divmodhi4_neg2>:
    15d6:	70 95       	com	r23
    15d8:	61 95       	neg	r22
    15da:	7f 4f       	sbci	r23, 0xFF	; 255

000015dc <__divmodhi4_exit>:
    15dc:	08 95       	ret

000015de <__tablejump2__>:
    15de:	ee 0f       	add	r30, r30
    15e0:	ff 1f       	adc	r31, r31
    15e2:	00 24       	eor	r0, r0
    15e4:	00 1c       	adc	r0, r0
    15e6:	0b be       	out	0x3b, r0	; 59
    15e8:	07 90       	elpm	r0, Z+
    15ea:	f6 91       	elpm	r31, Z
    15ec:	e0 2d       	mov	r30, r0
    15ee:	09 94       	ijmp

000015f0 <__udivmodhi4>:
    15f0:	aa 1b       	sub	r26, r26
    15f2:	bb 1b       	sub	r27, r27
    15f4:	51 e1       	ldi	r21, 0x11	; 17
    15f6:	07 c0       	rjmp	.+14     	; 0x1606 <__udivmodhi4_ep>

000015f8 <__udivmodhi4_loop>:
    15f8:	aa 1f       	adc	r26, r26
    15fa:	bb 1f       	adc	r27, r27
    15fc:	a6 17       	cp	r26, r22
    15fe:	b7 07       	cpc	r27, r23
    1600:	10 f0       	brcs	.+4      	; 0x1606 <__udivmodhi4_ep>
    1602:	a6 1b       	sub	r26, r22
    1604:	b7 0b       	sbc	r27, r23

00001606 <__udivmodhi4_ep>:
    1606:	88 1f       	adc	r24, r24
    1608:	99 1f       	adc	r25, r25
    160a:	5a 95       	dec	r21
    160c:	a9 f7       	brne	.-22     	; 0x15f8 <__udivmodhi4_loop>
    160e:	80 95       	com	r24
    1610:	90 95       	com	r25
    1612:	bc 01       	movw	r22, r24
    1614:	cd 01       	movw	r24, r26
    1616:	08 95       	ret

00001618 <_exit>:
    1618:	f8 94       	cli

0000161a <__stop_program>:
    161a:	ff cf       	rjmp	.-2      	; 0x161a <__stop_program>
