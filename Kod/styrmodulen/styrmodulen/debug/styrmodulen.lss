
styrmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001466  000014fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001466  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000070  0080010c  0080010c  00001506  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001506  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001538  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001023  00000000  00000000  000016c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000335  00000000  00000000  000026eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000186d  00000000  00000000  00002a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004cc  00000000  00000000  00004290  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000107bd  00000000  00000000  0000475c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000173c  00000000  00000000  00014f19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00016655  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003f12  00000000  00000000  00016785  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
       2:	00 00       	nop
       4:	aa c6       	rjmp	.+3412   	; 0xd5a <__vector_1>
       6:	00 00       	nop
       8:	d2 c3       	rjmp	.+1956   	; 0x7ae <__vector_2>
       a:	00 00       	nop
       c:	f8 c3       	rjmp	.+2032   	; 0x7fe <__vector_3>
       e:	00 00       	nop
      10:	6b c0       	rjmp	.+214    	; 0xe8 <__bad_interrupt>
      12:	00 00       	nop
      14:	69 c0       	rjmp	.+210    	; 0xe8 <__bad_interrupt>
      16:	00 00       	nop
      18:	67 c0       	rjmp	.+206    	; 0xe8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	65 c0       	rjmp	.+202    	; 0xe8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	63 c0       	rjmp	.+198    	; 0xe8 <__bad_interrupt>
      22:	00 00       	nop
      24:	61 c0       	rjmp	.+194    	; 0xe8 <__bad_interrupt>
      26:	00 00       	nop
      28:	5f c0       	rjmp	.+190    	; 0xe8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5d c0       	rjmp	.+186    	; 0xe8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	5b c0       	rjmp	.+182    	; 0xe8 <__bad_interrupt>
      32:	00 00       	nop
      34:	83 c3       	rjmp	.+1798   	; 0x73c <__vector_13>
      36:	00 00       	nop
      38:	57 c0       	rjmp	.+174    	; 0xe8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	55 c0       	rjmp	.+170    	; 0xe8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	53 c0       	rjmp	.+166    	; 0xe8 <__bad_interrupt>
      42:	00 00       	nop
      44:	51 c0       	rjmp	.+162    	; 0xe8 <__bad_interrupt>
      46:	00 00       	nop
      48:	4f c0       	rjmp	.+158    	; 0xe8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4d c0       	rjmp	.+154    	; 0xe8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	4b c0       	rjmp	.+150    	; 0xe8 <__bad_interrupt>
      52:	00 00       	nop
      54:	49 c0       	rjmp	.+146    	; 0xe8 <__bad_interrupt>
      56:	00 00       	nop
      58:	47 c0       	rjmp	.+142    	; 0xe8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	45 c0       	rjmp	.+138    	; 0xe8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	43 c0       	rjmp	.+134    	; 0xe8 <__bad_interrupt>
      62:	00 00       	nop
      64:	41 c0       	rjmp	.+130    	; 0xe8 <__bad_interrupt>
      66:	00 00       	nop
      68:	3f c0       	rjmp	.+126    	; 0xe8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	3d c0       	rjmp	.+122    	; 0xe8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	3b c0       	rjmp	.+118    	; 0xe8 <__bad_interrupt>
      72:	00 00       	nop
      74:	39 c0       	rjmp	.+114    	; 0xe8 <__bad_interrupt>
      76:	00 00       	nop
      78:	37 c0       	rjmp	.+110    	; 0xe8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	35 c0       	rjmp	.+106    	; 0xe8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	33 c0       	rjmp	.+102    	; 0xe8 <__bad_interrupt>
      82:	00 00       	nop
      84:	31 c0       	rjmp	.+98     	; 0xe8 <__bad_interrupt>
      86:	00 00       	nop
      88:	2f c0       	rjmp	.+94     	; 0xe8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	fb 06       	cpc	r15, r27
      8e:	00 07       	cpc	r16, r16
      90:	0f 07       	cpc	r16, r31
      92:	23 07       	cpc	r18, r19
      94:	27 07       	cpc	r18, r23
      96:	2b 07       	cpc	r18, r27
      98:	2f 07       	cpc	r18, r31
      9a:	cc 07       	cpc	r28, r28
      9c:	39 07       	cpc	r19, r25
      9e:	3e 07       	cpc	r19, r30
      a0:	45 07       	cpc	r20, r21
      a2:	4c 07       	cpc	r20, r28
      a4:	53 07       	cpc	r21, r19
      a6:	5a 07       	cpc	r21, r26
      a8:	61 07       	cpc	r22, r17
      aa:	68 07       	cpc	r22, r24

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	d0 e4       	ldi	r29, 0x40	; 64
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	11 e0       	ldi	r17, 0x01	; 1
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	e6 e6       	ldi	r30, 0x66	; 102
      c0:	f4 e1       	ldi	r31, 0x14	; 20
      c2:	00 e0       	ldi	r16, 0x00	; 0
      c4:	0b bf       	out	0x3b, r16	; 59
      c6:	02 c0       	rjmp	.+4      	; 0xcc <__do_copy_data+0x14>
      c8:	07 90       	elpm	r0, Z+
      ca:	0d 92       	st	X+, r0
      cc:	ac 30       	cpi	r26, 0x0C	; 12
      ce:	b1 07       	cpc	r27, r17
      d0:	d9 f7       	brne	.-10     	; 0xc8 <__do_copy_data+0x10>

000000d2 <__do_clear_bss>:
      d2:	21 e0       	ldi	r18, 0x01	; 1
      d4:	ac e0       	ldi	r26, 0x0C	; 12
      d6:	b1 e0       	ldi	r27, 0x01	; 1
      d8:	01 c0       	rjmp	.+2      	; 0xdc <.do_clear_bss_start>

000000da <.do_clear_bss_loop>:
      da:	1d 92       	st	X+, r1

000000dc <.do_clear_bss_start>:
      dc:	ac 37       	cpi	r26, 0x7C	; 124
      de:	b2 07       	cpc	r27, r18
      e0:	e1 f7       	brne	.-8      	; 0xda <.do_clear_bss_loop>
      e2:	5c d7       	rcall	.+3768   	; 0xf9c <main>
      e4:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <_exit>

000000e8 <__bad_interrupt>:
      e8:	8b cf       	rjmp	.-234    	; 0x0 <__vectors>

000000ea <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
      ea:	08 95       	ret

000000ec <linje_get_error>:
	}
	
	else if(turn_done && count_waypoint >= 5){	//sväng är klar och roboten har kört ur kurvan, återgå till vanlig PD-reglering
		twoway_turn_right = false;
		ongoing_turn = false;
		first_time = true;
      ec:	2f 92       	push	r2
      ee:	3f 92       	push	r3
      f0:	4f 92       	push	r4
      f2:	5f 92       	push	r5
      f4:	6f 92       	push	r6
      f6:	7f 92       	push	r7
      f8:	8f 92       	push	r8
      fa:	9f 92       	push	r9
      fc:	af 92       	push	r10
      fe:	bf 92       	push	r11
     100:	cf 92       	push	r12
     102:	df 92       	push	r13
     104:	ef 92       	push	r14
     106:	ff 92       	push	r15
     108:	0f 93       	push	r16
     10a:	1f 93       	push	r17
     10c:	cf 93       	push	r28
     10e:	df 93       	push	r29
     110:	10 92 30 01 	sts	0x0130, r1
     114:	10 92 2f 01 	sts	0x012F, r1
     118:	f8 94       	cli
     11a:	80 90 5b 01 	lds	r8, 0x015B
     11e:	90 90 5c 01 	lds	r9, 0x015C
     122:	20 90 70 01 	lds	r2, 0x0170
     126:	30 90 71 01 	lds	r3, 0x0171
     12a:	78 94       	sei
     12c:	c0 90 2f 01 	lds	r12, 0x012F
     130:	d0 90 30 01 	lds	r13, 0x0130
     134:	05 e0       	ldi	r16, 0x05	; 5
     136:	10 e0       	ldi	r17, 0x00	; 0
     138:	c0 e0       	ldi	r28, 0x00	; 0
     13a:	d0 e0       	ldi	r29, 0x00	; 0
     13c:	41 2c       	mov	r4, r1
     13e:	51 2c       	mov	r5, r1
     140:	32 01       	movw	r6, r4
     142:	0f 2e       	mov	r0, r31
     144:	f5 e0       	ldi	r31, 0x05	; 5
     146:	af 2e       	mov	r10, r31
     148:	b1 2c       	mov	r11, r1
     14a:	f0 2d       	mov	r31, r0
     14c:	c5 01       	movw	r24, r10
     14e:	80 1b       	sub	r24, r16
     150:	91 0b       	sbc	r25, r17
     152:	08 97       	sbiw	r24, 0x08	; 8
     154:	0c f5       	brge	.+66     	; 0x198 <linje_get_error+0xac>
     156:	74 01       	movw	r14, r8
     158:	0c 2e       	mov	r0, r28
     15a:	02 c0       	rjmp	.+4      	; 0x160 <linje_get_error+0x74>
     15c:	f5 94       	asr	r15
     15e:	e7 94       	ror	r14
     160:	0a 94       	dec	r0
     162:	e2 f7       	brpl	.-8      	; 0x15c <linje_get_error+0x70>
     164:	83 e0       	ldi	r24, 0x03	; 3
     166:	e8 22       	and	r14, r24
     168:	ff 24       	eor	r15, r15
     16a:	0e 9d       	mul	r16, r14
     16c:	b0 01       	movw	r22, r0
     16e:	0f 9d       	mul	r16, r15
     170:	70 0d       	add	r23, r0
     172:	1e 9d       	mul	r17, r14
     174:	70 0d       	add	r23, r0
     176:	11 24       	eor	r1, r1
     178:	07 2e       	mov	r0, r23
     17a:	00 0c       	add	r0, r0
     17c:	88 0b       	sbc	r24, r24
     17e:	99 0b       	sbc	r25, r25
     180:	0e 94 12 09 	call	0x1224	; 0x1224 <__floatsisf>
     184:	9b 01       	movw	r18, r22
     186:	ac 01       	movw	r20, r24
     188:	c3 01       	movw	r24, r6
     18a:	b2 01       	movw	r22, r4
     18c:	4c d7       	rcall	.+3736   	; 0x1026 <__addsf3>
     18e:	2b 01       	movw	r4, r22
     190:	3c 01       	movw	r6, r24
     192:	ce 0c       	add	r12, r14
     194:	df 1c       	adc	r13, r15
     196:	21 c0       	rjmp	.+66     	; 0x1da <linje_get_error+0xee>
     198:	ce 01       	movw	r24, r28
     19a:	40 97       	sbiw	r24, 0x10	; 16
     19c:	71 01       	movw	r14, r2
     19e:	02 c0       	rjmp	.+4      	; 0x1a4 <linje_get_error+0xb8>
     1a0:	f5 94       	asr	r15
     1a2:	e7 94       	ror	r14
     1a4:	8a 95       	dec	r24
     1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <linje_get_error+0xb4>
     1a8:	83 e0       	ldi	r24, 0x03	; 3
     1aa:	e8 22       	and	r14, r24
     1ac:	ff 24       	eor	r15, r15
     1ae:	0e 9d       	mul	r16, r14
     1b0:	b0 01       	movw	r22, r0
     1b2:	0f 9d       	mul	r16, r15
     1b4:	70 0d       	add	r23, r0
     1b6:	1e 9d       	mul	r17, r14
     1b8:	70 0d       	add	r23, r0
     1ba:	11 24       	eor	r1, r1
     1bc:	07 2e       	mov	r0, r23
     1be:	00 0c       	add	r0, r0
     1c0:	88 0b       	sbc	r24, r24
     1c2:	99 0b       	sbc	r25, r25
     1c4:	0e 94 12 09 	call	0x1224	; 0x1224 <__floatsisf>
     1c8:	9b 01       	movw	r18, r22
     1ca:	ac 01       	movw	r20, r24
     1cc:	c3 01       	movw	r24, r6
     1ce:	b2 01       	movw	r22, r4
     1d0:	2a d7       	rcall	.+3668   	; 0x1026 <__addsf3>
     1d2:	2b 01       	movw	r4, r22
     1d4:	3c 01       	movw	r6, r24
     1d6:	ce 0c       	add	r12, r14
     1d8:	df 1c       	adc	r13, r15
     1da:	22 96       	adiw	r28, 0x02	; 2
     1dc:	01 50       	subi	r16, 0x01	; 1
     1de:	11 09       	sbc	r17, r1
     1e0:	c6 31       	cpi	r28, 0x16	; 22
     1e2:	d1 05       	cpc	r29, r1
     1e4:	09 f0       	breq	.+2      	; 0x1e8 <linje_get_error+0xfc>
     1e6:	b2 cf       	rjmp	.-156    	; 0x14c <linje_get_error+0x60>
     1e8:	d0 92 30 01 	sts	0x0130, r13
     1ec:	c0 92 2f 01 	sts	0x012F, r12
     1f0:	c1 14       	cp	r12, r1
     1f2:	d1 04       	cpc	r13, r1
     1f4:	61 f0       	breq	.+24     	; 0x20e <linje_get_error+0x122>
     1f6:	b6 01       	movw	r22, r12
     1f8:	dd 0c       	add	r13, r13
     1fa:	88 0b       	sbc	r24, r24
     1fc:	99 0b       	sbc	r25, r25
     1fe:	0e 94 12 09 	call	0x1224	; 0x1224 <__floatsisf>
     202:	9b 01       	movw	r18, r22
     204:	ac 01       	movw	r20, r24
     206:	c3 01       	movw	r24, r6
     208:	b2 01       	movw	r22, r4
     20a:	71 d7       	rcall	.+3810   	; 0x10ee <__divsf3>
     20c:	03 c0       	rjmp	.+6      	; 0x214 <linje_get_error+0x128>
     20e:	60 e0       	ldi	r22, 0x00	; 0
     210:	70 e0       	ldi	r23, 0x00	; 0
     212:	cb 01       	movw	r24, r22
     214:	d4 d7       	rcall	.+4008   	; 0x11be <__fixsfsi>
     216:	cb 01       	movw	r24, r22
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	1f 91       	pop	r17
     21e:	0f 91       	pop	r16
     220:	ff 90       	pop	r15
     222:	ef 90       	pop	r14
     224:	df 90       	pop	r13
     226:	cf 90       	pop	r12
     228:	bf 90       	pop	r11
     22a:	af 90       	pop	r10
     22c:	9f 90       	pop	r9
     22e:	8f 90       	pop	r8
     230:	7f 90       	pop	r7
     232:	6f 90       	pop	r6
     234:	5f 90       	pop	r5
     236:	4f 90       	pop	r4
     238:	3f 90       	pop	r3
     23a:	2f 90       	pop	r2
     23c:	08 95       	ret

0000023e <linje_RGBsveng>:
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	f8 94       	cli
     244:	20 91 5b 01 	lds	r18, 0x015B
     248:	30 91 5c 01 	lds	r19, 0x015C
     24c:	40 91 70 01 	lds	r20, 0x0170
     250:	50 91 71 01 	lds	r21, 0x0171
     254:	78 94       	sei
     256:	80 91 14 01 	lds	r24, 0x0114
     25a:	90 91 15 01 	lds	r25, 0x0115
     25e:	85 31       	cpi	r24, 0x15	; 21
     260:	91 05       	cpc	r25, r1
     262:	3c f0       	brlt	.+14     	; 0x272 <linje_RGBsveng+0x34>
     264:	10 92 68 01 	sts	0x0168, r1
     268:	10 92 15 01 	sts	0x0115, r1
     26c:	10 92 14 01 	sts	0x0114, r1
     270:	75 c0       	rjmp	.+234    	; 0x35c <linje_RGBsveng+0x11e>
     272:	01 96       	adiw	r24, 0x01	; 1
     274:	90 93 15 01 	sts	0x0115, r25
     278:	80 93 14 01 	sts	0x0114, r24
     27c:	6f c0       	rjmp	.+222    	; 0x35c <linje_RGBsveng+0x11e>
     27e:	a0 ef       	ldi	r26, 0xF0	; 240
     280:	bf ef       	ldi	r27, 0xFF	; 255
     282:	6b ef       	ldi	r22, 0xFB	; 251
     284:	e0 e0       	ldi	r30, 0x00	; 0
     286:	f0 e0       	ldi	r31, 0x00	; 0
     288:	80 e0       	ldi	r24, 0x00	; 0
     28a:	81 11       	cpse	r24, r1
     28c:	1f c0       	rjmp	.+62     	; 0x2cc <linje_RGBsveng+0x8e>
     28e:	e8 30       	cpi	r30, 0x08	; 8
     290:	f1 05       	cpc	r31, r1
     292:	84 f4       	brge	.+32     	; 0x2b4 <linje_RGBsveng+0x76>
     294:	cf 01       	movw	r24, r30
     296:	88 0f       	add	r24, r24
     298:	99 1f       	adc	r25, r25
     29a:	e9 01       	movw	r28, r18
     29c:	02 c0       	rjmp	.+4      	; 0x2a2 <linje_RGBsveng+0x64>
     29e:	d5 95       	asr	r29
     2a0:	c7 95       	ror	r28
     2a2:	8a 95       	dec	r24
     2a4:	e2 f7       	brpl	.-8      	; 0x29e <linje_RGBsveng+0x60>
     2a6:	ce 01       	movw	r24, r28
     2a8:	86 95       	lsr	r24
     2aa:	81 70       	andi	r24, 0x01	; 1
     2ac:	68 9f       	mul	r22, r24
     2ae:	80 2d       	mov	r24, r0
     2b0:	11 24       	eor	r1, r1
     2b2:	0c c0       	rjmp	.+24     	; 0x2cc <linje_RGBsveng+0x8e>
     2b4:	ca 01       	movw	r24, r20
     2b6:	0a 2e       	mov	r0, r26
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <linje_RGBsveng+0x80>
     2ba:	95 95       	asr	r25
     2bc:	87 95       	ror	r24
     2be:	0a 94       	dec	r0
     2c0:	e2 f7       	brpl	.-8      	; 0x2ba <linje_RGBsveng+0x7c>
     2c2:	86 95       	lsr	r24
     2c4:	81 70       	andi	r24, 0x01	; 1
     2c6:	68 9f       	mul	r22, r24
     2c8:	80 2d       	mov	r24, r0
     2ca:	11 24       	eor	r1, r1
     2cc:	31 96       	adiw	r30, 0x01	; 1
     2ce:	6f 5f       	subi	r22, 0xFF	; 255
     2d0:	12 96       	adiw	r26, 0x02	; 2
     2d2:	66 30       	cpi	r22, 0x06	; 6
     2d4:	d1 f6       	brne	.-76     	; 0x28a <linje_RGBsveng+0x4c>
     2d6:	48 c0       	rjmp	.+144    	; 0x368 <linje_RGBsveng+0x12a>
     2d8:	82 30       	cpi	r24, 0x02	; 2
     2da:	69 f4       	brne	.+26     	; 0x2f6 <linje_RGBsveng+0xb8>
     2dc:	20 7f       	andi	r18, 0xF0	; 240
     2de:	30 93 5c 01 	sts	0x015C, r19
     2e2:	20 93 5b 01 	sts	0x015B, r18
     2e6:	43 70       	andi	r20, 0x03	; 3
     2e8:	55 27       	eor	r21, r21
     2ea:	50 93 71 01 	sts	0x0171, r21
     2ee:	40 93 70 01 	sts	0x0170, r20
     2f2:	fc de       	rcall	.-520    	; 0xec <linje_get_error>
     2f4:	39 c0       	rjmp	.+114    	; 0x368 <linje_RGBsveng+0x12a>
     2f6:	83 30       	cpi	r24, 0x03	; 3
     2f8:	79 f5       	brne	.+94     	; 0x358 <linje_RGBsveng+0x11a>
     2fa:	a6 e0       	ldi	r26, 0x06	; 6
     2fc:	b0 e0       	ldi	r27, 0x00	; 0
     2fe:	e6 e0       	ldi	r30, 0x06	; 6
     300:	6b e0       	ldi	r22, 0x0B	; 11
     302:	70 e0       	ldi	r23, 0x00	; 0
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	81 11       	cpse	r24, r1
     308:	1f c0       	rjmp	.+62     	; 0x348 <linje_RGBsveng+0x10a>
     30a:	68 30       	cpi	r22, 0x08	; 8
     30c:	71 05       	cpc	r23, r1
     30e:	84 f4       	brge	.+32     	; 0x330 <linje_RGBsveng+0xf2>
     310:	cb 01       	movw	r24, r22
     312:	88 0f       	add	r24, r24
     314:	99 1f       	adc	r25, r25
     316:	e9 01       	movw	r28, r18
     318:	02 c0       	rjmp	.+4      	; 0x31e <linje_RGBsveng+0xe0>
     31a:	d5 95       	asr	r29
     31c:	c7 95       	ror	r28
     31e:	8a 95       	dec	r24
     320:	e2 f7       	brpl	.-8      	; 0x31a <linje_RGBsveng+0xdc>
     322:	ce 01       	movw	r24, r28
     324:	86 95       	lsr	r24
     326:	81 70       	andi	r24, 0x01	; 1
     328:	e8 9f       	mul	r30, r24
     32a:	80 2d       	mov	r24, r0
     32c:	11 24       	eor	r1, r1
     32e:	0c c0       	rjmp	.+24     	; 0x348 <linje_RGBsveng+0x10a>
     330:	ca 01       	movw	r24, r20
     332:	0a 2e       	mov	r0, r26
     334:	02 c0       	rjmp	.+4      	; 0x33a <linje_RGBsveng+0xfc>
     336:	95 95       	asr	r25
     338:	87 95       	ror	r24
     33a:	0a 94       	dec	r0
     33c:	e2 f7       	brpl	.-8      	; 0x336 <linje_RGBsveng+0xf8>
     33e:	86 95       	lsr	r24
     340:	81 70       	andi	r24, 0x01	; 1
     342:	e8 9f       	mul	r30, r24
     344:	80 2d       	mov	r24, r0
     346:	11 24       	eor	r1, r1
     348:	61 50       	subi	r22, 0x01	; 1
     34a:	71 09       	sbc	r23, r1
     34c:	e1 50       	subi	r30, 0x01	; 1
     34e:	12 97       	sbiw	r26, 0x02	; 2
     350:	61 15       	cp	r22, r1
     352:	71 05       	cpc	r23, r1
     354:	c1 f6       	brne	.-80     	; 0x306 <linje_RGBsveng+0xc8>
     356:	08 c0       	rjmp	.+16     	; 0x368 <linje_RGBsveng+0x12a>
     358:	80 e0       	ldi	r24, 0x00	; 0
     35a:	06 c0       	rjmp	.+12     	; 0x368 <linje_RGBsveng+0x12a>
     35c:	80 91 68 01 	lds	r24, 0x0168
     360:	81 30       	cpi	r24, 0x01	; 1
     362:	09 f0       	breq	.+2      	; 0x366 <linje_RGBsveng+0x128>
     364:	b9 cf       	rjmp	.-142    	; 0x2d8 <linje_RGBsveng+0x9a>
     366:	8b cf       	rjmp	.-234    	; 0x27e <linje_RGBsveng+0x40>
     368:	df 91       	pop	r29
     36a:	cf 91       	pop	r28
     36c:	08 95       	ret

0000036e <detect_goal>:
     36e:	80 91 35 01 	lds	r24, 0x0135
     372:	90 91 36 01 	lds	r25, 0x0136
     376:	44 97       	sbiw	r24, 0x14	; 20
     378:	34 f0       	brlt	.+12     	; 0x386 <detect_goal+0x18>
     37a:	10 92 13 01 	sts	0x0113, r1
     37e:	10 92 12 01 	sts	0x0112, r1
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	08 95       	ret
     386:	08 95       	ret

00000388 <detect_labyrint>:
     388:	80 91 64 01 	lds	r24, 0x0164
     38c:	89 31       	cpi	r24, 0x19	; 25
     38e:	70 f4       	brcc	.+28     	; 0x3ac <detect_labyrint+0x24>
     390:	80 91 10 01 	lds	r24, 0x0110
     394:	90 91 11 01 	lds	r25, 0x0111
     398:	85 31       	cpi	r24, 0x15	; 21
     39a:	91 05       	cpc	r25, r1
     39c:	6c f4       	brge	.+26     	; 0x3b8 <detect_labyrint+0x30>
     39e:	01 96       	adiw	r24, 0x01	; 1
     3a0:	90 93 11 01 	sts	0x0111, r25
     3a4:	80 93 10 01 	sts	0x0110, r24
     3a8:	80 e0       	ldi	r24, 0x00	; 0
     3aa:	08 95       	ret
     3ac:	10 92 11 01 	sts	0x0111, r1
     3b0:	10 92 10 01 	sts	0x0110, r1
     3b4:	80 e0       	ldi	r24, 0x00	; 0
     3b6:	08 95       	ret
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	08 95       	ret

000003bc <manual_drive>:
     3bc:	80 91 2d 01 	lds	r24, 0x012D
     3c0:	90 91 2e 01 	lds	r25, 0x012E
     3c4:	00 97       	sbiw	r24, 0x00	; 0
     3c6:	29 f4       	brne	.+10     	; 0x3d2 <manual_drive+0x16>
     3c8:	2e 98       	cbi	0x05, 6	; 5
     3ca:	2d 98       	cbi	0x05, 5	; 5
     3cc:	17 bc       	out	0x27, r1	; 39
     3ce:	18 bc       	out	0x28, r1	; 40
     3d0:	08 95       	ret
     3d2:	81 30       	cpi	r24, 0x01	; 1
     3d4:	91 05       	cpc	r25, r1
     3d6:	49 f4       	brne	.+18     	; 0x3ea <manual_drive+0x2e>
     3d8:	2e 98       	cbi	0x05, 6	; 5
     3da:	2d 98       	cbi	0x05, 5	; 5
     3dc:	80 91 3d 01 	lds	r24, 0x013D
     3e0:	87 bd       	out	0x27, r24	; 39
     3e2:	80 91 3b 01 	lds	r24, 0x013B
     3e6:	88 bd       	out	0x28, r24	; 40
     3e8:	08 95       	ret
     3ea:	82 30       	cpi	r24, 0x02	; 2
     3ec:	91 05       	cpc	r25, r1
     3ee:	59 f4       	brne	.+22     	; 0x406 <manual_drive+0x4a>
     3f0:	85 b1       	in	r24, 0x05	; 5
     3f2:	80 66       	ori	r24, 0x60	; 96
     3f4:	85 b9       	out	0x05, r24	; 5
     3f6:	80 91 3d 01 	lds	r24, 0x013D
     3fa:	8d 50       	subi	r24, 0x0D	; 13
     3fc:	87 bd       	out	0x27, r24	; 39
     3fe:	80 91 3b 01 	lds	r24, 0x013B
     402:	88 bd       	out	0x28, r24	; 40
     404:	08 95       	ret
     406:	83 30       	cpi	r24, 0x03	; 3
     408:	91 05       	cpc	r25, r1
     40a:	81 f4       	brne	.+32     	; 0x42c <manual_drive+0x70>
     40c:	2e 98       	cbi	0x05, 6	; 5
     40e:	2d 98       	cbi	0x05, 5	; 5
     410:	80 91 3d 01 	lds	r24, 0x013D
     414:	87 bd       	out	0x27, r24	; 39
     416:	20 91 3b 01 	lds	r18, 0x013B
     41a:	90 91 3c 01 	lds	r25, 0x013C
     41e:	82 2f       	mov	r24, r18
     420:	63 e0       	ldi	r22, 0x03	; 3
     422:	70 e0       	ldi	r23, 0x00	; 0
     424:	ee d7       	rcall	.+4060   	; 0x1402 <__divmodhi4>
     426:	26 1b       	sub	r18, r22
     428:	28 bd       	out	0x28, r18	; 40
     42a:	08 95       	ret
     42c:	84 30       	cpi	r24, 0x04	; 4
     42e:	91 05       	cpc	r25, r1
     430:	81 f4       	brne	.+32     	; 0x452 <manual_drive+0x96>
     432:	2e 98       	cbi	0x05, 6	; 5
     434:	2d 98       	cbi	0x05, 5	; 5
     436:	20 91 3d 01 	lds	r18, 0x013D
     43a:	90 91 3e 01 	lds	r25, 0x013E
     43e:	82 2f       	mov	r24, r18
     440:	63 e0       	ldi	r22, 0x03	; 3
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	de d7       	rcall	.+4028   	; 0x1402 <__divmodhi4>
     446:	26 1b       	sub	r18, r22
     448:	27 bd       	out	0x27, r18	; 39
     44a:	80 91 3b 01 	lds	r24, 0x013B
     44e:	88 bd       	out	0x28, r24	; 40
     450:	08 95       	ret
     452:	85 30       	cpi	r24, 0x05	; 5
     454:	91 05       	cpc	r25, r1
     456:	49 f4       	brne	.+18     	; 0x46a <manual_drive+0xae>
     458:	2e 98       	cbi	0x05, 6	; 5
     45a:	2d 9a       	sbi	0x05, 5	; 5
     45c:	80 91 3d 01 	lds	r24, 0x013D
     460:	87 bd       	out	0x27, r24	; 39
     462:	80 91 3b 01 	lds	r24, 0x013B
     466:	88 bd       	out	0x28, r24	; 40
     468:	08 95       	ret
     46a:	06 97       	sbiw	r24, 0x06	; 6
     46c:	49 f4       	brne	.+18     	; 0x480 <manual_drive+0xc4>
     46e:	2d 98       	cbi	0x05, 5	; 5
     470:	2e 9a       	sbi	0x05, 6	; 5
     472:	80 91 3d 01 	lds	r24, 0x013D
     476:	87 bd       	out	0x27, r24	; 39
     478:	80 91 3b 01 	lds	r24, 0x013B
     47c:	88 bd       	out	0x28, r24	; 40
     47e:	08 95       	ret
     480:	10 92 2e 01 	sts	0x012E, r1
     484:	10 92 2d 01 	sts	0x012D, r1
     488:	08 95       	ret

0000048a <linje>:
     48a:	4f 92       	push	r4
     48c:	5f 92       	push	r5
     48e:	6f 92       	push	r6
     490:	7f 92       	push	r7
     492:	8f 92       	push	r8
     494:	9f 92       	push	r9
     496:	af 92       	push	r10
     498:	bf 92       	push	r11
     49a:	cf 92       	push	r12
     49c:	df 92       	push	r13
     49e:	ef 92       	push	r14
     4a0:	ff 92       	push	r15
     4a2:	f8 94       	cli
     4a4:	60 91 17 01 	lds	r22, 0x0117
     4a8:	70 91 18 01 	lds	r23, 0x0118
     4ac:	80 91 19 01 	lds	r24, 0x0119
     4b0:	90 91 1a 01 	lds	r25, 0x011A
     4b4:	84 d6       	rcall	.+3336   	; 0x11be <__fixsfsi>
     4b6:	78 94       	sei
     4b8:	20 91 25 01 	lds	r18, 0x0125
     4bc:	30 91 26 01 	lds	r19, 0x0126
     4c0:	a9 01       	movw	r20, r18
     4c2:	46 1b       	sub	r20, r22
     4c4:	57 0b       	sbc	r21, r23
     4c6:	ba 01       	movw	r22, r20
     4c8:	07 2e       	mov	r0, r23
     4ca:	00 0c       	add	r0, r0
     4cc:	88 0b       	sbc	r24, r24
     4ce:	99 0b       	sbc	r25, r25
     4d0:	a9 d6       	rcall	.+3410   	; 0x1224 <__floatsisf>
     4d2:	6b 01       	movw	r12, r22
     4d4:	7c 01       	movw	r14, r24
     4d6:	60 93 21 01 	sts	0x0121, r22
     4da:	70 93 22 01 	sts	0x0122, r23
     4de:	80 93 23 01 	sts	0x0123, r24
     4e2:	90 93 24 01 	sts	0x0124, r25
     4e6:	20 91 1b 01 	lds	r18, 0x011B
     4ea:	30 91 1c 01 	lds	r19, 0x011C
     4ee:	40 91 1d 01 	lds	r20, 0x011D
     4f2:	50 91 1e 01 	lds	r21, 0x011E
     4f6:	96 d5       	rcall	.+2860   	; 0x1024 <__subsf3>
     4f8:	4b 01       	movw	r8, r22
     4fa:	5c 01       	movw	r10, r24
     4fc:	60 93 29 01 	sts	0x0129, r22
     500:	70 93 2a 01 	sts	0x012A, r23
     504:	80 93 2b 01 	sts	0x012B, r24
     508:	90 93 2c 01 	sts	0x012C, r25
     50c:	60 91 02 01 	lds	r22, 0x0102
     510:	70 91 03 01 	lds	r23, 0x0103
     514:	07 2e       	mov	r0, r23
     516:	00 0c       	add	r0, r0
     518:	88 0b       	sbc	r24, r24
     51a:	99 0b       	sbc	r25, r25
     51c:	83 d6       	rcall	.+3334   	; 0x1224 <__floatsisf>
     51e:	9b 01       	movw	r18, r22
     520:	ac 01       	movw	r20, r24
     522:	c7 01       	movw	r24, r14
     524:	b6 01       	movw	r22, r12
     526:	0a d7       	rcall	.+3604   	; 0x133c <__mulsf3>
     528:	2b 01       	movw	r4, r22
     52a:	3c 01       	movw	r6, r24
     52c:	60 91 00 01 	lds	r22, 0x0100
     530:	70 91 01 01 	lds	r23, 0x0101
     534:	07 2e       	mov	r0, r23
     536:	00 0c       	add	r0, r0
     538:	88 0b       	sbc	r24, r24
     53a:	99 0b       	sbc	r25, r25
     53c:	73 d6       	rcall	.+3302   	; 0x1224 <__floatsisf>
     53e:	9b 01       	movw	r18, r22
     540:	ac 01       	movw	r20, r24
     542:	c5 01       	movw	r24, r10
     544:	b4 01       	movw	r22, r8
     546:	fa d6       	rcall	.+3572   	; 0x133c <__mulsf3>
     548:	9b 01       	movw	r18, r22
     54a:	ac 01       	movw	r20, r24
     54c:	c3 01       	movw	r24, r6
     54e:	b2 01       	movw	r22, r4
     550:	6a d5       	rcall	.+2772   	; 0x1026 <__addsf3>
     552:	35 d6       	rcall	.+3178   	; 0x11be <__fixsfsi>
     554:	9b 01       	movw	r18, r22
     556:	70 93 20 01 	sts	0x0120, r23
     55a:	60 93 1f 01 	sts	0x011F, r22
     55e:	c0 92 1b 01 	sts	0x011B, r12
     562:	d0 92 1c 01 	sts	0x011C, r13
     566:	e0 92 1d 01 	sts	0x011D, r14
     56a:	f0 92 1e 01 	sts	0x011E, r15
     56e:	40 91 2f 01 	lds	r20, 0x012F
     572:	50 91 30 01 	lds	r21, 0x0130
     576:	45 2b       	or	r20, r21
     578:	b9 f4       	brne	.+46     	; 0x5a8 <linje+0x11e>
     57a:	2e 9a       	sbi	0x05, 6	; 5
     57c:	2d 9a       	sbi	0x05, 5	; 5
     57e:	80 91 3d 01 	lds	r24, 0x013D
     582:	90 91 3e 01 	lds	r25, 0x013E
     586:	99 23       	and	r25, r25
     588:	0c f4       	brge	.+2      	; 0x58c <linje+0x102>
     58a:	01 96       	adiw	r24, 0x01	; 1
     58c:	95 95       	asr	r25
     58e:	87 95       	ror	r24
     590:	87 bd       	out	0x27, r24	; 39
     592:	80 91 3b 01 	lds	r24, 0x013B
     596:	90 91 3c 01 	lds	r25, 0x013C
     59a:	99 23       	and	r25, r25
     59c:	0c f4       	brge	.+2      	; 0x5a0 <linje+0x116>
     59e:	01 96       	adiw	r24, 0x01	; 1
     5a0:	95 95       	asr	r25
     5a2:	87 95       	ror	r24
     5a4:	88 bd       	out	0x28, r24	; 40
     5a6:	5b c0       	rjmp	.+182    	; 0x65e <linje+0x1d4>
     5a8:	77 23       	and	r23, r23
     5aa:	6c f5       	brge	.+90     	; 0x606 <linje+0x17c>
     5ac:	9b 01       	movw	r18, r22
     5ae:	77 23       	and	r23, r23
     5b0:	24 f4       	brge	.+8      	; 0x5ba <linje+0x130>
     5b2:	22 27       	eor	r18, r18
     5b4:	33 27       	eor	r19, r19
     5b6:	26 1b       	sub	r18, r22
     5b8:	37 0b       	sbc	r19, r23
     5ba:	80 91 3b 01 	lds	r24, 0x013B
     5be:	90 91 3c 01 	lds	r25, 0x013C
     5c2:	28 17       	cp	r18, r24
     5c4:	39 07       	cpc	r19, r25
     5c6:	9c f0       	brlt	.+38     	; 0x5ee <linje+0x164>
     5c8:	2d 9a       	sbi	0x05, 5	; 5
     5ca:	2e 98       	cbi	0x05, 6	; 5
     5cc:	80 91 3d 01 	lds	r24, 0x013D
     5d0:	87 bd       	out	0x27, r24	; 39
     5d2:	80 91 1f 01 	lds	r24, 0x011F
     5d6:	90 91 20 01 	lds	r25, 0x0120
     5da:	99 23       	and	r25, r25
     5dc:	1c f4       	brge	.+6      	; 0x5e4 <linje+0x15a>
     5de:	91 95       	neg	r25
     5e0:	81 95       	neg	r24
     5e2:	91 09       	sbc	r25, r1
     5e4:	90 91 3b 01 	lds	r25, 0x013B
     5e8:	89 1b       	sub	r24, r25
     5ea:	88 bd       	out	0x28, r24	; 40
     5ec:	38 c0       	rjmp	.+112    	; 0x65e <linje+0x1d4>
     5ee:	2e 98       	cbi	0x05, 6	; 5
     5f0:	2d 98       	cbi	0x05, 5	; 5
     5f2:	80 91 3d 01 	lds	r24, 0x013D
     5f6:	87 bd       	out	0x27, r24	; 39
     5f8:	90 91 1f 01 	lds	r25, 0x011F
     5fc:	80 91 3b 01 	lds	r24, 0x013B
     600:	89 0f       	add	r24, r25
     602:	88 bd       	out	0x28, r24	; 40
     604:	2c c0       	rjmp	.+88     	; 0x65e <linje+0x1d4>
     606:	16 16       	cp	r1, r22
     608:	17 06       	cpc	r1, r23
     60a:	fc f4       	brge	.+62     	; 0x64a <linje+0x1c0>
     60c:	80 91 3d 01 	lds	r24, 0x013D
     610:	90 91 3e 01 	lds	r25, 0x013E
     614:	28 17       	cp	r18, r24
     616:	39 07       	cpc	r19, r25
     618:	64 f0       	brlt	.+24     	; 0x632 <linje+0x1a8>
     61a:	2e 9a       	sbi	0x05, 6	; 5
     61c:	2d 98       	cbi	0x05, 5	; 5
     61e:	80 91 3b 01 	lds	r24, 0x013B
     622:	88 bd       	out	0x28, r24	; 40
     624:	80 91 1f 01 	lds	r24, 0x011F
     628:	90 91 3d 01 	lds	r25, 0x013D
     62c:	89 1b       	sub	r24, r25
     62e:	87 bd       	out	0x27, r24	; 39
     630:	16 c0       	rjmp	.+44     	; 0x65e <linje+0x1d4>
     632:	2e 98       	cbi	0x05, 6	; 5
     634:	2d 98       	cbi	0x05, 5	; 5
     636:	80 91 3b 01 	lds	r24, 0x013B
     63a:	88 bd       	out	0x28, r24	; 40
     63c:	80 91 3d 01 	lds	r24, 0x013D
     640:	90 91 1f 01 	lds	r25, 0x011F
     644:	89 1b       	sub	r24, r25
     646:	87 bd       	out	0x27, r24	; 39
     648:	0a c0       	rjmp	.+20     	; 0x65e <linje+0x1d4>
     64a:	67 2b       	or	r22, r23
     64c:	41 f4       	brne	.+16     	; 0x65e <linje+0x1d4>
     64e:	2e 98       	cbi	0x05, 6	; 5
     650:	2d 98       	cbi	0x05, 5	; 5
     652:	80 91 3d 01 	lds	r24, 0x013D
     656:	87 bd       	out	0x27, r24	; 39
     658:	80 91 3b 01 	lds	r24, 0x013B
     65c:	88 bd       	out	0x28, r24	; 40
     65e:	ff 90       	pop	r15
     660:	ef 90       	pop	r14
     662:	df 90       	pop	r13
     664:	cf 90       	pop	r12
     666:	bf 90       	pop	r11
     668:	af 90       	pop	r10
     66a:	9f 90       	pop	r9
     66c:	8f 90       	pop	r8
     66e:	7f 90       	pop	r7
     670:	6f 90       	pop	r6
     672:	5f 90       	pop	r5
     674:	4f 90       	pop	r4
     676:	08 95       	ret

00000678 <linje_main>:
     678:	80 91 61 01 	lds	r24, 0x0161
     67c:	8a 30       	cpi	r24, 0x0A	; 10
     67e:	28 f4       	brcc	.+10     	; 0x68a <linje_main+0x12>
     680:	10 92 40 01 	sts	0x0140, r1
     684:	10 92 3f 01 	sts	0x013F, r1
     688:	08 95       	ret
     68a:	80 91 68 01 	lds	r24, 0x0168
     68e:	81 50       	subi	r24, 0x01	; 1
     690:	83 30       	cpi	r24, 0x03	; 3
     692:	88 f4       	brcc	.+34     	; 0x6b6 <linje_main+0x3e>
     694:	d4 dd       	rcall	.-1112   	; 0x23e <linje_RGBsveng>
     696:	68 2f       	mov	r22, r24
     698:	88 0f       	add	r24, r24
     69a:	77 0b       	sbc	r23, r23
     69c:	88 0b       	sbc	r24, r24
     69e:	99 0b       	sbc	r25, r25
     6a0:	c1 d5       	rcall	.+2946   	; 0x1224 <__floatsisf>
     6a2:	60 93 17 01 	sts	0x0117, r22
     6a6:	70 93 18 01 	sts	0x0118, r23
     6aa:	80 93 19 01 	sts	0x0119, r24
     6ae:	90 93 1a 01 	sts	0x011A, r25
     6b2:	eb ce       	rjmp	.-554    	; 0x48a <linje>
     6b4:	08 95       	ret
     6b6:	5b de       	rcall	.-842    	; 0x36e <detect_goal>
     6b8:	88 23       	and	r24, r24
     6ba:	29 f0       	breq	.+10     	; 0x6c6 <linje_main+0x4e>
     6bc:	10 92 40 01 	sts	0x0140, r1
     6c0:	10 92 3f 01 	sts	0x013F, r1
     6c4:	08 95       	ret
     6c6:	60 de       	rcall	.-832    	; 0x388 <detect_labyrint>
     6c8:	88 23       	and	r24, r24
     6ca:	39 f0       	breq	.+14     	; 0x6da <linje_main+0x62>
     6cc:	82 e0       	ldi	r24, 0x02	; 2
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	90 93 34 01 	sts	0x0134, r25
     6d4:	80 93 33 01 	sts	0x0133, r24
     6d8:	08 95       	ret
     6da:	08 dd       	rcall	.-1520   	; 0xec <linje_get_error>
     6dc:	bc 01       	movw	r22, r24
     6de:	99 0f       	add	r25, r25
     6e0:	88 0b       	sbc	r24, r24
     6e2:	99 0b       	sbc	r25, r25
     6e4:	9f d5       	rcall	.+2878   	; 0x1224 <__floatsisf>
     6e6:	60 93 17 01 	sts	0x0117, r22
     6ea:	70 93 18 01 	sts	0x0118, r23
     6ee:	80 93 19 01 	sts	0x0119, r24
     6f2:	90 93 1a 01 	sts	0x011A, r25
     6f6:	c9 ce       	rjmp	.-622    	; 0x48a <linje>
     6f8:	08 95       	ret

000006fa <initengine>:
     6fa:	84 b5       	in	r24, 0x24	; 36
     6fc:	83 6a       	ori	r24, 0xA3	; 163
     6fe:	84 bd       	out	0x24, r24	; 36
     700:	17 bc       	out	0x27, r1	; 39
     702:	18 bc       	out	0x28, r1	; 40
     704:	85 b5       	in	r24, 0x25	; 37
     706:	83 60       	ori	r24, 0x03	; 3
     708:	85 bd       	out	0x25, r24	; 37
     70a:	88 e7       	ldi	r24, 0x78	; 120
     70c:	84 b9       	out	0x04, r24	; 4
     70e:	85 b1       	in	r24, 0x05	; 5
     710:	15 b8       	out	0x05, r1	; 5
     712:	08 95       	ret

00000714 <timerinit>:
     714:	83 e0       	ldi	r24, 0x03	; 3
     716:	8a b9       	out	0x0a, r24	; 10
     718:	e1 e8       	ldi	r30, 0x81	; 129
     71a:	f0 e0       	ldi	r31, 0x00	; 0
     71c:	80 81       	ld	r24, Z
     71e:	8d 60       	ori	r24, 0x0D	; 13
     720:	80 83       	st	Z, r24
     722:	80 ea       	ldi	r24, 0xA0	; 160
     724:	95 e0       	ldi	r25, 0x05	; 5
     726:	90 93 89 00 	sts	0x0089, r25
     72a:	80 93 88 00 	sts	0x0088, r24
     72e:	ef e6       	ldi	r30, 0x6F	; 111
     730:	f0 e0       	ldi	r31, 0x00	; 0
     732:	80 81       	ld	r24, Z
     734:	82 60       	ori	r24, 0x02	; 2
     736:	80 83       	st	Z, r24
     738:	b1 9a       	sbi	0x16, 1	; 22
     73a:	08 95       	ret

0000073c <__vector_13>:
     73c:	1f 92       	push	r1
     73e:	0f 92       	push	r0
     740:	0f b6       	in	r0, 0x3f	; 63
     742:	0f 92       	push	r0
     744:	11 24       	eor	r1, r1
     746:	8f 93       	push	r24
     748:	9f 93       	push	r25
     74a:	81 e0       	ldi	r24, 0x01	; 1
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	90 93 3a 01 	sts	0x013A, r25
     752:	80 93 39 01 	sts	0x0139, r24
     756:	80 91 35 01 	lds	r24, 0x0135
     75a:	90 91 36 01 	lds	r25, 0x0136
     75e:	01 96       	adiw	r24, 0x01	; 1
     760:	83 33       	cpi	r24, 0x33	; 51
     762:	91 05       	cpc	r25, r1
     764:	2c f4       	brge	.+10     	; 0x770 <__vector_13+0x34>
     766:	90 93 36 01 	sts	0x0136, r25
     76a:	80 93 35 01 	sts	0x0135, r24
     76e:	06 c0       	rjmp	.+12     	; 0x77c <__vector_13+0x40>
     770:	82 e3       	ldi	r24, 0x32	; 50
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	90 93 36 01 	sts	0x0136, r25
     778:	80 93 35 01 	sts	0x0135, r24
     77c:	80 91 37 01 	lds	r24, 0x0137
     780:	90 91 38 01 	lds	r25, 0x0138
     784:	01 96       	adiw	r24, 0x01	; 1
     786:	90 93 38 01 	sts	0x0138, r25
     78a:	80 93 37 01 	sts	0x0137, r24
     78e:	9f 91       	pop	r25
     790:	8f 91       	pop	r24
     792:	0f 90       	pop	r0
     794:	0f be       	out	0x3f, r0	; 63
     796:	0f 90       	pop	r0
     798:	1f 90       	pop	r1
     79a:	18 95       	reti

0000079c <interrupt_init>:
     79c:	8d b3       	in	r24, 0x1d	; 29
     79e:	86 60       	ori	r24, 0x06	; 6
     7a0:	8d bb       	out	0x1d, r24	; 29
     7a2:	e9 e6       	ldi	r30, 0x69	; 105
     7a4:	f0 e0       	ldi	r31, 0x00	; 0
     7a6:	80 81       	ld	r24, Z
     7a8:	88 62       	ori	r24, 0x28	; 40
     7aa:	80 83       	st	Z, r24
     7ac:	08 95       	ret

000007ae <__vector_2>:
     7ae:	1f 92       	push	r1
     7b0:	0f 92       	push	r0
     7b2:	0f b6       	in	r0, 0x3f	; 63
     7b4:	0f 92       	push	r0
     7b6:	11 24       	eor	r1, r1
     7b8:	8f 93       	push	r24
     7ba:	9f 93       	push	r25
     7bc:	80 91 41 01 	lds	r24, 0x0141
     7c0:	90 91 42 01 	lds	r25, 0x0142
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	39 f4       	brne	.+14     	; 0x7d6 <__vector_2+0x28>
     7c8:	10 92 42 01 	sts	0x0142, r1
     7cc:	10 92 41 01 	sts	0x0141, r1
     7d0:	59 9a       	sbi	0x0b, 1	; 11
     7d2:	58 98       	cbi	0x0b, 0	; 11
     7d4:	0c c0       	rjmp	.+24     	; 0x7ee <__vector_2+0x40>
     7d6:	10 92 40 01 	sts	0x0140, r1
     7da:	10 92 3f 01 	sts	0x013F, r1
     7de:	81 e0       	ldi	r24, 0x01	; 1
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	90 93 42 01 	sts	0x0142, r25
     7e6:	80 93 41 01 	sts	0x0141, r24
     7ea:	58 9a       	sbi	0x0b, 0	; 11
     7ec:	59 98       	cbi	0x0b, 1	; 11
     7ee:	e1 9a       	sbi	0x1c, 1	; 28
     7f0:	9f 91       	pop	r25
     7f2:	8f 91       	pop	r24
     7f4:	0f 90       	pop	r0
     7f6:	0f be       	out	0x3f, r0	; 63
     7f8:	0f 90       	pop	r0
     7fa:	1f 90       	pop	r1
     7fc:	18 95       	reti

000007fe <__vector_3>:
     7fe:	1f 92       	push	r1
     800:	0f 92       	push	r0
     802:	0f b6       	in	r0, 0x3f	; 63
     804:	0f 92       	push	r0
     806:	11 24       	eor	r1, r1
     808:	8f 93       	push	r24
     80a:	9f 93       	push	r25
     80c:	80 91 3f 01 	lds	r24, 0x013F
     810:	90 91 40 01 	lds	r25, 0x0140
     814:	89 2b       	or	r24, r25
     816:	39 f4       	brne	.+14     	; 0x826 <__vector_3+0x28>
     818:	81 e0       	ldi	r24, 0x01	; 1
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	90 93 40 01 	sts	0x0140, r25
     820:	80 93 3f 01 	sts	0x013F, r24
     824:	04 c0       	rjmp	.+8      	; 0x82e <__vector_3+0x30>
     826:	10 92 40 01 	sts	0x0140, r1
     82a:	10 92 3f 01 	sts	0x013F, r1
     82e:	e2 9a       	sbi	0x1c, 2	; 28
     830:	9f 91       	pop	r25
     832:	8f 91       	pop	r24
     834:	0f 90       	pop	r0
     836:	0f be       	out	0x3f, r0	; 63
     838:	0f 90       	pop	r0
     83a:	1f 90       	pop	r1
     83c:	18 95       	reti

0000083e <i2c_setup>:
     83e:	88 23       	and	r24, r24
     840:	69 f0       	breq	.+26     	; 0x85c <i2c_setup+0x1e>
     842:	3e 98       	cbi	0x07, 6	; 7
     844:	3f 98       	cbi	0x07, 7	; 7
     846:	e8 9a       	sbi	0x1d, 0	; 29
     848:	e9 e6       	ldi	r30, 0x69	; 105
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	80 81       	ld	r24, Z
     84e:	83 60       	ori	r24, 0x03	; 3
     850:	80 83       	st	Z, r24
     852:	80 e1       	ldi	r24, 0x10	; 16
     854:	80 93 b8 00 	sts	0x00B8, r24
     858:	10 92 b9 00 	sts	0x00B9, r1
     85c:	08 95       	ret

0000085e <i2c_send>:
     85e:	8f 92       	push	r8
     860:	9f 92       	push	r9
     862:	af 92       	push	r10
     864:	bf 92       	push	r11
     866:	cf 92       	push	r12
     868:	df 92       	push	r13
     86a:	ef 92       	push	r14
     86c:	ff 92       	push	r15
     86e:	0f 93       	push	r16
     870:	1f 93       	push	r17
     872:	cf 93       	push	r28
     874:	df 93       	push	r29
     876:	eb 01       	movw	r28, r22
     878:	08 81       	ld	r16, Y
     87a:	02 95       	swap	r16
     87c:	0f 70       	andi	r16, 0x0F	; 15
     87e:	10 e0       	ldi	r17, 0x00	; 0
     880:	4b 01       	movw	r8, r22
     882:	68 94       	set
     884:	ee 24       	eor	r14, r14
     886:	e3 f8       	bld	r14, 3
     888:	f1 2c       	mov	r15, r1
     88a:	40 e0       	ldi	r20, 0x00	; 0
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	ec eb       	ldi	r30, 0xBC	; 188
     890:	f0 e0       	ldi	r31, 0x00	; 0
     892:	0f 2e       	mov	r0, r31
     894:	f4 ea       	ldi	r31, 0xA4	; 164
     896:	df 2e       	mov	r13, r31
     898:	f0 2d       	mov	r31, r0
     89a:	a9 eb       	ldi	r26, 0xB9	; 185
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	8e 7f       	andi	r24, 0xFE	; 254
     8a0:	c8 2e       	mov	r12, r24
     8a2:	6b eb       	ldi	r22, 0xBB	; 187
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	84 e8       	ldi	r24, 0x84	; 132
     8a8:	68 94       	set
     8aa:	aa 24       	eor	r10, r10
     8ac:	a4 f8       	bld	r10, 4
     8ae:	b1 2c       	mov	r11, r1
     8b0:	d0 82       	st	Z, r13
     8b2:	90 81       	ld	r25, Z
     8b4:	99 23       	and	r25, r25
     8b6:	ec f7       	brge	.-6      	; 0x8b2 <i2c_send+0x54>
     8b8:	2c 91       	ld	r18, X
     8ba:	28 7f       	andi	r18, 0xF8	; 248
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	2e 15       	cp	r18, r14
     8c0:	3f 05       	cpc	r19, r15
     8c2:	69 f5       	brne	.+90     	; 0x91e <i2c_send+0xc0>
     8c4:	eb 01       	movw	r28, r22
     8c6:	c8 82       	st	Y, r12
     8c8:	80 83       	st	Z, r24
     8ca:	90 81       	ld	r25, Z
     8cc:	99 23       	and	r25, r25
     8ce:	ec f7       	brge	.-6      	; 0x8ca <i2c_send+0x6c>
     8d0:	9c 91       	ld	r25, X
     8d2:	98 7f       	andi	r25, 0xF8	; 248
     8d4:	98 31       	cpi	r25, 0x18	; 24
     8d6:	29 f0       	breq	.+10     	; 0x8e2 <i2c_send+0x84>
     8d8:	84 e9       	ldi	r24, 0x94	; 148
     8da:	80 93 bc 00 	sts	0x00BC, r24
     8de:	80 e0       	ldi	r24, 0x00	; 0
     8e0:	1f c0       	rjmp	.+62     	; 0x920 <i2c_send+0xc2>
     8e2:	e4 01       	movw	r28, r8
     8e4:	99 91       	ld	r25, Y+
     8e6:	4e 01       	movw	r8, r28
     8e8:	eb 01       	movw	r28, r22
     8ea:	98 83       	st	Y, r25
     8ec:	80 83       	st	Z, r24
     8ee:	90 81       	ld	r25, Z
     8f0:	99 23       	and	r25, r25
     8f2:	ec f7       	brge	.-6      	; 0x8ee <i2c_send+0x90>
     8f4:	9c 91       	ld	r25, X
     8f6:	98 7f       	andi	r25, 0xF8	; 248
     8f8:	98 32       	cpi	r25, 0x28	; 40
     8fa:	29 f0       	breq	.+10     	; 0x906 <i2c_send+0xa8>
     8fc:	84 e9       	ldi	r24, 0x94	; 148
     8fe:	80 93 bc 00 	sts	0x00BC, r24
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	0d c0       	rjmp	.+26     	; 0x920 <i2c_send+0xc2>
     906:	4f 5f       	subi	r20, 0xFF	; 255
     908:	5f 4f       	sbci	r21, 0xFF	; 255
     90a:	ea 2c       	mov	r14, r10
     90c:	fb 2c       	mov	r15, r11
     90e:	04 17       	cp	r16, r20
     910:	15 07       	cpc	r17, r21
     912:	74 f6       	brge	.-100    	; 0x8b0 <i2c_send+0x52>
     914:	84 e9       	ldi	r24, 0x94	; 148
     916:	80 93 bc 00 	sts	0x00BC, r24
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	01 c0       	rjmp	.+2      	; 0x920 <i2c_send+0xc2>
     91e:	80 e0       	ldi	r24, 0x00	; 0
     920:	df 91       	pop	r29
     922:	cf 91       	pop	r28
     924:	1f 91       	pop	r17
     926:	0f 91       	pop	r16
     928:	ff 90       	pop	r15
     92a:	ef 90       	pop	r14
     92c:	df 90       	pop	r13
     92e:	cf 90       	pop	r12
     930:	bf 90       	pop	r11
     932:	af 90       	pop	r10
     934:	9f 90       	pop	r9
     936:	8f 90       	pop	r8
     938:	08 95       	ret

0000093a <PD_for_lab>:
     93a:	2f 92       	push	r2
     93c:	3f 92       	push	r3
     93e:	4f 92       	push	r4
     940:	5f 92       	push	r5
     942:	6f 92       	push	r6
     944:	7f 92       	push	r7
     946:	8f 92       	push	r8
     948:	9f 92       	push	r9
     94a:	af 92       	push	r10
     94c:	bf 92       	push	r11
     94e:	cf 92       	push	r12
     950:	df 92       	push	r13
     952:	ef 92       	push	r14
     954:	ff 92       	push	r15
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	cf 93       	push	r28
     95c:	df 93       	push	r29
     95e:	cd b7       	in	r28, 0x3d	; 61
     960:	de b7       	in	r29, 0x3e	; 62
     962:	29 97       	sbiw	r28, 0x09	; 9
     964:	0f b6       	in	r0, 0x3f	; 63
     966:	f8 94       	cli
     968:	de bf       	out	0x3e, r29	; 62
     96a:	0f be       	out	0x3f, r0	; 63
     96c:	cd bf       	out	0x3d, r28	; 61
     96e:	4c 01       	movw	r8, r24
     970:	3a 01       	movw	r6, r20
     972:	00 91 06 01 	lds	r16, 0x0106
     976:	10 91 07 01 	lds	r17, 0x0107
     97a:	58 01       	movw	r10, r16
     97c:	a6 1a       	sub	r10, r22
     97e:	b7 0a       	sbc	r11, r23
     980:	20 90 27 01 	lds	r2, 0x0127
     984:	30 90 28 01 	lds	r3, 0x0128
     988:	c0 90 0a 01 	lds	r12, 0x010A
     98c:	d0 90 0b 01 	lds	r13, 0x010B
     990:	60 91 08 01 	lds	r22, 0x0108
     994:	70 91 09 01 	lds	r23, 0x0109
     998:	07 2e       	mov	r0, r23
     99a:	00 0c       	add	r0, r0
     99c:	88 0b       	sbc	r24, r24
     99e:	99 0b       	sbc	r25, r25
     9a0:	41 d4       	rcall	.+2178   	; 0x1224 <__floatsisf>
     9a2:	6e 83       	std	Y+6, r22	; 0x06
     9a4:	7f 83       	std	Y+7, r23	; 0x07
     9a6:	88 87       	std	Y+8, r24	; 0x08
     9a8:	99 87       	std	Y+9, r25	; 0x09
     9aa:	ac 9c       	mul	r10, r12
     9ac:	b0 01       	movw	r22, r0
     9ae:	ad 9c       	mul	r10, r13
     9b0:	70 0d       	add	r23, r0
     9b2:	bc 9c       	mul	r11, r12
     9b4:	70 0d       	add	r23, r0
     9b6:	11 24       	eor	r1, r1
     9b8:	07 2e       	mov	r0, r23
     9ba:	00 0c       	add	r0, r0
     9bc:	88 0b       	sbc	r24, r24
     9be:	99 0b       	sbc	r25, r25
     9c0:	31 d4       	rcall	.+2146   	; 0x1224 <__floatsisf>
     9c2:	6a 83       	std	Y+2, r22	; 0x02
     9c4:	7b 83       	std	Y+3, r23	; 0x03
     9c6:	8c 83       	std	Y+4, r24	; 0x04
     9c8:	9d 83       	std	Y+5, r25	; 0x05
     9ca:	71 01       	movw	r14, r2
     9cc:	ee 0c       	add	r14, r14
     9ce:	ff 1c       	adc	r15, r15
     9d0:	c7 01       	movw	r24, r14
     9d2:	8a 5b       	subi	r24, 0xBA	; 186
     9d4:	9e 4f       	sbci	r25, 0xFE	; 254
     9d6:	2c 01       	movw	r4, r24
     9d8:	fc 01       	movw	r30, r24
     9da:	80 81       	ld	r24, Z
     9dc:	91 81       	ldd	r25, Z+1	; 0x01
     9de:	b5 01       	movw	r22, r10
     9e0:	68 1b       	sub	r22, r24
     9e2:	79 0b       	sbc	r23, r25
     9e4:	07 2e       	mov	r0, r23
     9e6:	00 0c       	add	r0, r0
     9e8:	88 0b       	sbc	r24, r24
     9ea:	99 0b       	sbc	r25, r25
     9ec:	1b d4       	rcall	.+2102   	; 0x1224 <__floatsisf>
     9ee:	2e 81       	ldd	r18, Y+6	; 0x06
     9f0:	3f 81       	ldd	r19, Y+7	; 0x07
     9f2:	48 85       	ldd	r20, Y+8	; 0x08
     9f4:	59 85       	ldd	r21, Y+9	; 0x09
     9f6:	a2 d4       	rcall	.+2372   	; 0x133c <__mulsf3>
     9f8:	9b 01       	movw	r18, r22
     9fa:	ac 01       	movw	r20, r24
     9fc:	6a 81       	ldd	r22, Y+2	; 0x02
     9fe:	7b 81       	ldd	r23, Y+3	; 0x03
     a00:	8c 81       	ldd	r24, Y+4	; 0x04
     a02:	9d 81       	ldd	r25, Y+5	; 0x05
     a04:	10 d3       	rcall	.+1568   	; 0x1026 <__addsf3>
     a06:	20 e0       	ldi	r18, 0x00	; 0
     a08:	30 e0       	ldi	r19, 0x00	; 0
     a0a:	40 e2       	ldi	r20, 0x20	; 32
     a0c:	51 e4       	ldi	r21, 0x41	; 65
     a0e:	6f d3       	rcall	.+1758   	; 0x10ee <__divsf3>
     a10:	d6 d3       	rcall	.+1964   	; 0x11be <__fixsfsi>
     a12:	70 93 73 01 	sts	0x0173, r23
     a16:	60 93 72 01 	sts	0x0172, r22
     a1a:	f2 01       	movw	r30, r4
     a1c:	b1 82       	std	Z+1, r11	; 0x01
     a1e:	a0 82       	st	Z, r10
     a20:	08 19       	sub	r16, r8
     a22:	19 09       	sbc	r17, r9
     a24:	10 93 67 01 	sts	0x0167, r17
     a28:	00 93 66 01 	sts	0x0166, r16
     a2c:	c7 01       	movw	r24, r14
     a2e:	86 59       	subi	r24, 0x96	; 150
     a30:	9e 4f       	sbci	r25, 0xFE	; 254
     a32:	7c 01       	movw	r14, r24
     a34:	fc 01       	movw	r30, r24
     a36:	80 81       	ld	r24, Z
     a38:	91 81       	ldd	r25, Z+1	; 0x01
     a3a:	b8 01       	movw	r22, r16
     a3c:	68 1b       	sub	r22, r24
     a3e:	79 0b       	sbc	r23, r25
     a40:	07 2e       	mov	r0, r23
     a42:	00 0c       	add	r0, r0
     a44:	88 0b       	sbc	r24, r24
     a46:	99 0b       	sbc	r25, r25
     a48:	ed d3       	rcall	.+2010   	; 0x1224 <__floatsisf>
     a4a:	4b 01       	movw	r8, r22
     a4c:	5c 01       	movw	r10, r24
     a4e:	60 93 29 01 	sts	0x0129, r22
     a52:	70 93 2a 01 	sts	0x012A, r23
     a56:	80 93 2b 01 	sts	0x012B, r24
     a5a:	90 93 2c 01 	sts	0x012C, r25
     a5e:	c0 9e       	mul	r12, r16
     a60:	b0 01       	movw	r22, r0
     a62:	c1 9e       	mul	r12, r17
     a64:	70 0d       	add	r23, r0
     a66:	d0 9e       	mul	r13, r16
     a68:	70 0d       	add	r23, r0
     a6a:	11 24       	eor	r1, r1
     a6c:	07 2e       	mov	r0, r23
     a6e:	00 0c       	add	r0, r0
     a70:	88 0b       	sbc	r24, r24
     a72:	99 0b       	sbc	r25, r25
     a74:	d7 d3       	rcall	.+1966   	; 0x1224 <__floatsisf>
     a76:	6a 83       	std	Y+2, r22	; 0x02
     a78:	7b 83       	std	Y+3, r23	; 0x03
     a7a:	8c 83       	std	Y+4, r24	; 0x04
     a7c:	9d 83       	std	Y+5, r25	; 0x05
     a7e:	a5 01       	movw	r20, r10
     a80:	94 01       	movw	r18, r8
     a82:	6e 81       	ldd	r22, Y+6	; 0x06
     a84:	7f 81       	ldd	r23, Y+7	; 0x07
     a86:	88 85       	ldd	r24, Y+8	; 0x08
     a88:	99 85       	ldd	r25, Y+9	; 0x09
     a8a:	58 d4       	rcall	.+2224   	; 0x133c <__mulsf3>
     a8c:	9b 01       	movw	r18, r22
     a8e:	ac 01       	movw	r20, r24
     a90:	6a 81       	ldd	r22, Y+2	; 0x02
     a92:	7b 81       	ldd	r23, Y+3	; 0x03
     a94:	8c 81       	ldd	r24, Y+4	; 0x04
     a96:	9d 81       	ldd	r25, Y+5	; 0x05
     a98:	c6 d2       	rcall	.+1420   	; 0x1026 <__addsf3>
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	40 e2       	ldi	r20, 0x20	; 32
     aa0:	51 e4       	ldi	r21, 0x41	; 65
     aa2:	25 d3       	rcall	.+1610   	; 0x10ee <__divsf3>
     aa4:	8c d3       	rcall	.+1816   	; 0x11be <__fixsfsi>
     aa6:	70 93 5e 01 	sts	0x015E, r23
     aaa:	60 93 5d 01 	sts	0x015D, r22
     aae:	f7 01       	movw	r30, r14
     ab0:	11 83       	std	Z+1, r17	; 0x01
     ab2:	00 83       	st	Z, r16
     ab4:	f4 e0       	ldi	r31, 0x04	; 4
     ab6:	2f 16       	cp	r2, r31
     ab8:	31 04       	cpc	r3, r1
     aba:	21 f4       	brne	.+8      	; 0xac4 <PD_for_lab+0x18a>
     abc:	9b b1       	in	r25, 0x0b	; 11
     abe:	82 e0       	ldi	r24, 0x02	; 2
     ac0:	89 27       	eor	r24, r25
     ac2:	8b b9       	out	0x0b, r24	; 11
     ac4:	80 91 27 01 	lds	r24, 0x0127
     ac8:	90 91 28 01 	lds	r25, 0x0128
     acc:	01 96       	adiw	r24, 0x01	; 1
     ace:	90 93 28 01 	sts	0x0128, r25
     ad2:	80 93 27 01 	sts	0x0127, r24
     ad6:	20 91 04 01 	lds	r18, 0x0104
     ada:	30 91 05 01 	lds	r19, 0x0105
     ade:	82 17       	cp	r24, r18
     ae0:	93 07       	cpc	r25, r19
     ae2:	24 f0       	brlt	.+8      	; 0xaec <PD_for_lab+0x1b2>
     ae4:	10 92 28 01 	sts	0x0128, r1
     ae8:	10 92 27 01 	sts	0x0127, r1
     aec:	80 91 5d 01 	lds	r24, 0x015D
     af0:	90 91 5e 01 	lds	r25, 0x015E
     af4:	99 23       	and	r25, r25
     af6:	2c f0       	brlt	.+10     	; 0xb02 <PD_for_lab+0x1c8>
     af8:	10 92 5e 01 	sts	0x015E, r1
     afc:	10 92 5d 01 	sts	0x015D, r1
     b00:	11 c0       	rjmp	.+34     	; 0xb24 <PD_for_lab+0x1ea>
     b02:	27 b5       	in	r18, 0x27	; 39
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	31 95       	neg	r19
     b08:	21 95       	neg	r18
     b0a:	31 09       	sbc	r19, r1
     b0c:	28 17       	cp	r18, r24
     b0e:	39 07       	cpc	r19, r25
     b10:	4c f0       	brlt	.+18     	; 0xb24 <PD_for_lab+0x1ea>
     b12:	87 b5       	in	r24, 0x27	; 39
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	91 95       	neg	r25
     b18:	81 95       	neg	r24
     b1a:	91 09       	sbc	r25, r1
     b1c:	90 93 5e 01 	sts	0x015E, r25
     b20:	80 93 5d 01 	sts	0x015D, r24
     b24:	80 91 72 01 	lds	r24, 0x0172
     b28:	90 91 73 01 	lds	r25, 0x0173
     b2c:	99 23       	and	r25, r25
     b2e:	2c f0       	brlt	.+10     	; 0xb3a <PD_for_lab+0x200>
     b30:	10 92 73 01 	sts	0x0173, r1
     b34:	10 92 72 01 	sts	0x0172, r1
     b38:	11 c0       	rjmp	.+34     	; 0xb5c <PD_for_lab+0x222>
     b3a:	28 b5       	in	r18, 0x28	; 40
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	31 95       	neg	r19
     b40:	21 95       	neg	r18
     b42:	31 09       	sbc	r19, r1
     b44:	28 17       	cp	r18, r24
     b46:	39 07       	cpc	r19, r25
     b48:	4c f0       	brlt	.+18     	; 0xb5c <PD_for_lab+0x222>
     b4a:	88 b5       	in	r24, 0x28	; 40
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	91 95       	neg	r25
     b50:	81 95       	neg	r24
     b52:	91 09       	sbc	r25, r1
     b54:	90 93 73 01 	sts	0x0173, r25
     b58:	80 93 72 01 	sts	0x0172, r24
     b5c:	20 e2       	ldi	r18, 0x20	; 32
     b5e:	62 16       	cp	r6, r18
     b60:	71 04       	cpc	r7, r1
     b62:	9c f4       	brge	.+38     	; 0xb8a <PD_for_lab+0x250>
     b64:	17 bc       	out	0x27, r1	; 39
     b66:	18 bc       	out	0x28, r1	; 40
     b68:	87 e0       	ldi	r24, 0x07	; 7
     b6a:	89 83       	std	Y+1, r24	; 0x01
     b6c:	be 01       	movw	r22, r28
     b6e:	6f 5f       	subi	r22, 0xFF	; 255
     b70:	7f 4f       	sbci	r23, 0xFF	; 255
     b72:	86 e0       	ldi	r24, 0x06	; 6
     b74:	74 de       	rcall	.-792    	; 0x85e <i2c_send>
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	80 93 31 01 	sts	0x0131, r24
     b7c:	87 ea       	ldi	r24, 0xA7	; 167
     b7e:	91 e6       	ldi	r25, 0x61	; 97
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	f1 f7       	brne	.-4      	; 0xb80 <PD_for_lab+0x246>
     b84:	00 c0       	rjmp	.+0      	; 0xb86 <PD_for_lab+0x24c>
     b86:	00 00       	nop
     b88:	2b c0       	rjmp	.+86     	; 0xbe0 <PD_for_lab+0x2a6>
     b8a:	e0 91 27 01 	lds	r30, 0x0127
     b8e:	f0 91 28 01 	lds	r31, 0x0128
     b92:	ee 0f       	add	r30, r30
     b94:	ff 1f       	adc	r31, r31
     b96:	e6 59       	subi	r30, 0x96	; 150
     b98:	fe 4f       	sbci	r31, 0xFE	; 254
     b9a:	80 81       	ld	r24, Z
     b9c:	91 81       	ldd	r25, Z+1	; 0x01
     b9e:	87 3f       	cpi	r24, 0xF7	; 247
     ba0:	9f 4f       	sbci	r25, 0xFF	; 255
     ba2:	94 f4       	brge	.+36     	; 0xbc8 <PD_for_lab+0x28e>
     ba4:	88 b5       	in	r24, 0x28	; 40
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	91 95       	neg	r25
     baa:	81 95       	neg	r24
     bac:	91 09       	sbc	r25, r1
     bae:	90 93 73 01 	sts	0x0173, r25
     bb2:	80 93 72 01 	sts	0x0172, r24
     bb6:	87 b5       	in	r24, 0x27	; 39
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	91 95       	neg	r25
     bbc:	81 95       	neg	r24
     bbe:	91 09       	sbc	r25, r1
     bc0:	90 93 5e 01 	sts	0x015E, r25
     bc4:	80 93 5d 01 	sts	0x015D, r24
     bc8:	90 91 5d 01 	lds	r25, 0x015D
     bcc:	80 91 3d 01 	lds	r24, 0x013D
     bd0:	89 0f       	add	r24, r25
     bd2:	87 bd       	out	0x27, r24	; 39
     bd4:	90 91 72 01 	lds	r25, 0x0172
     bd8:	80 91 3b 01 	lds	r24, 0x013B
     bdc:	89 0f       	add	r24, r25
     bde:	88 bd       	out	0x28, r24	; 40
     be0:	29 96       	adiw	r28, 0x09	; 9
     be2:	0f b6       	in	r0, 0x3f	; 63
     be4:	f8 94       	cli
     be6:	de bf       	out	0x3e, r29	; 62
     be8:	0f be       	out	0x3f, r0	; 63
     bea:	cd bf       	out	0x3d, r28	; 61
     bec:	df 91       	pop	r29
     bee:	cf 91       	pop	r28
     bf0:	1f 91       	pop	r17
     bf2:	0f 91       	pop	r16
     bf4:	ff 90       	pop	r15
     bf6:	ef 90       	pop	r14
     bf8:	df 90       	pop	r13
     bfa:	cf 90       	pop	r12
     bfc:	bf 90       	pop	r11
     bfe:	af 90       	pop	r10
     c00:	9f 90       	pop	r9
     c02:	8f 90       	pop	r8
     c04:	7f 90       	pop	r7
     c06:	6f 90       	pop	r6
     c08:	5f 90       	pop	r5
     c0a:	4f 90       	pop	r4
     c0c:	3f 90       	pop	r3
     c0e:	2f 90       	pop	r2
     c10:	08 95       	ret

00000c12 <labyreg>:
     c12:	f8 94       	cli
     c14:	40 91 61 01 	lds	r20, 0x0161
     c18:	50 e0       	ldi	r21, 0x00	; 0
     c1a:	60 91 69 01 	lds	r22, 0x0169
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	80 91 64 01 	lds	r24, 0x0164
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	78 94       	sei
     c28:	88 ce       	rjmp	.-752    	; 0x93a <PD_for_lab>
     c2a:	08 95       	ret

00000c2c <regulator>:
     c2c:	80 91 31 01 	lds	r24, 0x0131
     c30:	88 23       	and	r24, r24
     c32:	39 f0       	breq	.+14     	; 0xc42 <regulator+0x16>
     c34:	86 e4       	ldi	r24, 0x46	; 70
     c36:	87 bd       	out	0x27, r24	; 39
     c38:	8c e3       	ldi	r24, 0x3C	; 60
     c3a:	88 bd       	out	0x28, r24	; 40
     c3c:	2d 98       	cbi	0x05, 5	; 5
     c3e:	2e 9a       	sbi	0x05, 6	; 5
     c40:	08 95       	ret
     c42:	80 91 33 01 	lds	r24, 0x0133
     c46:	90 91 34 01 	lds	r25, 0x0134
     c4a:	01 97       	sbiw	r24, 0x01	; 1
     c4c:	11 f4       	brne	.+4      	; 0xc52 <regulator+0x26>
     c4e:	14 cd       	rjmp	.-1496   	; 0x678 <linje_main>
     c50:	08 95       	ret
     c52:	2d 98       	cbi	0x05, 5	; 5
     c54:	2e 98       	cbi	0x05, 6	; 5
     c56:	80 91 32 01 	lds	r24, 0x0132
     c5a:	88 23       	and	r24, r24
     c5c:	19 f0       	breq	.+6      	; 0xc64 <regulator+0x38>
     c5e:	10 92 32 01 	sts	0x0132, r1
     c62:	d7 cf       	rjmp	.-82     	; 0xc12 <labyreg>
     c64:	08 95       	ret

00000c66 <i2c_recive>:
	byte* data;
	int counter=0;
	int start =TW_START;
	//int size = 0;

	TWCR |= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//START
     c66:	ec eb       	ldi	r30, 0xBC	; 188
     c68:	f0 e0       	ldi	r31, 0x00	; 0
     c6a:	90 81       	ld	r25, Z
     c6c:	94 6a       	ori	r25, 0xA4	; 164
     c6e:	90 83       	st	Z, r25
	while(!(TWCR & (1<<TWINT))); //Wait for TWINT, START is now sent
     c70:	90 81       	ld	r25, Z
     c72:	99 23       	and	r25, r25
     c74:	ec f7       	brge	.-6      	; 0xc70 <i2c_recive+0xa>
	if((TWSR & 0xF8) != start) // om status en start eventuellt bara tw_start
     c76:	90 91 b9 00 	lds	r25, 0x00B9
     c7a:	98 7f       	andi	r25, 0xF8	; 248
     c7c:	98 30       	cpi	r25, 0x08	; 8
     c7e:	29 f0       	breq	.+10     	; 0xc8a <i2c_recive+0x24>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     c80:	84 e9       	ldi	r24, 0x94	; 148
     c82:	80 93 bc 00 	sts	0x00BC, r24
		return false;
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	08 95       	ret
	}
	TWDR = prossesor | 0x01;	//adress och Read 
     c8a:	81 60       	ori	r24, 0x01	; 1
     c8c:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT)|(1<<TWEN);
     c90:	84 e8       	ldi	r24, 0x84	; 132
     c92:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT))); // wait for SLA+R transmited and ACK/NACK recived
     c96:	ec eb       	ldi	r30, 0xBC	; 188
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	88 23       	and	r24, r24
     c9e:	ec f7       	brge	.-6      	; 0xc9a <i2c_recive+0x34>
	if((TWSR & 0xF8) != TW_MR_SLA_ACK) // om slav adress har skickats och ack har fåtts
     ca0:	80 91 b9 00 	lds	r24, 0x00B9
     ca4:	88 7f       	andi	r24, 0xF8	; 248
     ca6:	80 34       	cpi	r24, 0x40	; 64
     ca8:	29 f0       	breq	.+10     	; 0xcb4 <i2c_recive+0x4e>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     caa:	84 e9       	ldi	r24, 0x94	; 148
     cac:	80 93 bc 00 	sts	0x00BC, r24
		return false;
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	08 95       	ret
	}
	
	TWCR |= (1<<TWINT)|(1<<TWEN);
     cb4:	ec eb       	ldi	r30, 0xBC	; 188
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	80 81       	ld	r24, Z
     cba:	84 68       	ori	r24, 0x84	; 132
     cbc:	80 83       	st	Z, r24
	while(!(TWCR & (1<<TWINT)));
     cbe:	80 81       	ld	r24, Z
     cc0:	88 23       	and	r24, r24
     cc2:	ec f7       	brge	.-6      	; 0xcbe <i2c_recive+0x58>
	}*/
	/*if(counter == 0){
		data = data[(TWDR>>4) & 0x0f];
		size= (TWDR>>4) & 0x0f;
	}*/
	data=TWDR; //ta emot data 
     cc4:	80 91 bb 00 	lds	r24, 0x00BB
	counter++;	
	start=TW_REP_START;
	//TWCR = (1<<TWINT);
	//while(!(TWCR & (1<<TWINT)));
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     cc8:	94 e9       	ldi	r25, 0x94	; 148
     cca:	90 93 bc 00 	sts	0x00BC, r25
	return data;
}
     cce:	08 95       	ret

00000cd0 <i2c_store_data>:

void i2c_store_data(byte data) //bygger ihop data till en aray liknande den som blev skickad och sätter flaggan i2c_newdata då all data i ett paket motaget
{
	static int counter;
	static int size;
	if(counter == 0){ //om första databiten ta ut mängd data som kommer komma 
     cd0:	20 91 0e 01 	lds	r18, 0x010E
     cd4:	30 91 0f 01 	lds	r19, 0x010F
     cd8:	21 15       	cp	r18, r1
     cda:	31 05       	cpc	r19, r1
     cdc:	89 f4       	brne	.+34     	; 0xd00 <i2c_store_data+0x30>
		size = (data>>4) & 0x0f;
     cde:	28 2f       	mov	r18, r24
     ce0:	22 95       	swap	r18
     ce2:	2f 70       	andi	r18, 0x0F	; 15
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	30 93 0d 01 	sts	0x010D, r19
     cea:	20 93 0c 01 	sts	0x010C, r18
		i2c_data[counter] = data;
     cee:	80 93 4c 01 	sts	0x014C, r24
		counter++;
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	90 93 0f 01 	sts	0x010F, r25
     cfa:	80 93 0e 01 	sts	0x010E, r24
     cfe:	18 c0       	rjmp	.+48     	; 0xd30 <i2c_store_data+0x60>
	}
	else if(counter < size+1){ //fyll på arayen med data
     d00:	40 91 0c 01 	lds	r20, 0x010C
     d04:	50 91 0d 01 	lds	r21, 0x010D
     d08:	4f 5f       	subi	r20, 0xFF	; 255
     d0a:	5f 4f       	sbci	r21, 0xFF	; 255
     d0c:	24 17       	cp	r18, r20
     d0e:	35 07       	cpc	r19, r21
     d10:	5c f4       	brge	.+22     	; 0xd28 <i2c_store_data+0x58>
		i2c_data[counter] = data;
     d12:	f9 01       	movw	r30, r18
     d14:	e4 5b       	subi	r30, 0xB4	; 180
     d16:	fe 4f       	sbci	r31, 0xFE	; 254
     d18:	80 83       	st	Z, r24
		counter++;
     d1a:	2f 5f       	subi	r18, 0xFF	; 255
     d1c:	3f 4f       	sbci	r19, 0xFF	; 255
     d1e:	30 93 0f 01 	sts	0x010F, r19
     d22:	20 93 0e 01 	sts	0x010E, r18
     d26:	04 c0       	rjmp	.+8      	; 0xd30 <i2c_store_data+0x60>
	}
	else{
		i2c_data[counter] = data;
     d28:	f9 01       	movw	r30, r18
     d2a:	e4 5b       	subi	r30, 0xB4	; 180
     d2c:	fe 4f       	sbci	r31, 0xFE	; 254
     d2e:	80 83       	st	Z, r24
	}
	if(counter>=size+1){ // aray färdig all data motagen
     d30:	80 91 0c 01 	lds	r24, 0x010C
     d34:	90 91 0d 01 	lds	r25, 0x010D
     d38:	01 96       	adiw	r24, 0x01	; 1
     d3a:	20 91 0e 01 	lds	r18, 0x010E
     d3e:	30 91 0f 01 	lds	r19, 0x010F
     d42:	28 17       	cp	r18, r24
     d44:	39 07       	cpc	r19, r25
     d46:	44 f0       	brlt	.+16     	; 0xd58 <i2c_store_data+0x88>
		i2c_newdata = true;
     d48:	81 e0       	ldi	r24, 0x01	; 1
     d4a:	80 93 16 01 	sts	0x0116, r24
		counter = 0;
     d4e:	10 92 0f 01 	sts	0x010F, r1
     d52:	10 92 0e 01 	sts	0x010E, r1
		EIMSK &= ~(1<<INT0);
     d56:	e8 98       	cbi	0x1d, 0	; 29
     d58:	08 95       	ret

00000d5a <__vector_1>:
byte i2c_data[15];
bool i2c_newdata=false;
int Reflex_data;
//aidshub was here
ISR(INT0_vect)// händer om annan processor kör request to send
{	
     d5a:	1f 92       	push	r1
     d5c:	0f 92       	push	r0
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	0f 92       	push	r0
     d62:	11 24       	eor	r1, r1
     d64:	0b b6       	in	r0, 0x3b	; 59
     d66:	0f 92       	push	r0
     d68:	2f 93       	push	r18
     d6a:	3f 93       	push	r19
     d6c:	4f 93       	push	r20
     d6e:	5f 93       	push	r21
     d70:	6f 93       	push	r22
     d72:	7f 93       	push	r23
     d74:	8f 93       	push	r24
     d76:	9f 93       	push	r25
     d78:	af 93       	push	r26
     d7a:	bf 93       	push	r27
     d7c:	ef 93       	push	r30
     d7e:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d80:	00 00       	nop
	_delay_us(1);
	if (PINC&(1<< PC6)){	//komunikation vill skicka
     d82:	36 9b       	sbis	0x06, 6	; 6
     d84:	04 c0       	rjmp	.+8      	; 0xd8e <__vector_1+0x34>
		i2c_store_data(i2c_recive(0x02)); // adress processor 1
     d86:	82 e0       	ldi	r24, 0x02	; 2
     d88:	6e df       	rcall	.-292    	; 0xc66 <i2c_recive>
     d8a:	a2 df       	rcall	.-188    	; 0xcd0 <i2c_store_data>
     d8c:	05 c0       	rjmp	.+10     	; 0xd98 <__vector_1+0x3e>
		//PORTD ^=(1 << PD0);
	}
	else if(PINC&(1<< PC7)){ //sensor vill skicka  
     d8e:	37 9b       	sbis	0x06, 7	; 6
     d90:	03 c0       	rjmp	.+6      	; 0xd98 <__vector_1+0x3e>
		i2c_store_data(i2c_recive(0x06)); // adress processor 3
     d92:	86 e0       	ldi	r24, 0x06	; 6
     d94:	68 df       	rcall	.-304    	; 0xc66 <i2c_recive>
     d96:	9c df       	rcall	.-200    	; 0xcd0 <i2c_store_data>
	}
}
     d98:	ff 91       	pop	r31
     d9a:	ef 91       	pop	r30
     d9c:	bf 91       	pop	r27
     d9e:	af 91       	pop	r26
     da0:	9f 91       	pop	r25
     da2:	8f 91       	pop	r24
     da4:	7f 91       	pop	r23
     da6:	6f 91       	pop	r22
     da8:	5f 91       	pop	r21
     daa:	4f 91       	pop	r20
     dac:	3f 91       	pop	r19
     dae:	2f 91       	pop	r18
     db0:	0f 90       	pop	r0
     db2:	0b be       	out	0x3b, r0	; 59
     db4:	0f 90       	pop	r0
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	0f 90       	pop	r0
     dba:	1f 90       	pop	r1
     dbc:	18 95       	reti

00000dbe <i2c_handel_data>:
	}

}

void i2c_handel_data(void){ //hanterar den motagna datan och läger den på rätt plats och skickar vidare sensordata till komunikation
	if(i2c_newdata==true)
     dbe:	80 91 16 01 	lds	r24, 0x0116
     dc2:	88 23       	and	r24, r24
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <i2c_handel_data+0xa>
     dc6:	e9 c0       	rjmp	.+466    	; 0xf9a <i2c_handel_data+0x1dc>
	{
		i2c_newdata=false;
     dc8:	10 92 16 01 	sts	0x0116, r1
		if(!((i2c_data[0]>>3)&0x01)){
     dcc:	80 91 4c 01 	lds	r24, 0x014C
     dd0:	83 fd       	sbrc	r24, 3
     dd2:	07 c0       	rjmp	.+14     	; 0xde2 <i2c_handel_data+0x24>
     dd4:	84 e6       	ldi	r24, 0x64	; 100
     dd6:	8a 95       	dec	r24
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <i2c_handel_data+0x18>
			_delay_us(300);
			i2c_send(0x02,i2c_data);// send to komunikation
     dda:	6c e4       	ldi	r22, 0x4C	; 76
     ddc:	71 e0       	ldi	r23, 0x01	; 1
     dde:	82 e0       	ldi	r24, 0x02	; 2
     de0:	3e dd       	rcall	.-1412   	; 0x85e <i2c_send>
		}
		switch (i2c_data[0] & 0x0f){
     de2:	80 91 4c 01 	lds	r24, 0x014C
     de6:	e8 2f       	mov	r30, r24
     de8:	ef 70       	andi	r30, 0x0F	; 15
     dea:	8e 2f       	mov	r24, r30
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	fc 01       	movw	r30, r24
     df0:	ea 5b       	subi	r30, 0xBA	; 186
     df2:	ff 4f       	sbci	r31, 0xFF	; 255
     df4:	19 c3       	rjmp	.+1586   	; 0x1428 <__tablejump2__>
			case 0x00 ://batteri nivå
				batteri=i2c_data[1],i2c_data[2];
     df6:	80 91 4d 01 	lds	r24, 0x014D
     dfa:	80 93 65 01 	sts	0x0165, r24
				break;
     dfe:	cc c0       	rjmp	.+408    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x01 ://avståndssensorer
				distans_right = i2c_data[3];
     e00:	ec e4       	ldi	r30, 0x4C	; 76
     e02:	f1 e0       	ldi	r31, 0x01	; 1
     e04:	83 81       	ldd	r24, Z+3	; 0x03
     e06:	80 93 69 01 	sts	0x0169, r24
				distans_fram = i2c_data[2];;
     e0a:	82 81       	ldd	r24, Z+2	; 0x02
     e0c:	80 93 61 01 	sts	0x0161, r24
				distans_left = i2c_data[1];
     e10:	81 81       	ldd	r24, Z+1	; 0x01
     e12:	80 93 64 01 	sts	0x0164, r24
				updaterad_labyrint = true;
     e16:	81 e0       	ldi	r24, 0x01	; 1
     e18:	80 93 32 01 	sts	0x0132, r24
				break;
     e1c:	bd c0       	rjmp	.+378    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x02 :// refelxsensor data
				Reflex_data = (i2c_data[2]<<8) + i2c_data[1];
     e1e:	ec e4       	ldi	r30, 0x4C	; 76
     e20:	f1 e0       	ldi	r31, 0x01	; 1
     e22:	82 81       	ldd	r24, Z+2	; 0x02
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	98 2f       	mov	r25, r24
     e28:	88 27       	eor	r24, r24
     e2a:	21 81       	ldd	r18, Z+1	; 0x01
     e2c:	82 0f       	add	r24, r18
     e2e:	91 1d       	adc	r25, r1
     e30:	90 93 5c 01 	sts	0x015C, r25
     e34:	80 93 5b 01 	sts	0x015B, r24
				Reflex_data2 = i2c_data[3];// går inte att få in mer än 16 bitar i en int...
     e38:	83 81       	ldd	r24, Z+3	; 0x03
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	90 93 71 01 	sts	0x0171, r25
     e40:	80 93 70 01 	sts	0x0170, r24
				break;
     e44:	a9 c0       	rjmp	.+338    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x03 :
				RGB_data=1;//"röd";"
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	80 93 68 01 	sts	0x0168, r24
				break;
     e4c:	a5 c0       	rjmp	.+330    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x04 :
				RGB_data=2;//"grön";
     e4e:	82 e0       	ldi	r24, 0x02	; 2
     e50:	80 93 68 01 	sts	0x0168, r24
				break;		
     e54:	a1 c0       	rjmp	.+322    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x05 :
				RGB_data=3;//"blå";
     e56:	83 e0       	ldi	r24, 0x03	; 3
     e58:	80 93 68 01 	sts	0x0168, r24
				break;
     e5c:	9d c0       	rjmp	.+314    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x06 : // gyro klart
				gyro_90 = true;
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	80 93 45 01 	sts	0x0145, r24
				turning = false;
     e64:	10 92 31 01 	sts	0x0131, r1
				start = 0;
     e68:	10 92 40 01 	sts	0x0140, r1
     e6c:	10 92 3f 01 	sts	0x013F, r1
				break;
     e70:	93 c0       	rjmp	.+294    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x07 :// gyro data
				// Kod vi skickar till sensor
				break;
			case 0x08 : // manuel stå still
				manual_function=0;
     e72:	10 92 2e 01 	sts	0x012E, r1
     e76:	10 92 2d 01 	sts	0x012D, r1
				break;
     e7a:	8e c0       	rjmp	.+284    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x09 : //manuel kar rakt fram
				manual_function=1;			
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	90 93 2e 01 	sts	0x012E, r25
     e84:	80 93 2d 01 	sts	0x012D, r24
				break;
     e88:	87 c0       	rjmp	.+270    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x0a : //manuel kör bakåt
				manual_function=2;				
     e8a:	82 e0       	ldi	r24, 0x02	; 2
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	90 93 2e 01 	sts	0x012E, r25
     e92:	80 93 2d 01 	sts	0x012D, r24
				break;
     e96:	80 c0       	rjmp	.+256    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x0b ://manuel vänster fram
				manual_function=4;
     e98:	84 e0       	ldi	r24, 0x04	; 4
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	90 93 2e 01 	sts	0x012E, r25
     ea0:	80 93 2d 01 	sts	0x012D, r24
				break;
     ea4:	79 c0       	rjmp	.+242    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x0c ://manuel höger fram
				manual_function=3;
     ea6:	83 e0       	ldi	r24, 0x03	; 3
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	90 93 2e 01 	sts	0x012E, r25
     eae:	80 93 2d 01 	sts	0x012D, r24
				break;
     eb2:	72 c0       	rjmp	.+228    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x0d :// spin på stället åt vänster
				manual_function=6;
     eb4:	86 e0       	ldi	r24, 0x06	; 6
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	90 93 2e 01 	sts	0x012E, r25
     ebc:	80 93 2d 01 	sts	0x012D, r24
				break;
     ec0:	6b c0       	rjmp	.+214    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x0e :// spin på stället åt höger
				manual_function=5;
     ec2:	85 e0       	ldi	r24, 0x05	; 5
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	90 93 2e 01 	sts	0x012E, r25
     eca:	80 93 2d 01 	sts	0x012D, r24
				break;
     ece:	64 c0       	rjmp	.+200    	; 0xf98 <i2c_handel_data+0x1da>
			case 0x0f :	// GUI skickar en extra byte där vi behandlar knapparna "man/auto" samt "start" (av/på) (används för extrafunktioner i almenhet som inte får plats i vanliga data tabellen)
				if(i2c_data[1]==0xf0){
     ed0:	80 91 4d 01 	lds	r24, 0x014D
     ed4:	80 3f       	cpi	r24, 0xF0	; 240
     ed6:	91 f4       	brne	.+36     	; 0xefc <i2c_handel_data+0x13e>
					if(start==1){
     ed8:	80 91 3f 01 	lds	r24, 0x013F
     edc:	90 91 40 01 	lds	r25, 0x0140
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	29 f4       	brne	.+10     	; 0xeee <i2c_handel_data+0x130>
						start=0;
     ee4:	10 92 40 01 	sts	0x0140, r1
     ee8:	10 92 3f 01 	sts	0x013F, r1
     eec:	55 c0       	rjmp	.+170    	; 0xf98 <i2c_handel_data+0x1da>
					}
					else{
						start=1;
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	90 93 40 01 	sts	0x0140, r25
     ef6:	80 93 3f 01 	sts	0x013F, r24
     efa:	4e c0       	rjmp	.+156    	; 0xf98 <i2c_handel_data+0x1da>
					}
				}
				else if(i2c_data[1]==0x0f){
     efc:	8f 30       	cpi	r24, 0x0F	; 15
     efe:	d1 f4       	brne	.+52     	; 0xf34 <i2c_handel_data+0x176>
					if(drive_mode==1){
     f00:	80 91 41 01 	lds	r24, 0x0141
     f04:	90 91 42 01 	lds	r25, 0x0142
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	49 f4       	brne	.+18     	; 0xf1e <i2c_handel_data+0x160>
						drive_mode=0;
     f0c:	10 92 42 01 	sts	0x0142, r1
     f10:	10 92 41 01 	sts	0x0141, r1
						start=0;
     f14:	10 92 40 01 	sts	0x0140, r1
     f18:	10 92 3f 01 	sts	0x013F, r1
     f1c:	3d c0       	rjmp	.+122    	; 0xf98 <i2c_handel_data+0x1da>
					}
					else{
						drive_mode=1;
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	90 93 42 01 	sts	0x0142, r25
     f26:	80 93 41 01 	sts	0x0141, r24
						start=0;
     f2a:	10 92 40 01 	sts	0x0140, r1
     f2e:	10 92 3f 01 	sts	0x013F, r1
     f32:	32 c0       	rjmp	.+100    	; 0xf98 <i2c_handel_data+0x1da>
					}
				}
				else if(i2c_data[1]==0x00){			// Ändra P och D konstant för linje
     f34:	81 11       	cpse	r24, r1
     f36:	0f c0       	rjmp	.+30     	; 0xf56 <i2c_handel_data+0x198>
					d_constant = i2c_data[2];
     f38:	ec e4       	ldi	r30, 0x4C	; 76
     f3a:	f1 e0       	ldi	r31, 0x01	; 1
     f3c:	82 81       	ldd	r24, Z+2	; 0x02
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	90 93 01 01 	sts	0x0101, r25
     f44:	80 93 00 01 	sts	0x0100, r24
					p_constant = i2c_data[3];
     f48:	83 81       	ldd	r24, Z+3	; 0x03
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	90 93 03 01 	sts	0x0103, r25
     f50:	80 93 02 01 	sts	0x0102, r24
     f54:	21 c0       	rjmp	.+66     	; 0xf98 <i2c_handel_data+0x1da>
				}
				else if(i2c_data[1]==0x01){			// Ändra P och D konstant för labyrint
     f56:	81 30       	cpi	r24, 0x01	; 1
     f58:	79 f4       	brne	.+30     	; 0xf78 <i2c_handel_data+0x1ba>
					d_constant_lab = i2c_data[2];
     f5a:	ec e4       	ldi	r30, 0x4C	; 76
     f5c:	f1 e0       	ldi	r31, 0x01	; 1
     f5e:	82 81       	ldd	r24, Z+2	; 0x02
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	90 93 09 01 	sts	0x0109, r25
     f66:	80 93 08 01 	sts	0x0108, r24
					p_constant_lab = i2c_data[3];
     f6a:	83 81       	ldd	r24, Z+3	; 0x03
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	90 93 0b 01 	sts	0x010B, r25
     f72:	80 93 0a 01 	sts	0x010A, r24
     f76:	10 c0       	rjmp	.+32     	; 0xf98 <i2c_handel_data+0x1da>
				}
				else if(i2c_data[1]==0x02){
     f78:	82 30       	cpi	r24, 0x02	; 2
     f7a:	71 f4       	brne	.+28     	; 0xf98 <i2c_handel_data+0x1da>
					left = i2c_data[2];
     f7c:	ec e4       	ldi	r30, 0x4C	; 76
     f7e:	f1 e0       	ldi	r31, 0x01	; 1
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	90 93 3e 01 	sts	0x013E, r25
     f88:	80 93 3d 01 	sts	0x013D, r24
					right = i2c_data[3];
     f8c:	83 81       	ldd	r24, Z+3	; 0x03
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	90 93 3c 01 	sts	0x013C, r25
     f94:	80 93 3b 01 	sts	0x013B, r24
				
				break;		
			default :
				break;
		}
		EIMSK |= (1<<INT0);
     f98:	e8 9a       	sbi	0x1d, 0	; 29
     f9a:	08 95       	ret

00000f9c <main>:
#include "i2c_master.c"


int main(void)
{
	interrupt_init();
     f9c:	ff db       	rcall	.-2050   	; 0x79c <interrupt_init>
	board_init();
     f9e:	a5 d8       	rcall	.-3766   	; 0xea <board_init>
	initengine();
     fa0:	ac db       	rcall	.-2216   	; 0x6fa <initengine>
	timerinit();
     fa2:	b8 db       	rcall	.-2192   	; 0x714 <timerinit>
	i2c_setup(1);
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	4b dc       	rcall	.-1898   	; 0x83e <i2c_setup>
	sei();
     fa8:	78 94       	sei
	//***********Set motors speed value here *****************
	left=130;				// kanske räcker med en variable för båda om båda kör exakt lika fort
     faa:	82 e8       	ldi	r24, 0x82	; 130
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	90 93 3e 01 	sts	0x013E, r25
     fb2:	80 93 3d 01 	sts	0x013D, r24
	right=120;
     fb6:	88 e7       	ldi	r24, 0x78	; 120
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	90 93 3c 01 	sts	0x013C, r25
     fbe:	80 93 3b 01 	sts	0x013B, r24
	//********************************************************
	motor_left=left;
     fc2:	82 e8       	ldi	r24, 0x82	; 130
     fc4:	87 bd       	out	0x27, r24	; 39
	motor_right=right;
     fc6:	80 91 3b 01 	lds	r24, 0x013B
     fca:	88 bd       	out	0x28, r24	; 40
	while(1){
		i2c_handel_data();  //test av fregulito
		RGB_data=3;	
     fcc:	c3 e0       	ldi	r28, 0x03	; 3
		if(drive_mode == 1){						// Drivemode is auto    // (drive_mode == 1 && start == 1)
			//current_position = arre[count_arre];	// används för att simulera linjeföljning, arrayen ändras i globala
			if(regler_ready == 1 && start == 1){
				regulator();
				regler_ready = 1;	
     fce:	01 e0       	ldi	r16, 0x01	; 1
     fd0:	10 e0       	ldi	r17, 0x00	; 0
	right=120;
	//********************************************************
	motor_left=left;
	motor_right=right;
	while(1){
		i2c_handel_data();  //test av fregulito
     fd2:	f5 de       	rcall	.-534    	; 0xdbe <i2c_handel_data>
		RGB_data=3;	
     fd4:	c0 93 68 01 	sts	0x0168, r28
		if(drive_mode == 1){						// Drivemode is auto    // (drive_mode == 1 && start == 1)
     fd8:	80 91 41 01 	lds	r24, 0x0141
     fdc:	90 91 42 01 	lds	r25, 0x0142
     fe0:	81 30       	cpi	r24, 0x01	; 1
     fe2:	91 05       	cpc	r25, r1
     fe4:	d9 f4       	brne	.+54     	; 0x101c <main+0x80>
			//current_position = arre[count_arre];	// används för att simulera linjeföljning, arrayen ändras i globala
			if(regler_ready == 1 && start == 1){
     fe6:	80 91 39 01 	lds	r24, 0x0139
     fea:	90 91 3a 01 	lds	r25, 0x013A
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	61 f4       	brne	.+24     	; 0x100a <main+0x6e>
     ff2:	80 91 3f 01 	lds	r24, 0x013F
     ff6:	90 91 40 01 	lds	r25, 0x0140
     ffa:	01 97       	sbiw	r24, 0x01	; 1
     ffc:	31 f4       	brne	.+12     	; 0x100a <main+0x6e>
				regulator();
     ffe:	16 de       	rcall	.-980    	; 0xc2c <regulator>
				regler_ready = 1;	
    1000:	10 93 3a 01 	sts	0x013A, r17
    1004:	00 93 39 01 	sts	0x0139, r16
    1008:	e4 cf       	rjmp	.-56     	; 0xfd2 <main+0x36>
			}
			else if(start == 0){					// if start is zero then turn off the auto, stops motors
    100a:	80 91 3f 01 	lds	r24, 0x013F
    100e:	90 91 40 01 	lds	r25, 0x0140
    1012:	89 2b       	or	r24, r25
    1014:	f1 f6       	brne	.-68     	; 0xfd2 <main+0x36>
				motor_left=0;
    1016:	17 bc       	out	0x27, r1	; 39
				motor_right=0;
    1018:	18 bc       	out	0x28, r1	; 40
    101a:	db cf       	rjmp	.-74     	; 0xfd2 <main+0x36>
				}
			}
		else if(drive_mode==0){										// Drivemode is manual
    101c:	89 2b       	or	r24, r25
    101e:	c9 f6       	brne	.-78     	; 0xfd2 <main+0x36>
			manual_drive();
    1020:	cd d9       	rcall	.-3174   	; 0x3bc <manual_drive>
    1022:	d7 cf       	rjmp	.-82     	; 0xfd2 <main+0x36>

00001024 <__subsf3>:
    1024:	50 58       	subi	r21, 0x80	; 128

00001026 <__addsf3>:
    1026:	bb 27       	eor	r27, r27
    1028:	aa 27       	eor	r26, r26
    102a:	0e d0       	rcall	.+28     	; 0x1048 <__addsf3x>
    102c:	4d c1       	rjmp	.+666    	; 0x12c8 <__fp_round>
    102e:	3e d1       	rcall	.+636    	; 0x12ac <__fp_pscA>
    1030:	30 f0       	brcs	.+12     	; 0x103e <__addsf3+0x18>
    1032:	43 d1       	rcall	.+646    	; 0x12ba <__fp_pscB>
    1034:	20 f0       	brcs	.+8      	; 0x103e <__addsf3+0x18>
    1036:	31 f4       	brne	.+12     	; 0x1044 <__addsf3+0x1e>
    1038:	9f 3f       	cpi	r25, 0xFF	; 255
    103a:	11 f4       	brne	.+4      	; 0x1040 <__addsf3+0x1a>
    103c:	1e f4       	brtc	.+6      	; 0x1044 <__addsf3+0x1e>
    103e:	33 c1       	rjmp	.+614    	; 0x12a6 <__fp_nan>
    1040:	0e f4       	brtc	.+2      	; 0x1044 <__addsf3+0x1e>
    1042:	e0 95       	com	r30
    1044:	e7 fb       	bst	r30, 7
    1046:	29 c1       	rjmp	.+594    	; 0x129a <__fp_inf>

00001048 <__addsf3x>:
    1048:	e9 2f       	mov	r30, r25
    104a:	4f d1       	rcall	.+670    	; 0x12ea <__fp_split3>
    104c:	80 f3       	brcs	.-32     	; 0x102e <__addsf3+0x8>
    104e:	ba 17       	cp	r27, r26
    1050:	62 07       	cpc	r22, r18
    1052:	73 07       	cpc	r23, r19
    1054:	84 07       	cpc	r24, r20
    1056:	95 07       	cpc	r25, r21
    1058:	18 f0       	brcs	.+6      	; 0x1060 <__addsf3x+0x18>
    105a:	71 f4       	brne	.+28     	; 0x1078 <__addsf3x+0x30>
    105c:	9e f5       	brtc	.+102    	; 0x10c4 <__addsf3x+0x7c>
    105e:	67 c1       	rjmp	.+718    	; 0x132e <__fp_zero>
    1060:	0e f4       	brtc	.+2      	; 0x1064 <__addsf3x+0x1c>
    1062:	e0 95       	com	r30
    1064:	0b 2e       	mov	r0, r27
    1066:	ba 2f       	mov	r27, r26
    1068:	a0 2d       	mov	r26, r0
    106a:	0b 01       	movw	r0, r22
    106c:	b9 01       	movw	r22, r18
    106e:	90 01       	movw	r18, r0
    1070:	0c 01       	movw	r0, r24
    1072:	ca 01       	movw	r24, r20
    1074:	a0 01       	movw	r20, r0
    1076:	11 24       	eor	r1, r1
    1078:	ff 27       	eor	r31, r31
    107a:	59 1b       	sub	r21, r25
    107c:	99 f0       	breq	.+38     	; 0x10a4 <__addsf3x+0x5c>
    107e:	59 3f       	cpi	r21, 0xF9	; 249
    1080:	50 f4       	brcc	.+20     	; 0x1096 <__addsf3x+0x4e>
    1082:	50 3e       	cpi	r21, 0xE0	; 224
    1084:	68 f1       	brcs	.+90     	; 0x10e0 <__addsf3x+0x98>
    1086:	1a 16       	cp	r1, r26
    1088:	f0 40       	sbci	r31, 0x00	; 0
    108a:	a2 2f       	mov	r26, r18
    108c:	23 2f       	mov	r18, r19
    108e:	34 2f       	mov	r19, r20
    1090:	44 27       	eor	r20, r20
    1092:	58 5f       	subi	r21, 0xF8	; 248
    1094:	f3 cf       	rjmp	.-26     	; 0x107c <__addsf3x+0x34>
    1096:	46 95       	lsr	r20
    1098:	37 95       	ror	r19
    109a:	27 95       	ror	r18
    109c:	a7 95       	ror	r26
    109e:	f0 40       	sbci	r31, 0x00	; 0
    10a0:	53 95       	inc	r21
    10a2:	c9 f7       	brne	.-14     	; 0x1096 <__addsf3x+0x4e>
    10a4:	7e f4       	brtc	.+30     	; 0x10c4 <__addsf3x+0x7c>
    10a6:	1f 16       	cp	r1, r31
    10a8:	ba 0b       	sbc	r27, r26
    10aa:	62 0b       	sbc	r22, r18
    10ac:	73 0b       	sbc	r23, r19
    10ae:	84 0b       	sbc	r24, r20
    10b0:	ba f0       	brmi	.+46     	; 0x10e0 <__addsf3x+0x98>
    10b2:	91 50       	subi	r25, 0x01	; 1
    10b4:	a1 f0       	breq	.+40     	; 0x10de <__addsf3x+0x96>
    10b6:	ff 0f       	add	r31, r31
    10b8:	bb 1f       	adc	r27, r27
    10ba:	66 1f       	adc	r22, r22
    10bc:	77 1f       	adc	r23, r23
    10be:	88 1f       	adc	r24, r24
    10c0:	c2 f7       	brpl	.-16     	; 0x10b2 <__addsf3x+0x6a>
    10c2:	0e c0       	rjmp	.+28     	; 0x10e0 <__addsf3x+0x98>
    10c4:	ba 0f       	add	r27, r26
    10c6:	62 1f       	adc	r22, r18
    10c8:	73 1f       	adc	r23, r19
    10ca:	84 1f       	adc	r24, r20
    10cc:	48 f4       	brcc	.+18     	; 0x10e0 <__addsf3x+0x98>
    10ce:	87 95       	ror	r24
    10d0:	77 95       	ror	r23
    10d2:	67 95       	ror	r22
    10d4:	b7 95       	ror	r27
    10d6:	f7 95       	ror	r31
    10d8:	9e 3f       	cpi	r25, 0xFE	; 254
    10da:	08 f0       	brcs	.+2      	; 0x10de <__addsf3x+0x96>
    10dc:	b3 cf       	rjmp	.-154    	; 0x1044 <__addsf3+0x1e>
    10de:	93 95       	inc	r25
    10e0:	88 0f       	add	r24, r24
    10e2:	08 f0       	brcs	.+2      	; 0x10e6 <__addsf3x+0x9e>
    10e4:	99 27       	eor	r25, r25
    10e6:	ee 0f       	add	r30, r30
    10e8:	97 95       	ror	r25
    10ea:	87 95       	ror	r24
    10ec:	08 95       	ret

000010ee <__divsf3>:
    10ee:	0c d0       	rcall	.+24     	; 0x1108 <__divsf3x>
    10f0:	eb c0       	rjmp	.+470    	; 0x12c8 <__fp_round>
    10f2:	e3 d0       	rcall	.+454    	; 0x12ba <__fp_pscB>
    10f4:	40 f0       	brcs	.+16     	; 0x1106 <__divsf3+0x18>
    10f6:	da d0       	rcall	.+436    	; 0x12ac <__fp_pscA>
    10f8:	30 f0       	brcs	.+12     	; 0x1106 <__divsf3+0x18>
    10fa:	21 f4       	brne	.+8      	; 0x1104 <__divsf3+0x16>
    10fc:	5f 3f       	cpi	r21, 0xFF	; 255
    10fe:	19 f0       	breq	.+6      	; 0x1106 <__divsf3+0x18>
    1100:	cc c0       	rjmp	.+408    	; 0x129a <__fp_inf>
    1102:	51 11       	cpse	r21, r1
    1104:	15 c1       	rjmp	.+554    	; 0x1330 <__fp_szero>
    1106:	cf c0       	rjmp	.+414    	; 0x12a6 <__fp_nan>

00001108 <__divsf3x>:
    1108:	f0 d0       	rcall	.+480    	; 0x12ea <__fp_split3>
    110a:	98 f3       	brcs	.-26     	; 0x10f2 <__divsf3+0x4>

0000110c <__divsf3_pse>:
    110c:	99 23       	and	r25, r25
    110e:	c9 f3       	breq	.-14     	; 0x1102 <__divsf3+0x14>
    1110:	55 23       	and	r21, r21
    1112:	b1 f3       	breq	.-20     	; 0x1100 <__divsf3+0x12>
    1114:	95 1b       	sub	r25, r21
    1116:	55 0b       	sbc	r21, r21
    1118:	bb 27       	eor	r27, r27
    111a:	aa 27       	eor	r26, r26
    111c:	62 17       	cp	r22, r18
    111e:	73 07       	cpc	r23, r19
    1120:	84 07       	cpc	r24, r20
    1122:	38 f0       	brcs	.+14     	; 0x1132 <__divsf3_pse+0x26>
    1124:	9f 5f       	subi	r25, 0xFF	; 255
    1126:	5f 4f       	sbci	r21, 0xFF	; 255
    1128:	22 0f       	add	r18, r18
    112a:	33 1f       	adc	r19, r19
    112c:	44 1f       	adc	r20, r20
    112e:	aa 1f       	adc	r26, r26
    1130:	a9 f3       	breq	.-22     	; 0x111c <__divsf3_pse+0x10>
    1132:	33 d0       	rcall	.+102    	; 0x119a <__divsf3_pse+0x8e>
    1134:	0e 2e       	mov	r0, r30
    1136:	3a f0       	brmi	.+14     	; 0x1146 <__divsf3_pse+0x3a>
    1138:	e0 e8       	ldi	r30, 0x80	; 128
    113a:	30 d0       	rcall	.+96     	; 0x119c <__divsf3_pse+0x90>
    113c:	91 50       	subi	r25, 0x01	; 1
    113e:	50 40       	sbci	r21, 0x00	; 0
    1140:	e6 95       	lsr	r30
    1142:	00 1c       	adc	r0, r0
    1144:	ca f7       	brpl	.-14     	; 0x1138 <__divsf3_pse+0x2c>
    1146:	29 d0       	rcall	.+82     	; 0x119a <__divsf3_pse+0x8e>
    1148:	fe 2f       	mov	r31, r30
    114a:	27 d0       	rcall	.+78     	; 0x119a <__divsf3_pse+0x8e>
    114c:	66 0f       	add	r22, r22
    114e:	77 1f       	adc	r23, r23
    1150:	88 1f       	adc	r24, r24
    1152:	bb 1f       	adc	r27, r27
    1154:	26 17       	cp	r18, r22
    1156:	37 07       	cpc	r19, r23
    1158:	48 07       	cpc	r20, r24
    115a:	ab 07       	cpc	r26, r27
    115c:	b0 e8       	ldi	r27, 0x80	; 128
    115e:	09 f0       	breq	.+2      	; 0x1162 <__divsf3_pse+0x56>
    1160:	bb 0b       	sbc	r27, r27
    1162:	80 2d       	mov	r24, r0
    1164:	bf 01       	movw	r22, r30
    1166:	ff 27       	eor	r31, r31
    1168:	93 58       	subi	r25, 0x83	; 131
    116a:	5f 4f       	sbci	r21, 0xFF	; 255
    116c:	2a f0       	brmi	.+10     	; 0x1178 <__divsf3_pse+0x6c>
    116e:	9e 3f       	cpi	r25, 0xFE	; 254
    1170:	51 05       	cpc	r21, r1
    1172:	68 f0       	brcs	.+26     	; 0x118e <__divsf3_pse+0x82>
    1174:	92 c0       	rjmp	.+292    	; 0x129a <__fp_inf>
    1176:	dc c0       	rjmp	.+440    	; 0x1330 <__fp_szero>
    1178:	5f 3f       	cpi	r21, 0xFF	; 255
    117a:	ec f3       	brlt	.-6      	; 0x1176 <__divsf3_pse+0x6a>
    117c:	98 3e       	cpi	r25, 0xE8	; 232
    117e:	dc f3       	brlt	.-10     	; 0x1176 <__divsf3_pse+0x6a>
    1180:	86 95       	lsr	r24
    1182:	77 95       	ror	r23
    1184:	67 95       	ror	r22
    1186:	b7 95       	ror	r27
    1188:	f7 95       	ror	r31
    118a:	9f 5f       	subi	r25, 0xFF	; 255
    118c:	c9 f7       	brne	.-14     	; 0x1180 <__divsf3_pse+0x74>
    118e:	88 0f       	add	r24, r24
    1190:	91 1d       	adc	r25, r1
    1192:	96 95       	lsr	r25
    1194:	87 95       	ror	r24
    1196:	97 f9       	bld	r25, 7
    1198:	08 95       	ret
    119a:	e1 e0       	ldi	r30, 0x01	; 1
    119c:	66 0f       	add	r22, r22
    119e:	77 1f       	adc	r23, r23
    11a0:	88 1f       	adc	r24, r24
    11a2:	bb 1f       	adc	r27, r27
    11a4:	62 17       	cp	r22, r18
    11a6:	73 07       	cpc	r23, r19
    11a8:	84 07       	cpc	r24, r20
    11aa:	ba 07       	cpc	r27, r26
    11ac:	20 f0       	brcs	.+8      	; 0x11b6 <__divsf3_pse+0xaa>
    11ae:	62 1b       	sub	r22, r18
    11b0:	73 0b       	sbc	r23, r19
    11b2:	84 0b       	sbc	r24, r20
    11b4:	ba 0b       	sbc	r27, r26
    11b6:	ee 1f       	adc	r30, r30
    11b8:	88 f7       	brcc	.-30     	; 0x119c <__divsf3_pse+0x90>
    11ba:	e0 95       	com	r30
    11bc:	08 95       	ret

000011be <__fixsfsi>:
    11be:	04 d0       	rcall	.+8      	; 0x11c8 <__fixunssfsi>
    11c0:	68 94       	set
    11c2:	b1 11       	cpse	r27, r1
    11c4:	b5 c0       	rjmp	.+362    	; 0x1330 <__fp_szero>
    11c6:	08 95       	ret

000011c8 <__fixunssfsi>:
    11c8:	98 d0       	rcall	.+304    	; 0x12fa <__fp_splitA>
    11ca:	88 f0       	brcs	.+34     	; 0x11ee <__fixunssfsi+0x26>
    11cc:	9f 57       	subi	r25, 0x7F	; 127
    11ce:	90 f0       	brcs	.+36     	; 0x11f4 <__fixunssfsi+0x2c>
    11d0:	b9 2f       	mov	r27, r25
    11d2:	99 27       	eor	r25, r25
    11d4:	b7 51       	subi	r27, 0x17	; 23
    11d6:	a0 f0       	brcs	.+40     	; 0x1200 <__fixunssfsi+0x38>
    11d8:	d1 f0       	breq	.+52     	; 0x120e <__fixunssfsi+0x46>
    11da:	66 0f       	add	r22, r22
    11dc:	77 1f       	adc	r23, r23
    11de:	88 1f       	adc	r24, r24
    11e0:	99 1f       	adc	r25, r25
    11e2:	1a f0       	brmi	.+6      	; 0x11ea <__fixunssfsi+0x22>
    11e4:	ba 95       	dec	r27
    11e6:	c9 f7       	brne	.-14     	; 0x11da <__fixunssfsi+0x12>
    11e8:	12 c0       	rjmp	.+36     	; 0x120e <__fixunssfsi+0x46>
    11ea:	b1 30       	cpi	r27, 0x01	; 1
    11ec:	81 f0       	breq	.+32     	; 0x120e <__fixunssfsi+0x46>
    11ee:	9f d0       	rcall	.+318    	; 0x132e <__fp_zero>
    11f0:	b1 e0       	ldi	r27, 0x01	; 1
    11f2:	08 95       	ret
    11f4:	9c c0       	rjmp	.+312    	; 0x132e <__fp_zero>
    11f6:	67 2f       	mov	r22, r23
    11f8:	78 2f       	mov	r23, r24
    11fa:	88 27       	eor	r24, r24
    11fc:	b8 5f       	subi	r27, 0xF8	; 248
    11fe:	39 f0       	breq	.+14     	; 0x120e <__fixunssfsi+0x46>
    1200:	b9 3f       	cpi	r27, 0xF9	; 249
    1202:	cc f3       	brlt	.-14     	; 0x11f6 <__fixunssfsi+0x2e>
    1204:	86 95       	lsr	r24
    1206:	77 95       	ror	r23
    1208:	67 95       	ror	r22
    120a:	b3 95       	inc	r27
    120c:	d9 f7       	brne	.-10     	; 0x1204 <__fixunssfsi+0x3c>
    120e:	3e f4       	brtc	.+14     	; 0x121e <__fixunssfsi+0x56>
    1210:	90 95       	com	r25
    1212:	80 95       	com	r24
    1214:	70 95       	com	r23
    1216:	61 95       	neg	r22
    1218:	7f 4f       	sbci	r23, 0xFF	; 255
    121a:	8f 4f       	sbci	r24, 0xFF	; 255
    121c:	9f 4f       	sbci	r25, 0xFF	; 255
    121e:	08 95       	ret

00001220 <__floatunsisf>:
    1220:	e8 94       	clt
    1222:	09 c0       	rjmp	.+18     	; 0x1236 <__floatsisf+0x12>

00001224 <__floatsisf>:
    1224:	97 fb       	bst	r25, 7
    1226:	3e f4       	brtc	.+14     	; 0x1236 <__floatsisf+0x12>
    1228:	90 95       	com	r25
    122a:	80 95       	com	r24
    122c:	70 95       	com	r23
    122e:	61 95       	neg	r22
    1230:	7f 4f       	sbci	r23, 0xFF	; 255
    1232:	8f 4f       	sbci	r24, 0xFF	; 255
    1234:	9f 4f       	sbci	r25, 0xFF	; 255
    1236:	99 23       	and	r25, r25
    1238:	a9 f0       	breq	.+42     	; 0x1264 <__floatsisf+0x40>
    123a:	f9 2f       	mov	r31, r25
    123c:	96 e9       	ldi	r25, 0x96	; 150
    123e:	bb 27       	eor	r27, r27
    1240:	93 95       	inc	r25
    1242:	f6 95       	lsr	r31
    1244:	87 95       	ror	r24
    1246:	77 95       	ror	r23
    1248:	67 95       	ror	r22
    124a:	b7 95       	ror	r27
    124c:	f1 11       	cpse	r31, r1
    124e:	f8 cf       	rjmp	.-16     	; 0x1240 <__floatsisf+0x1c>
    1250:	fa f4       	brpl	.+62     	; 0x1290 <__floatsisf+0x6c>
    1252:	bb 0f       	add	r27, r27
    1254:	11 f4       	brne	.+4      	; 0x125a <__floatsisf+0x36>
    1256:	60 ff       	sbrs	r22, 0
    1258:	1b c0       	rjmp	.+54     	; 0x1290 <__floatsisf+0x6c>
    125a:	6f 5f       	subi	r22, 0xFF	; 255
    125c:	7f 4f       	sbci	r23, 0xFF	; 255
    125e:	8f 4f       	sbci	r24, 0xFF	; 255
    1260:	9f 4f       	sbci	r25, 0xFF	; 255
    1262:	16 c0       	rjmp	.+44     	; 0x1290 <__floatsisf+0x6c>
    1264:	88 23       	and	r24, r24
    1266:	11 f0       	breq	.+4      	; 0x126c <__floatsisf+0x48>
    1268:	96 e9       	ldi	r25, 0x96	; 150
    126a:	11 c0       	rjmp	.+34     	; 0x128e <__floatsisf+0x6a>
    126c:	77 23       	and	r23, r23
    126e:	21 f0       	breq	.+8      	; 0x1278 <__floatsisf+0x54>
    1270:	9e e8       	ldi	r25, 0x8E	; 142
    1272:	87 2f       	mov	r24, r23
    1274:	76 2f       	mov	r23, r22
    1276:	05 c0       	rjmp	.+10     	; 0x1282 <__floatsisf+0x5e>
    1278:	66 23       	and	r22, r22
    127a:	71 f0       	breq	.+28     	; 0x1298 <__floatsisf+0x74>
    127c:	96 e8       	ldi	r25, 0x86	; 134
    127e:	86 2f       	mov	r24, r22
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	60 e0       	ldi	r22, 0x00	; 0
    1284:	2a f0       	brmi	.+10     	; 0x1290 <__floatsisf+0x6c>
    1286:	9a 95       	dec	r25
    1288:	66 0f       	add	r22, r22
    128a:	77 1f       	adc	r23, r23
    128c:	88 1f       	adc	r24, r24
    128e:	da f7       	brpl	.-10     	; 0x1286 <__floatsisf+0x62>
    1290:	88 0f       	add	r24, r24
    1292:	96 95       	lsr	r25
    1294:	87 95       	ror	r24
    1296:	97 f9       	bld	r25, 7
    1298:	08 95       	ret

0000129a <__fp_inf>:
    129a:	97 f9       	bld	r25, 7
    129c:	9f 67       	ori	r25, 0x7F	; 127
    129e:	80 e8       	ldi	r24, 0x80	; 128
    12a0:	70 e0       	ldi	r23, 0x00	; 0
    12a2:	60 e0       	ldi	r22, 0x00	; 0
    12a4:	08 95       	ret

000012a6 <__fp_nan>:
    12a6:	9f ef       	ldi	r25, 0xFF	; 255
    12a8:	80 ec       	ldi	r24, 0xC0	; 192
    12aa:	08 95       	ret

000012ac <__fp_pscA>:
    12ac:	00 24       	eor	r0, r0
    12ae:	0a 94       	dec	r0
    12b0:	16 16       	cp	r1, r22
    12b2:	17 06       	cpc	r1, r23
    12b4:	18 06       	cpc	r1, r24
    12b6:	09 06       	cpc	r0, r25
    12b8:	08 95       	ret

000012ba <__fp_pscB>:
    12ba:	00 24       	eor	r0, r0
    12bc:	0a 94       	dec	r0
    12be:	12 16       	cp	r1, r18
    12c0:	13 06       	cpc	r1, r19
    12c2:	14 06       	cpc	r1, r20
    12c4:	05 06       	cpc	r0, r21
    12c6:	08 95       	ret

000012c8 <__fp_round>:
    12c8:	09 2e       	mov	r0, r25
    12ca:	03 94       	inc	r0
    12cc:	00 0c       	add	r0, r0
    12ce:	11 f4       	brne	.+4      	; 0x12d4 <__fp_round+0xc>
    12d0:	88 23       	and	r24, r24
    12d2:	52 f0       	brmi	.+20     	; 0x12e8 <__fp_round+0x20>
    12d4:	bb 0f       	add	r27, r27
    12d6:	40 f4       	brcc	.+16     	; 0x12e8 <__fp_round+0x20>
    12d8:	bf 2b       	or	r27, r31
    12da:	11 f4       	brne	.+4      	; 0x12e0 <__fp_round+0x18>
    12dc:	60 ff       	sbrs	r22, 0
    12de:	04 c0       	rjmp	.+8      	; 0x12e8 <__fp_round+0x20>
    12e0:	6f 5f       	subi	r22, 0xFF	; 255
    12e2:	7f 4f       	sbci	r23, 0xFF	; 255
    12e4:	8f 4f       	sbci	r24, 0xFF	; 255
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	08 95       	ret

000012ea <__fp_split3>:
    12ea:	57 fd       	sbrc	r21, 7
    12ec:	90 58       	subi	r25, 0x80	; 128
    12ee:	44 0f       	add	r20, r20
    12f0:	55 1f       	adc	r21, r21
    12f2:	59 f0       	breq	.+22     	; 0x130a <__fp_splitA+0x10>
    12f4:	5f 3f       	cpi	r21, 0xFF	; 255
    12f6:	71 f0       	breq	.+28     	; 0x1314 <__fp_splitA+0x1a>
    12f8:	47 95       	ror	r20

000012fa <__fp_splitA>:
    12fa:	88 0f       	add	r24, r24
    12fc:	97 fb       	bst	r25, 7
    12fe:	99 1f       	adc	r25, r25
    1300:	61 f0       	breq	.+24     	; 0x131a <__fp_splitA+0x20>
    1302:	9f 3f       	cpi	r25, 0xFF	; 255
    1304:	79 f0       	breq	.+30     	; 0x1324 <__fp_splitA+0x2a>
    1306:	87 95       	ror	r24
    1308:	08 95       	ret
    130a:	12 16       	cp	r1, r18
    130c:	13 06       	cpc	r1, r19
    130e:	14 06       	cpc	r1, r20
    1310:	55 1f       	adc	r21, r21
    1312:	f2 cf       	rjmp	.-28     	; 0x12f8 <__fp_split3+0xe>
    1314:	46 95       	lsr	r20
    1316:	f1 df       	rcall	.-30     	; 0x12fa <__fp_splitA>
    1318:	08 c0       	rjmp	.+16     	; 0x132a <__fp_splitA+0x30>
    131a:	16 16       	cp	r1, r22
    131c:	17 06       	cpc	r1, r23
    131e:	18 06       	cpc	r1, r24
    1320:	99 1f       	adc	r25, r25
    1322:	f1 cf       	rjmp	.-30     	; 0x1306 <__fp_splitA+0xc>
    1324:	86 95       	lsr	r24
    1326:	71 05       	cpc	r23, r1
    1328:	61 05       	cpc	r22, r1
    132a:	08 94       	sec
    132c:	08 95       	ret

0000132e <__fp_zero>:
    132e:	e8 94       	clt

00001330 <__fp_szero>:
    1330:	bb 27       	eor	r27, r27
    1332:	66 27       	eor	r22, r22
    1334:	77 27       	eor	r23, r23
    1336:	cb 01       	movw	r24, r22
    1338:	97 f9       	bld	r25, 7
    133a:	08 95       	ret

0000133c <__mulsf3>:
    133c:	0b d0       	rcall	.+22     	; 0x1354 <__mulsf3x>
    133e:	c4 cf       	rjmp	.-120    	; 0x12c8 <__fp_round>
    1340:	b5 df       	rcall	.-150    	; 0x12ac <__fp_pscA>
    1342:	28 f0       	brcs	.+10     	; 0x134e <__mulsf3+0x12>
    1344:	ba df       	rcall	.-140    	; 0x12ba <__fp_pscB>
    1346:	18 f0       	brcs	.+6      	; 0x134e <__mulsf3+0x12>
    1348:	95 23       	and	r25, r21
    134a:	09 f0       	breq	.+2      	; 0x134e <__mulsf3+0x12>
    134c:	a6 cf       	rjmp	.-180    	; 0x129a <__fp_inf>
    134e:	ab cf       	rjmp	.-170    	; 0x12a6 <__fp_nan>
    1350:	11 24       	eor	r1, r1
    1352:	ee cf       	rjmp	.-36     	; 0x1330 <__fp_szero>

00001354 <__mulsf3x>:
    1354:	ca df       	rcall	.-108    	; 0x12ea <__fp_split3>
    1356:	a0 f3       	brcs	.-24     	; 0x1340 <__mulsf3+0x4>

00001358 <__mulsf3_pse>:
    1358:	95 9f       	mul	r25, r21
    135a:	d1 f3       	breq	.-12     	; 0x1350 <__mulsf3+0x14>
    135c:	95 0f       	add	r25, r21
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	55 1f       	adc	r21, r21
    1362:	62 9f       	mul	r22, r18
    1364:	f0 01       	movw	r30, r0
    1366:	72 9f       	mul	r23, r18
    1368:	bb 27       	eor	r27, r27
    136a:	f0 0d       	add	r31, r0
    136c:	b1 1d       	adc	r27, r1
    136e:	63 9f       	mul	r22, r19
    1370:	aa 27       	eor	r26, r26
    1372:	f0 0d       	add	r31, r0
    1374:	b1 1d       	adc	r27, r1
    1376:	aa 1f       	adc	r26, r26
    1378:	64 9f       	mul	r22, r20
    137a:	66 27       	eor	r22, r22
    137c:	b0 0d       	add	r27, r0
    137e:	a1 1d       	adc	r26, r1
    1380:	66 1f       	adc	r22, r22
    1382:	82 9f       	mul	r24, r18
    1384:	22 27       	eor	r18, r18
    1386:	b0 0d       	add	r27, r0
    1388:	a1 1d       	adc	r26, r1
    138a:	62 1f       	adc	r22, r18
    138c:	73 9f       	mul	r23, r19
    138e:	b0 0d       	add	r27, r0
    1390:	a1 1d       	adc	r26, r1
    1392:	62 1f       	adc	r22, r18
    1394:	83 9f       	mul	r24, r19
    1396:	a0 0d       	add	r26, r0
    1398:	61 1d       	adc	r22, r1
    139a:	22 1f       	adc	r18, r18
    139c:	74 9f       	mul	r23, r20
    139e:	33 27       	eor	r19, r19
    13a0:	a0 0d       	add	r26, r0
    13a2:	61 1d       	adc	r22, r1
    13a4:	23 1f       	adc	r18, r19
    13a6:	84 9f       	mul	r24, r20
    13a8:	60 0d       	add	r22, r0
    13aa:	21 1d       	adc	r18, r1
    13ac:	82 2f       	mov	r24, r18
    13ae:	76 2f       	mov	r23, r22
    13b0:	6a 2f       	mov	r22, r26
    13b2:	11 24       	eor	r1, r1
    13b4:	9f 57       	subi	r25, 0x7F	; 127
    13b6:	50 40       	sbci	r21, 0x00	; 0
    13b8:	8a f0       	brmi	.+34     	; 0x13dc <__mulsf3_pse+0x84>
    13ba:	e1 f0       	breq	.+56     	; 0x13f4 <__mulsf3_pse+0x9c>
    13bc:	88 23       	and	r24, r24
    13be:	4a f0       	brmi	.+18     	; 0x13d2 <__mulsf3_pse+0x7a>
    13c0:	ee 0f       	add	r30, r30
    13c2:	ff 1f       	adc	r31, r31
    13c4:	bb 1f       	adc	r27, r27
    13c6:	66 1f       	adc	r22, r22
    13c8:	77 1f       	adc	r23, r23
    13ca:	88 1f       	adc	r24, r24
    13cc:	91 50       	subi	r25, 0x01	; 1
    13ce:	50 40       	sbci	r21, 0x00	; 0
    13d0:	a9 f7       	brne	.-22     	; 0x13bc <__mulsf3_pse+0x64>
    13d2:	9e 3f       	cpi	r25, 0xFE	; 254
    13d4:	51 05       	cpc	r21, r1
    13d6:	70 f0       	brcs	.+28     	; 0x13f4 <__mulsf3_pse+0x9c>
    13d8:	60 cf       	rjmp	.-320    	; 0x129a <__fp_inf>
    13da:	aa cf       	rjmp	.-172    	; 0x1330 <__fp_szero>
    13dc:	5f 3f       	cpi	r21, 0xFF	; 255
    13de:	ec f3       	brlt	.-6      	; 0x13da <__mulsf3_pse+0x82>
    13e0:	98 3e       	cpi	r25, 0xE8	; 232
    13e2:	dc f3       	brlt	.-10     	; 0x13da <__mulsf3_pse+0x82>
    13e4:	86 95       	lsr	r24
    13e6:	77 95       	ror	r23
    13e8:	67 95       	ror	r22
    13ea:	b7 95       	ror	r27
    13ec:	f7 95       	ror	r31
    13ee:	e7 95       	ror	r30
    13f0:	9f 5f       	subi	r25, 0xFF	; 255
    13f2:	c1 f7       	brne	.-16     	; 0x13e4 <__mulsf3_pse+0x8c>
    13f4:	fe 2b       	or	r31, r30
    13f6:	88 0f       	add	r24, r24
    13f8:	91 1d       	adc	r25, r1
    13fa:	96 95       	lsr	r25
    13fc:	87 95       	ror	r24
    13fe:	97 f9       	bld	r25, 7
    1400:	08 95       	ret

00001402 <__divmodhi4>:
    1402:	97 fb       	bst	r25, 7
    1404:	07 2e       	mov	r0, r23
    1406:	16 f4       	brtc	.+4      	; 0x140c <__divmodhi4+0xa>
    1408:	00 94       	com	r0
    140a:	06 d0       	rcall	.+12     	; 0x1418 <__divmodhi4_neg1>
    140c:	77 fd       	sbrc	r23, 7
    140e:	08 d0       	rcall	.+16     	; 0x1420 <__divmodhi4_neg2>
    1410:	14 d0       	rcall	.+40     	; 0x143a <__udivmodhi4>
    1412:	07 fc       	sbrc	r0, 7
    1414:	05 d0       	rcall	.+10     	; 0x1420 <__divmodhi4_neg2>
    1416:	3e f4       	brtc	.+14     	; 0x1426 <__divmodhi4_exit>

00001418 <__divmodhi4_neg1>:
    1418:	90 95       	com	r25
    141a:	81 95       	neg	r24
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	08 95       	ret

00001420 <__divmodhi4_neg2>:
    1420:	70 95       	com	r23
    1422:	61 95       	neg	r22
    1424:	7f 4f       	sbci	r23, 0xFF	; 255

00001426 <__divmodhi4_exit>:
    1426:	08 95       	ret

00001428 <__tablejump2__>:
    1428:	ee 0f       	add	r30, r30
    142a:	ff 1f       	adc	r31, r31
    142c:	00 24       	eor	r0, r0
    142e:	00 1c       	adc	r0, r0
    1430:	0b be       	out	0x3b, r0	; 59
    1432:	07 90       	elpm	r0, Z+
    1434:	f6 91       	elpm	r31, Z
    1436:	e0 2d       	mov	r30, r0
    1438:	09 94       	ijmp

0000143a <__udivmodhi4>:
    143a:	aa 1b       	sub	r26, r26
    143c:	bb 1b       	sub	r27, r27
    143e:	51 e1       	ldi	r21, 0x11	; 17
    1440:	07 c0       	rjmp	.+14     	; 0x1450 <__udivmodhi4_ep>

00001442 <__udivmodhi4_loop>:
    1442:	aa 1f       	adc	r26, r26
    1444:	bb 1f       	adc	r27, r27
    1446:	a6 17       	cp	r26, r22
    1448:	b7 07       	cpc	r27, r23
    144a:	10 f0       	brcs	.+4      	; 0x1450 <__udivmodhi4_ep>
    144c:	a6 1b       	sub	r26, r22
    144e:	b7 0b       	sbc	r27, r23

00001450 <__udivmodhi4_ep>:
    1450:	88 1f       	adc	r24, r24
    1452:	99 1f       	adc	r25, r25
    1454:	5a 95       	dec	r21
    1456:	a9 f7       	brne	.-22     	; 0x1442 <__udivmodhi4_loop>
    1458:	80 95       	com	r24
    145a:	90 95       	com	r25
    145c:	bc 01       	movw	r22, r24
    145e:	cd 01       	movw	r24, r26
    1460:	08 95       	ret

00001462 <_exit>:
    1462:	f8 94       	cli

00001464 <__stop_program>:
    1464:	ff cf       	rjmp	.-2      	; 0x1464 <__stop_program>
