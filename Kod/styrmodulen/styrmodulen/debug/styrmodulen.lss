
styrmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00001b0c  00001ba0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008c  00800114  00800114  00001bb4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001bb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001be4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001c24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001200  00000000  00000000  00001d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002ed  00000000  00000000  00002f74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b2b  00000000  00000000  00003261  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004cc  00000000  00000000  00004d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000108d1  00000000  00000000  00005258  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a14  00000000  00000000  00015b29  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  0001753d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003f12  00000000  00000000  0001766d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
       2:	00 00       	nop
       4:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__vector_1>
       8:	b3 c5       	rjmp	.+2918   	; 0xb70 <__vector_2>
       a:	00 00       	nop
       c:	d9 c5       	rjmp	.+2994   	; 0xbc0 <__vector_3>
       e:	00 00       	nop
      10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
      12:	00 00       	nop
      14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
      16:	00 00       	nop
      18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
      1a:	00 00       	nop
      1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
      1e:	00 00       	nop
      20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
      22:	00 00       	nop
      24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
      26:	00 00       	nop
      28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
      2e:	00 00       	nop
      30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
      32:	00 00       	nop
      34:	41 c5       	rjmp	.+2690   	; 0xab8 <__vector_13>
      36:	00 00       	nop
      38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
      3a:	00 00       	nop
      3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
      3e:	00 00       	nop
      40:	54 c0       	rjmp	.+168    	; 0xea <__bad_interrupt>
      42:	00 00       	nop
      44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
      46:	00 00       	nop
      48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
      4e:	00 00       	nop
      50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
      52:	00 00       	nop
      54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
      56:	00 00       	nop
      58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
      5a:	00 00       	nop
      5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
      5e:	00 00       	nop
      60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
      62:	00 00       	nop
      64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
      66:	00 00       	nop
      68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
      6a:	00 00       	nop
      6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
      6e:	00 00       	nop
      70:	3c c0       	rjmp	.+120    	; 0xea <__bad_interrupt>
      72:	00 00       	nop
      74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
      76:	00 00       	nop
      78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
      7a:	00 00       	nop
      7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
      7e:	00 00       	nop
      80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
      82:	00 00       	nop
      84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
      86:	00 00       	nop
      88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a 0a       	sbc	r4, r26
      8e:	4f 0a       	sbc	r4, r31
      90:	5b 0a       	sbc	r5, r27
      92:	75 0a       	sbc	r7, r21
      94:	79 0a       	sbc	r7, r25
      96:	7d 0a       	sbc	r7, r29
      98:	81 0a       	sbc	r8, r17
      9a:	2b 0b       	sbc	r18, r27
      9c:	92 0a       	sbc	r9, r18
      9e:	97 0a       	sbc	r9, r23
      a0:	9e 0a       	sbc	r9, r30
      a2:	a5 0a       	sbc	r10, r21
      a4:	ac 0a       	sbc	r10, r28
      a6:	b3 0a       	sbc	r11, r19
      a8:	ba 0a       	sbc	r11, r26
      aa:	c1 0a       	sbc	r12, r17

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	d0 e4       	ldi	r29, 0x40	; 64
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	11 e0       	ldi	r17, 0x01	; 1
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	ec e0       	ldi	r30, 0x0C	; 12
      c0:	fb e1       	ldi	r31, 0x1B	; 27
      c2:	00 e0       	ldi	r16, 0x00	; 0
      c4:	0b bf       	out	0x3b, r16	; 59
      c6:	02 c0       	rjmp	.+4      	; 0xcc <__do_copy_data+0x14>
      c8:	07 90       	elpm	r0, Z+
      ca:	0d 92       	st	X+, r0
      cc:	a4 31       	cpi	r26, 0x14	; 20
      ce:	b1 07       	cpc	r27, r17
      d0:	d9 f7       	brne	.-10     	; 0xc8 <__do_copy_data+0x10>

000000d2 <__do_clear_bss>:
      d2:	21 e0       	ldi	r18, 0x01	; 1
      d4:	a4 e1       	ldi	r26, 0x14	; 20
      d6:	b1 e0       	ldi	r27, 0x01	; 1
      d8:	01 c0       	rjmp	.+2      	; 0xdc <.do_clear_bss_start>

000000da <.do_clear_bss_loop>:
      da:	1d 92       	st	X+, r1

000000dc <.do_clear_bss_start>:
      dc:	a0 3a       	cpi	r26, 0xA0	; 160
      de:	b2 07       	cpc	r27, r18
      e0:	e1 f7       	brne	.-8      	; 0xda <.do_clear_bss_loop>
      e2:	0e 94 2d 0b 	call	0x165a	; 0x165a <main>
      e6:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <_exit>

000000ea <__bad_interrupt>:
      ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <board_init>:
      ec:	08 95       	ret

000000ee <linje_get_error>:
		//count_waypoint = 0;			//counter som används för att roboten ska köra i 0.5 sek för att komma ur kurvor 
		RGB_data = 0;				// RGB värdet nollsätts för att kunna kontrollera för nästa kurva
		drive_forward();			// motorerna kör framåt för att komma ur kurvan
	}
	
	else if(regler_against_wall && (distance_left > st_value )){
      ee:	2f 92       	push	r2
      f0:	3f 92       	push	r3
      f2:	4f 92       	push	r4
      f4:	5f 92       	push	r5
      f6:	6f 92       	push	r6
      f8:	7f 92       	push	r7
      fa:	8f 92       	push	r8
      fc:	9f 92       	push	r9
      fe:	af 92       	push	r10
     100:	bf 92       	push	r11
     102:	cf 92       	push	r12
     104:	df 92       	push	r13
     106:	ef 92       	push	r14
     108:	ff 92       	push	r15
     10a:	0f 93       	push	r16
     10c:	1f 93       	push	r17
     10e:	cf 93       	push	r28
     110:	df 93       	push	r29
     112:	10 92 4a 01 	sts	0x014A, r1
     116:	10 92 49 01 	sts	0x0149, r1
     11a:	f8 94       	cli
     11c:	80 90 7b 01 	lds	r8, 0x017B
     120:	90 90 7c 01 	lds	r9, 0x017C
     124:	20 90 94 01 	lds	r2, 0x0194
     128:	30 90 95 01 	lds	r3, 0x0195
     12c:	78 94       	sei
     12e:	c0 90 49 01 	lds	r12, 0x0149
     132:	d0 90 4a 01 	lds	r13, 0x014A
     136:	05 e0       	ldi	r16, 0x05	; 5
     138:	10 e0       	ldi	r17, 0x00	; 0
     13a:	c0 e0       	ldi	r28, 0x00	; 0
     13c:	d0 e0       	ldi	r29, 0x00	; 0
     13e:	41 2c       	mov	r4, r1
     140:	51 2c       	mov	r5, r1
     142:	32 01       	movw	r6, r4
     144:	0f 2e       	mov	r0, r31
     146:	f5 e0       	ldi	r31, 0x05	; 5
     148:	af 2e       	mov	r10, r31
     14a:	b1 2c       	mov	r11, r1
     14c:	f0 2d       	mov	r31, r0
     14e:	c5 01       	movw	r24, r10
     150:	80 1b       	sub	r24, r16
     152:	91 0b       	sbc	r25, r17
     154:	08 97       	sbiw	r24, 0x08	; 8
     156:	14 f5       	brge	.+68     	; 0x19c <linje_get_error+0xae>
     158:	74 01       	movw	r14, r8
     15a:	0c 2e       	mov	r0, r28
     15c:	02 c0       	rjmp	.+4      	; 0x162 <linje_get_error+0x74>
     15e:	f5 94       	asr	r15
     160:	e7 94       	ror	r14
     162:	0a 94       	dec	r0
     164:	e2 f7       	brpl	.-8      	; 0x15e <linje_get_error+0x70>
     166:	83 e0       	ldi	r24, 0x03	; 3
     168:	e8 22       	and	r14, r24
     16a:	ff 24       	eor	r15, r15
     16c:	0e 9d       	mul	r16, r14
     16e:	b0 01       	movw	r22, r0
     170:	0f 9d       	mul	r16, r15
     172:	70 0d       	add	r23, r0
     174:	1e 9d       	mul	r17, r14
     176:	70 0d       	add	r23, r0
     178:	11 24       	eor	r1, r1
     17a:	07 2e       	mov	r0, r23
     17c:	00 0c       	add	r0, r0
     17e:	88 0b       	sbc	r24, r24
     180:	99 0b       	sbc	r25, r25
     182:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     186:	9b 01       	movw	r18, r22
     188:	ac 01       	movw	r20, r24
     18a:	c3 01       	movw	r24, r6
     18c:	b2 01       	movw	r22, r4
     18e:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__addsf3>
     192:	2b 01       	movw	r4, r22
     194:	3c 01       	movw	r6, r24
     196:	ce 0c       	add	r12, r14
     198:	df 1c       	adc	r13, r15
     19a:	22 c0       	rjmp	.+68     	; 0x1e0 <linje_get_error+0xf2>
     19c:	ce 01       	movw	r24, r28
     19e:	40 97       	sbiw	r24, 0x10	; 16
     1a0:	71 01       	movw	r14, r2
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <linje_get_error+0xba>
     1a4:	f5 94       	asr	r15
     1a6:	e7 94       	ror	r14
     1a8:	8a 95       	dec	r24
     1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <linje_get_error+0xb6>
     1ac:	83 e0       	ldi	r24, 0x03	; 3
     1ae:	e8 22       	and	r14, r24
     1b0:	ff 24       	eor	r15, r15
     1b2:	0e 9d       	mul	r16, r14
     1b4:	b0 01       	movw	r22, r0
     1b6:	0f 9d       	mul	r16, r15
     1b8:	70 0d       	add	r23, r0
     1ba:	1e 9d       	mul	r17, r14
     1bc:	70 0d       	add	r23, r0
     1be:	11 24       	eor	r1, r1
     1c0:	07 2e       	mov	r0, r23
     1c2:	00 0c       	add	r0, r0
     1c4:	88 0b       	sbc	r24, r24
     1c6:	99 0b       	sbc	r25, r25
     1c8:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     1cc:	9b 01       	movw	r18, r22
     1ce:	ac 01       	movw	r20, r24
     1d0:	c3 01       	movw	r24, r6
     1d2:	b2 01       	movw	r22, r4
     1d4:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__addsf3>
     1d8:	2b 01       	movw	r4, r22
     1da:	3c 01       	movw	r6, r24
     1dc:	ce 0c       	add	r12, r14
     1de:	df 1c       	adc	r13, r15
     1e0:	22 96       	adiw	r28, 0x02	; 2
     1e2:	01 50       	subi	r16, 0x01	; 1
     1e4:	11 09       	sbc	r17, r1
     1e6:	c6 31       	cpi	r28, 0x16	; 22
     1e8:	d1 05       	cpc	r29, r1
     1ea:	09 f0       	breq	.+2      	; 0x1ee <linje_get_error+0x100>
     1ec:	b0 cf       	rjmp	.-160    	; 0x14e <linje_get_error+0x60>
     1ee:	d0 92 4a 01 	sts	0x014A, r13
     1f2:	c0 92 49 01 	sts	0x0149, r12
     1f6:	c1 14       	cp	r12, r1
     1f8:	d1 04       	cpc	r13, r1
     1fa:	69 f0       	breq	.+26     	; 0x216 <linje_get_error+0x128>
     1fc:	b6 01       	movw	r22, r12
     1fe:	dd 0c       	add	r13, r13
     200:	88 0b       	sbc	r24, r24
     202:	99 0b       	sbc	r25, r25
     204:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     208:	9b 01       	movw	r18, r22
     20a:	ac 01       	movw	r20, r24
     20c:	c3 01       	movw	r24, r6
     20e:	b2 01       	movw	r22, r4
     210:	0e 94 ca 0b 	call	0x1794	; 0x1794 <__divsf3>
     214:	03 c0       	rjmp	.+6      	; 0x21c <linje_get_error+0x12e>
     216:	60 e0       	ldi	r22, 0x00	; 0
     218:	70 e0       	ldi	r23, 0x00	; 0
     21a:	cb 01       	movw	r24, r22
     21c:	0e 94 32 0c 	call	0x1864	; 0x1864 <__fixsfsi>
     220:	cb 01       	movw	r24, r22
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	ff 90       	pop	r15
     22c:	ef 90       	pop	r14
     22e:	df 90       	pop	r13
     230:	cf 90       	pop	r12
     232:	bf 90       	pop	r11
     234:	af 90       	pop	r10
     236:	9f 90       	pop	r9
     238:	8f 90       	pop	r8
     23a:	7f 90       	pop	r7
     23c:	6f 90       	pop	r6
     23e:	5f 90       	pop	r5
     240:	4f 90       	pop	r4
     242:	3f 90       	pop	r3
     244:	2f 90       	pop	r2
     246:	08 95       	ret

00000248 <linje_RGBsveng>:
     248:	cf 93       	push	r28
     24a:	df 93       	push	r29
     24c:	f8 94       	cli
     24e:	40 91 7b 01 	lds	r20, 0x017B
     252:	50 91 7c 01 	lds	r21, 0x017C
     256:	60 91 94 01 	lds	r22, 0x0194
     25a:	70 91 95 01 	lds	r23, 0x0195
     25e:	78 94       	sei
     260:	80 91 88 01 	lds	r24, 0x0188
     264:	88 23       	and	r24, r24
     266:	09 f4       	brne	.+2      	; 0x26a <linje_RGBsveng+0x22>
     268:	a3 c0       	rjmp	.+326    	; 0x3b0 <linje_RGBsveng+0x168>
     26a:	20 91 47 01 	lds	r18, 0x0147
     26e:	30 91 48 01 	lds	r19, 0x0148
     272:	23 2b       	or	r18, r19
     274:	b1 f4       	brne	.+44     	; 0x2a2 <linje_RGBsveng+0x5a>
     276:	20 91 41 01 	lds	r18, 0x0141
     27a:	30 91 42 01 	lds	r19, 0x0142
     27e:	23 2b       	or	r18, r19
     280:	81 f4       	brne	.+32     	; 0x2a2 <linje_RGBsveng+0x5a>
     282:	10 92 54 01 	sts	0x0154, r1
     286:	10 92 53 01 	sts	0x0153, r1
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	90 93 48 01 	sts	0x0148, r25
     292:	80 93 47 01 	sts	0x0147, r24
     296:	90 93 42 01 	sts	0x0142, r25
     29a:	80 93 41 01 	sts	0x0141, r24
     29e:	80 e0       	ldi	r24, 0x00	; 0
     2a0:	8e c0       	rjmp	.+284    	; 0x3be <linje_RGBsveng+0x176>
     2a2:	20 91 53 01 	lds	r18, 0x0153
     2a6:	30 91 54 01 	lds	r19, 0x0154
     2aa:	24 30       	cpi	r18, 0x04	; 4
     2ac:	31 05       	cpc	r19, r1
     2ae:	0c f0       	brlt	.+2      	; 0x2b2 <linje_RGBsveng+0x6a>
     2b0:	6f c0       	rjmp	.+222    	; 0x390 <linje_RGBsveng+0x148>
     2b2:	83 30       	cpi	r24, 0x03	; 3
     2b4:	71 f5       	brne	.+92     	; 0x312 <linje_RGBsveng+0xca>
     2b6:	a0 ef       	ldi	r26, 0xF0	; 240
     2b8:	bf ef       	ldi	r27, 0xFF	; 255
     2ba:	2b ef       	ldi	r18, 0xFB	; 251
     2bc:	e0 e0       	ldi	r30, 0x00	; 0
     2be:	f0 e0       	ldi	r31, 0x00	; 0
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	81 11       	cpse	r24, r1
     2c4:	1f c0       	rjmp	.+62     	; 0x304 <linje_RGBsveng+0xbc>
     2c6:	e8 30       	cpi	r30, 0x08	; 8
     2c8:	f1 05       	cpc	r31, r1
     2ca:	84 f4       	brge	.+32     	; 0x2ec <linje_RGBsveng+0xa4>
     2cc:	cf 01       	movw	r24, r30
     2ce:	88 0f       	add	r24, r24
     2d0:	99 1f       	adc	r25, r25
     2d2:	ea 01       	movw	r28, r20
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <linje_RGBsveng+0x92>
     2d6:	d5 95       	asr	r29
     2d8:	c7 95       	ror	r28
     2da:	8a 95       	dec	r24
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <linje_RGBsveng+0x8e>
     2de:	ce 01       	movw	r24, r28
     2e0:	86 95       	lsr	r24
     2e2:	81 70       	andi	r24, 0x01	; 1
     2e4:	28 9f       	mul	r18, r24
     2e6:	80 2d       	mov	r24, r0
     2e8:	11 24       	eor	r1, r1
     2ea:	0c c0       	rjmp	.+24     	; 0x304 <linje_RGBsveng+0xbc>
     2ec:	cb 01       	movw	r24, r22
     2ee:	0a 2e       	mov	r0, r26
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <linje_RGBsveng+0xae>
     2f2:	95 95       	asr	r25
     2f4:	87 95       	ror	r24
     2f6:	0a 94       	dec	r0
     2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <linje_RGBsveng+0xaa>
     2fa:	86 95       	lsr	r24
     2fc:	81 70       	andi	r24, 0x01	; 1
     2fe:	28 9f       	mul	r18, r24
     300:	80 2d       	mov	r24, r0
     302:	11 24       	eor	r1, r1
     304:	31 96       	adiw	r30, 0x01	; 1
     306:	2f 5f       	subi	r18, 0xFF	; 255
     308:	12 96       	adiw	r26, 0x02	; 2
     30a:	26 30       	cpi	r18, 0x06	; 6
     30c:	d1 f6       	brne	.-76     	; 0x2c2 <linje_RGBsveng+0x7a>
     30e:	8d ef       	ldi	r24, 0xFD	; 253
     310:	56 c0       	rjmp	.+172    	; 0x3be <linje_RGBsveng+0x176>
     312:	82 30       	cpi	r24, 0x02	; 2
     314:	69 f4       	brne	.+26     	; 0x330 <linje_RGBsveng+0xe8>
     316:	40 7f       	andi	r20, 0xF0	; 240
     318:	50 93 7c 01 	sts	0x017C, r21
     31c:	40 93 7b 01 	sts	0x017B, r20
     320:	63 70       	andi	r22, 0x03	; 3
     322:	77 27       	eor	r23, r23
     324:	70 93 95 01 	sts	0x0195, r23
     328:	60 93 94 01 	sts	0x0194, r22
     32c:	e0 de       	rcall	.-576    	; 0xee <linje_get_error>
     32e:	47 c0       	rjmp	.+142    	; 0x3be <linje_RGBsveng+0x176>
     330:	81 30       	cpi	r24, 0x01	; 1
     332:	d1 f5       	brne	.+116    	; 0x3a8 <linje_RGBsveng+0x160>
     334:	a6 e0       	ldi	r26, 0x06	; 6
     336:	b0 e0       	ldi	r27, 0x00	; 0
     338:	e6 e0       	ldi	r30, 0x06	; 6
     33a:	8b e0       	ldi	r24, 0x0B	; 11
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	20 e0       	ldi	r18, 0x00	; 0
     340:	21 11       	cpse	r18, r1
     342:	1f c0       	rjmp	.+62     	; 0x382 <linje_RGBsveng+0x13a>
     344:	88 30       	cpi	r24, 0x08	; 8
     346:	91 05       	cpc	r25, r1
     348:	84 f4       	brge	.+32     	; 0x36a <linje_RGBsveng+0x122>
     34a:	9c 01       	movw	r18, r24
     34c:	22 0f       	add	r18, r18
     34e:	33 1f       	adc	r19, r19
     350:	ea 01       	movw	r28, r20
     352:	02 c0       	rjmp	.+4      	; 0x358 <linje_RGBsveng+0x110>
     354:	d5 95       	asr	r29
     356:	c7 95       	ror	r28
     358:	2a 95       	dec	r18
     35a:	e2 f7       	brpl	.-8      	; 0x354 <linje_RGBsveng+0x10c>
     35c:	9e 01       	movw	r18, r28
     35e:	26 95       	lsr	r18
     360:	21 70       	andi	r18, 0x01	; 1
     362:	e2 9f       	mul	r30, r18
     364:	20 2d       	mov	r18, r0
     366:	11 24       	eor	r1, r1
     368:	0c c0       	rjmp	.+24     	; 0x382 <linje_RGBsveng+0x13a>
     36a:	9b 01       	movw	r18, r22
     36c:	0a 2e       	mov	r0, r26
     36e:	02 c0       	rjmp	.+4      	; 0x374 <linje_RGBsveng+0x12c>
     370:	35 95       	asr	r19
     372:	27 95       	ror	r18
     374:	0a 94       	dec	r0
     376:	e2 f7       	brpl	.-8      	; 0x370 <linje_RGBsveng+0x128>
     378:	26 95       	lsr	r18
     37a:	21 70       	andi	r18, 0x01	; 1
     37c:	e2 9f       	mul	r30, r18
     37e:	20 2d       	mov	r18, r0
     380:	11 24       	eor	r1, r1
     382:	01 97       	sbiw	r24, 0x01	; 1
     384:	e1 50       	subi	r30, 0x01	; 1
     386:	12 97       	sbiw	r26, 0x02	; 2
     388:	00 97       	sbiw	r24, 0x00	; 0
     38a:	d1 f6       	brne	.-76     	; 0x340 <linje_RGBsveng+0xf8>
     38c:	83 e0       	ldi	r24, 0x03	; 3
     38e:	17 c0       	rjmp	.+46     	; 0x3be <linje_RGBsveng+0x176>
     390:	10 92 88 01 	sts	0x0188, r1
     394:	10 92 48 01 	sts	0x0148, r1
     398:	10 92 47 01 	sts	0x0147, r1
     39c:	10 92 42 01 	sts	0x0142, r1
     3a0:	10 92 41 01 	sts	0x0141, r1
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	0b c0       	rjmp	.+22     	; 0x3be <linje_RGBsveng+0x176>
     3a8:	80 e0       	ldi	r24, 0x00	; 0
     3aa:	09 c0       	rjmp	.+18     	; 0x3be <linje_RGBsveng+0x176>
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	07 c0       	rjmp	.+14     	; 0x3be <linje_RGBsveng+0x176>
     3b0:	80 91 53 01 	lds	r24, 0x0153
     3b4:	90 91 54 01 	lds	r25, 0x0154
     3b8:	04 97       	sbiw	r24, 0x04	; 4
     3ba:	c4 f3       	brlt	.-16     	; 0x3ac <linje_RGBsveng+0x164>
     3bc:	e9 cf       	rjmp	.-46     	; 0x390 <linje_RGBsveng+0x148>
     3be:	df 91       	pop	r29
     3c0:	cf 91       	pop	r28
     3c2:	08 95       	ret

000003c4 <sekvens_goal_detekted>:
     3c4:	94 de       	rcall	.-728    	; 0xee <linje_get_error>
     3c6:	80 91 49 01 	lds	r24, 0x0149
     3ca:	90 91 4a 01 	lds	r25, 0x014A
     3ce:	8d 31       	cpi	r24, 0x1D	; 29
     3d0:	91 05       	cpc	r25, r1
     3d2:	5c f0       	brlt	.+22     	; 0x3ea <sekvens_goal_detekted+0x26>
     3d4:	59 9a       	sbi	0x0b, 1	; 11
     3d6:	80 91 49 01 	lds	r24, 0x0149
     3da:	90 91 4a 01 	lds	r25, 0x014A
     3de:	90 93 1b 01 	sts	0x011B, r25
     3e2:	80 93 1a 01 	sts	0x011A, r24
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	08 95       	ret
     3ea:	20 91 1a 01 	lds	r18, 0x011A
     3ee:	30 91 1b 01 	lds	r19, 0x011B
     3f2:	ac 01       	movw	r20, r24
     3f4:	42 0f       	add	r20, r18
     3f6:	53 1f       	adc	r21, r19
     3f8:	45 32       	cpi	r20, 0x25	; 37
     3fa:	51 05       	cpc	r21, r1
     3fc:	94 f0       	brlt	.+36     	; 0x422 <sekvens_goal_detekted+0x5e>
     3fe:	2d 31       	cpi	r18, 0x1D	; 29
     400:	31 05       	cpc	r19, r1
     402:	7c f4       	brge	.+30     	; 0x422 <sekvens_goal_detekted+0x5e>
     404:	20 91 88 01 	lds	r18, 0x0188
     408:	21 11       	cpse	r18, r1
     40a:	0b c0       	rjmp	.+22     	; 0x422 <sekvens_goal_detekted+0x5e>
     40c:	59 9a       	sbi	0x0b, 1	; 11
     40e:	80 91 49 01 	lds	r24, 0x0149
     412:	90 91 4a 01 	lds	r25, 0x014A
     416:	90 93 1b 01 	sts	0x011B, r25
     41a:	80 93 1a 01 	sts	0x011A, r24
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	08 95       	ret
     422:	90 93 1b 01 	sts	0x011B, r25
     426:	80 93 1a 01 	sts	0x011A, r24
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	08 95       	ret

0000042e <detect_goal>:
     42e:	80 91 43 01 	lds	r24, 0x0143
     432:	90 91 44 01 	lds	r25, 0x0144
     436:	89 2b       	or	r24, r25
     438:	69 f4       	brne	.+26     	; 0x454 <detect_goal+0x26>
     43a:	c4 df       	rcall	.-120    	; 0x3c4 <sekvens_goal_detekted>
     43c:	88 23       	and	r24, r24
     43e:	51 f0       	breq	.+20     	; 0x454 <detect_goal+0x26>
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	90 93 44 01 	sts	0x0144, r25
     448:	80 93 43 01 	sts	0x0143, r24
     44c:	10 92 50 01 	sts	0x0150, r1
     450:	10 92 4f 01 	sts	0x014F, r1
     454:	b7 df       	rcall	.-146    	; 0x3c4 <sekvens_goal_detekted>
     456:	88 23       	and	r24, r24
     458:	b1 f0       	breq	.+44     	; 0x486 <detect_goal+0x58>
     45a:	80 91 1c 01 	lds	r24, 0x011C
     45e:	90 91 1d 01 	lds	r25, 0x011D
     462:	9c 01       	movw	r18, r24
     464:	2d 7f       	andi	r18, 0xFD	; 253
     466:	23 2b       	or	r18, r19
     468:	71 f4       	brne	.+28     	; 0x486 <detect_goal+0x58>
     46a:	20 91 4f 01 	lds	r18, 0x014F
     46e:	30 91 50 01 	lds	r19, 0x0150
     472:	24 31       	cpi	r18, 0x14	; 20
     474:	31 05       	cpc	r19, r1
     476:	3c f4       	brge	.+14     	; 0x486 <detect_goal+0x58>
     478:	01 96       	adiw	r24, 0x01	; 1
     47a:	90 93 1d 01 	sts	0x011D, r25
     47e:	80 93 1c 01 	sts	0x011C, r24
     482:	80 e0       	ldi	r24, 0x00	; 0
     484:	08 95       	ret
     486:	9e df       	rcall	.-196    	; 0x3c4 <sekvens_goal_detekted>
     488:	81 11       	cpse	r24, r1
     48a:	17 c0       	rjmp	.+46     	; 0x4ba <detect_goal+0x8c>
     48c:	20 91 1c 01 	lds	r18, 0x011C
     490:	30 91 1d 01 	lds	r19, 0x011D
     494:	a9 01       	movw	r20, r18
     496:	4d 7f       	andi	r20, 0xFD	; 253
     498:	41 30       	cpi	r20, 0x01	; 1
     49a:	51 05       	cpc	r21, r1
     49c:	71 f4       	brne	.+28     	; 0x4ba <detect_goal+0x8c>
     49e:	40 91 4f 01 	lds	r20, 0x014F
     4a2:	50 91 50 01 	lds	r21, 0x0150
     4a6:	44 31       	cpi	r20, 0x14	; 20
     4a8:	51 05       	cpc	r21, r1
     4aa:	3c f4       	brge	.+14     	; 0x4ba <detect_goal+0x8c>
     4ac:	2f 5f       	subi	r18, 0xFF	; 255
     4ae:	3f 4f       	sbci	r19, 0xFF	; 255
     4b0:	30 93 1d 01 	sts	0x011D, r19
     4b4:	20 93 1c 01 	sts	0x011C, r18
     4b8:	08 95       	ret
     4ba:	84 df       	rcall	.-248    	; 0x3c4 <sekvens_goal_detekted>
     4bc:	88 23       	and	r24, r24
     4be:	99 f0       	breq	.+38     	; 0x4e6 <detect_goal+0xb8>
     4c0:	20 91 1c 01 	lds	r18, 0x011C
     4c4:	30 91 1d 01 	lds	r19, 0x011D
     4c8:	24 30       	cpi	r18, 0x04	; 4
     4ca:	31 05       	cpc	r19, r1
     4cc:	61 f4       	brne	.+24     	; 0x4e6 <detect_goal+0xb8>
     4ce:	20 91 4f 01 	lds	r18, 0x014F
     4d2:	30 91 50 01 	lds	r19, 0x0150
     4d6:	24 31       	cpi	r18, 0x14	; 20
     4d8:	31 05       	cpc	r19, r1
     4da:	5c f4       	brge	.+22     	; 0x4f2 <detect_goal+0xc4>
     4dc:	10 92 44 01 	sts	0x0144, r1
     4e0:	10 92 43 01 	sts	0x0143, r1
     4e4:	08 95       	ret
     4e6:	80 91 4f 01 	lds	r24, 0x014F
     4ea:	90 91 50 01 	lds	r25, 0x0150
     4ee:	44 97       	sbiw	r24, 0x14	; 20
     4f0:	54 f0       	brlt	.+20     	; 0x506 <detect_goal+0xd8>
     4f2:	10 92 1d 01 	sts	0x011D, r1
     4f6:	10 92 1c 01 	sts	0x011C, r1
     4fa:	10 92 44 01 	sts	0x0144, r1
     4fe:	10 92 43 01 	sts	0x0143, r1
     502:	80 e0       	ldi	r24, 0x00	; 0
     504:	08 95       	ret
     506:	08 95       	ret

00000508 <detect_labyrint>:
     508:	80 91 84 01 	lds	r24, 0x0184
     50c:	89 31       	cpi	r24, 0x19	; 25
     50e:	08 f5       	brcc	.+66     	; 0x552 <detect_labyrint+0x4a>
     510:	80 91 89 01 	lds	r24, 0x0189
     514:	89 31       	cpi	r24, 0x19	; 25
     516:	e8 f4       	brcc	.+58     	; 0x552 <detect_labyrint+0x4a>
     518:	80 91 45 01 	lds	r24, 0x0145
     51c:	90 91 46 01 	lds	r25, 0x0146
     520:	89 2b       	or	r24, r25
     522:	59 f4       	brne	.+22     	; 0x53a <detect_labyrint+0x32>
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	90 93 46 01 	sts	0x0146, r25
     52c:	80 93 45 01 	sts	0x0145, r24
     530:	10 92 52 01 	sts	0x0152, r1
     534:	10 92 51 01 	sts	0x0151, r1
     538:	08 95       	ret
     53a:	80 91 51 01 	lds	r24, 0x0151
     53e:	90 91 52 01 	lds	r25, 0x0152
     542:	4e 97       	sbiw	r24, 0x1e	; 30
     544:	64 f0       	brlt	.+24     	; 0x55e <detect_labyrint+0x56>
     546:	10 92 46 01 	sts	0x0146, r1
     54a:	10 92 45 01 	sts	0x0145, r1
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	08 95       	ret
     552:	10 92 19 01 	sts	0x0119, r1
     556:	10 92 18 01 	sts	0x0118, r1
     55a:	80 e0       	ldi	r24, 0x00	; 0
     55c:	08 95       	ret
     55e:	80 e0       	ldi	r24, 0x00	; 0
     560:	08 95       	ret

00000562 <turn_left>:
     562:	2d 98       	cbi	0x05, 5	; 5
     564:	2e 9a       	sbi	0x05, 6	; 5
     566:	8c e3       	ldi	r24, 0x3C	; 60
     568:	87 bd       	out	0x27, r24	; 39
     56a:	87 e3       	ldi	r24, 0x37	; 55
     56c:	88 bd       	out	0x28, r24	; 40
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	80 93 4b 01 	sts	0x014B, r24
     574:	08 95       	ret

00000576 <turn_right>:
     576:	2d 9a       	sbi	0x05, 5	; 5
     578:	2e 98       	cbi	0x05, 6	; 5
     57a:	8c e3       	ldi	r24, 0x3C	; 60
     57c:	87 bd       	out	0x27, r24	; 39
     57e:	87 e3       	ldi	r24, 0x37	; 55
     580:	88 bd       	out	0x28, r24	; 40
     582:	81 e0       	ldi	r24, 0x01	; 1
     584:	80 93 4b 01 	sts	0x014B, r24
     588:	08 95       	ret

0000058a <drive_forward_left>:
     58a:	4f 92       	push	r4
     58c:	5f 92       	push	r5
     58e:	6f 92       	push	r6
     590:	7f 92       	push	r7
     592:	8f 92       	push	r8
     594:	9f 92       	push	r9
     596:	af 92       	push	r10
     598:	bf 92       	push	r11
     59a:	ef 92       	push	r14
     59c:	ff 92       	push	r15
     59e:	0f 93       	push	r16
     5a0:	1f 93       	push	r17
     5a2:	cf 93       	push	r28
     5a4:	df 93       	push	r29
     5a6:	00 91 09 01 	lds	r16, 0x0109
     5aa:	10 91 0a 01 	lds	r17, 0x010A
     5ae:	08 1b       	sub	r16, r24
     5b0:	19 0b       	sbc	r17, r25
     5b2:	c0 91 35 01 	lds	r28, 0x0135
     5b6:	d0 91 36 01 	lds	r29, 0x0136
     5ba:	ce 01       	movw	r24, r28
     5bc:	88 0f       	add	r24, r24
     5be:	99 1f       	adc	r25, r25
     5c0:	9c 01       	movw	r18, r24
     5c2:	28 56       	subi	r18, 0x68	; 104
     5c4:	3e 4f       	sbci	r19, 0xFE	; 254
     5c6:	79 01       	movw	r14, r18
     5c8:	d9 01       	movw	r26, r18
     5ca:	8d 91       	ld	r24, X+
     5cc:	9c 91       	ld	r25, X
     5ce:	b8 01       	movw	r22, r16
     5d0:	68 1b       	sub	r22, r24
     5d2:	79 0b       	sbc	r23, r25
     5d4:	07 2e       	mov	r0, r23
     5d6:	00 0c       	add	r0, r0
     5d8:	88 0b       	sbc	r24, r24
     5da:	99 0b       	sbc	r25, r25
     5dc:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     5e0:	4b 01       	movw	r8, r22
     5e2:	5c 01       	movw	r10, r24
     5e4:	60 93 37 01 	sts	0x0137, r22
     5e8:	70 93 38 01 	sts	0x0138, r23
     5ec:	80 93 39 01 	sts	0x0139, r24
     5f0:	90 93 3a 01 	sts	0x013A, r25
     5f4:	80 91 0d 01 	lds	r24, 0x010D
     5f8:	90 91 0e 01 	lds	r25, 0x010E
     5fc:	08 9f       	mul	r16, r24
     5fe:	b0 01       	movw	r22, r0
     600:	09 9f       	mul	r16, r25
     602:	70 0d       	add	r23, r0
     604:	18 9f       	mul	r17, r24
     606:	70 0d       	add	r23, r0
     608:	11 24       	eor	r1, r1
     60a:	07 2e       	mov	r0, r23
     60c:	00 0c       	add	r0, r0
     60e:	88 0b       	sbc	r24, r24
     610:	99 0b       	sbc	r25, r25
     612:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     616:	2b 01       	movw	r4, r22
     618:	3c 01       	movw	r6, r24
     61a:	60 91 0b 01 	lds	r22, 0x010B
     61e:	70 91 0c 01 	lds	r23, 0x010C
     622:	07 2e       	mov	r0, r23
     624:	00 0c       	add	r0, r0
     626:	88 0b       	sbc	r24, r24
     628:	99 0b       	sbc	r25, r25
     62a:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     62e:	9b 01       	movw	r18, r22
     630:	ac 01       	movw	r20, r24
     632:	c5 01       	movw	r24, r10
     634:	b4 01       	movw	r22, r8
     636:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <__mulsf3>
     63a:	9b 01       	movw	r18, r22
     63c:	ac 01       	movw	r20, r24
     63e:	c3 01       	movw	r24, r6
     640:	b2 01       	movw	r22, r4
     642:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__addsf3>
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	40 e2       	ldi	r20, 0x20	; 32
     64c:	51 e4       	ldi	r21, 0x41	; 65
     64e:	0e 94 ca 0b 	call	0x1794	; 0x1794 <__divsf3>
     652:	0e 94 32 0c 	call	0x1864	; 0x1864 <__fixsfsi>
     656:	fb 01       	movw	r30, r22
     658:	d7 01       	movw	r26, r14
     65a:	0d 93       	st	X+, r16
     65c:	1c 93       	st	X, r17
     65e:	21 96       	adiw	r28, 0x01	; 1
     660:	d0 93 36 01 	sts	0x0136, r29
     664:	c0 93 35 01 	sts	0x0135, r28
     668:	20 91 07 01 	lds	r18, 0x0107
     66c:	30 91 08 01 	lds	r19, 0x0108
     670:	c2 17       	cp	r28, r18
     672:	d3 07       	cpc	r29, r19
     674:	24 f0       	brlt	.+8      	; 0x67e <drive_forward_left+0xf4>
     676:	10 92 36 01 	sts	0x0136, r1
     67a:	10 92 35 01 	sts	0x0135, r1
     67e:	20 91 59 01 	lds	r18, 0x0159
     682:	30 91 5a 01 	lds	r19, 0x015A
     686:	44 27       	eor	r20, r20
     688:	55 27       	eor	r21, r21
     68a:	42 1b       	sub	r20, r18
     68c:	53 0b       	sbc	r21, r19
     68e:	4e 17       	cp	r20, r30
     690:	5f 07       	cpc	r21, r31
     692:	4c f4       	brge	.+18     	; 0x6a6 <drive_forward_left+0x11c>
     694:	e0 91 57 01 	lds	r30, 0x0157
     698:	f0 91 58 01 	lds	r31, 0x0158
     69c:	ab 01       	movw	r20, r22
     69e:	e6 17       	cp	r30, r22
     6a0:	f7 07       	cpc	r31, r23
     6a2:	0c f4       	brge	.+2      	; 0x6a6 <drive_forward_left+0x11c>
     6a4:	af 01       	movw	r20, r30
     6a6:	14 16       	cp	r1, r20
     6a8:	15 06       	cpc	r1, r21
     6aa:	4c f0       	brlt	.+18     	; 0x6be <drive_forward_left+0x134>
     6ac:	90 91 57 01 	lds	r25, 0x0157
     6b0:	98 bd       	out	0x28, r25	; 40
     6b2:	90 91 59 01 	lds	r25, 0x0159
     6b6:	89 2f       	mov	r24, r25
     6b8:	84 0f       	add	r24, r20
     6ba:	87 bd       	out	0x27, r24	; 39
     6bc:	06 c0       	rjmp	.+12     	; 0x6ca <drive_forward_left+0x140>
     6be:	27 bd       	out	0x27, r18	; 39
     6c0:	90 91 57 01 	lds	r25, 0x0157
     6c4:	89 2f       	mov	r24, r25
     6c6:	84 1b       	sub	r24, r20
     6c8:	88 bd       	out	0x28, r24	; 40
     6ca:	df 91       	pop	r29
     6cc:	cf 91       	pop	r28
     6ce:	1f 91       	pop	r17
     6d0:	0f 91       	pop	r16
     6d2:	ff 90       	pop	r15
     6d4:	ef 90       	pop	r14
     6d6:	bf 90       	pop	r11
     6d8:	af 90       	pop	r10
     6da:	9f 90       	pop	r9
     6dc:	8f 90       	pop	r8
     6de:	7f 90       	pop	r7
     6e0:	6f 90       	pop	r6
     6e2:	5f 90       	pop	r5
     6e4:	4f 90       	pop	r4
     6e6:	08 95       	ret

000006e8 <drive_forward>:
     6e8:	2e 98       	cbi	0x05, 6	; 5
     6ea:	2d 98       	cbi	0x05, 5	; 5
     6ec:	80 91 59 01 	lds	r24, 0x0159
     6f0:	87 bd       	out	0x27, r24	; 39
     6f2:	80 91 57 01 	lds	r24, 0x0157
     6f6:	88 bd       	out	0x28, r24	; 40
     6f8:	08 95       	ret

000006fa <stand_still>:
     6fa:	2e 98       	cbi	0x05, 6	; 5
     6fc:	2d 98       	cbi	0x05, 5	; 5
     6fe:	17 bc       	out	0x27, r1	; 39
     700:	18 bc       	out	0x28, r1	; 40
     702:	08 95       	ret

00000704 <linje>:
     704:	4f 92       	push	r4
     706:	5f 92       	push	r5
     708:	6f 92       	push	r6
     70a:	7f 92       	push	r7
     70c:	8f 92       	push	r8
     70e:	9f 92       	push	r9
     710:	af 92       	push	r10
     712:	bf 92       	push	r11
     714:	cf 92       	push	r12
     716:	df 92       	push	r13
     718:	ef 92       	push	r14
     71a:	ff 92       	push	r15
     71c:	f8 94       	cli
     71e:	60 91 1f 01 	lds	r22, 0x011F
     722:	70 91 20 01 	lds	r23, 0x0120
     726:	80 91 21 01 	lds	r24, 0x0121
     72a:	90 91 22 01 	lds	r25, 0x0122
     72e:	0e 94 32 0c 	call	0x1864	; 0x1864 <__fixsfsi>
     732:	78 94       	sei
     734:	20 91 2d 01 	lds	r18, 0x012D
     738:	30 91 2e 01 	lds	r19, 0x012E
     73c:	a9 01       	movw	r20, r18
     73e:	46 1b       	sub	r20, r22
     740:	57 0b       	sbc	r21, r23
     742:	ba 01       	movw	r22, r20
     744:	07 2e       	mov	r0, r23
     746:	00 0c       	add	r0, r0
     748:	88 0b       	sbc	r24, r24
     74a:	99 0b       	sbc	r25, r25
     74c:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     750:	6b 01       	movw	r12, r22
     752:	7c 01       	movw	r14, r24
     754:	60 93 29 01 	sts	0x0129, r22
     758:	70 93 2a 01 	sts	0x012A, r23
     75c:	80 93 2b 01 	sts	0x012B, r24
     760:	90 93 2c 01 	sts	0x012C, r25
     764:	20 91 23 01 	lds	r18, 0x0123
     768:	30 91 24 01 	lds	r19, 0x0124
     76c:	40 91 25 01 	lds	r20, 0x0125
     770:	50 91 26 01 	lds	r21, 0x0126
     774:	aa d7       	rcall	.+3924   	; 0x16ca <__subsf3>
     776:	4b 01       	movw	r8, r22
     778:	5c 01       	movw	r10, r24
     77a:	60 93 37 01 	sts	0x0137, r22
     77e:	70 93 38 01 	sts	0x0138, r23
     782:	80 93 39 01 	sts	0x0139, r24
     786:	90 93 3a 01 	sts	0x013A, r25
     78a:	60 91 02 01 	lds	r22, 0x0102
     78e:	70 91 03 01 	lds	r23, 0x0103
     792:	07 2e       	mov	r0, r23
     794:	00 0c       	add	r0, r0
     796:	88 0b       	sbc	r24, r24
     798:	99 0b       	sbc	r25, r25
     79a:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     79e:	9b 01       	movw	r18, r22
     7a0:	ac 01       	movw	r20, r24
     7a2:	c7 01       	movw	r24, r14
     7a4:	b6 01       	movw	r22, r12
     7a6:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <__mulsf3>
     7aa:	2b 01       	movw	r4, r22
     7ac:	3c 01       	movw	r6, r24
     7ae:	60 91 00 01 	lds	r22, 0x0100
     7b2:	70 91 01 01 	lds	r23, 0x0101
     7b6:	07 2e       	mov	r0, r23
     7b8:	00 0c       	add	r0, r0
     7ba:	88 0b       	sbc	r24, r24
     7bc:	99 0b       	sbc	r25, r25
     7be:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__floatsisf>
     7c2:	9b 01       	movw	r18, r22
     7c4:	ac 01       	movw	r20, r24
     7c6:	c5 01       	movw	r24, r10
     7c8:	b4 01       	movw	r22, r8
     7ca:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <__mulsf3>
     7ce:	9b 01       	movw	r18, r22
     7d0:	ac 01       	movw	r20, r24
     7d2:	c3 01       	movw	r24, r6
     7d4:	b2 01       	movw	r22, r4
     7d6:	7a d7       	rcall	.+3828   	; 0x16cc <__addsf3>
     7d8:	0e 94 32 0c 	call	0x1864	; 0x1864 <__fixsfsi>
     7dc:	9b 01       	movw	r18, r22
     7de:	70 93 28 01 	sts	0x0128, r23
     7e2:	60 93 27 01 	sts	0x0127, r22
     7e6:	c0 92 23 01 	sts	0x0123, r12
     7ea:	d0 92 24 01 	sts	0x0124, r13
     7ee:	e0 92 25 01 	sts	0x0125, r14
     7f2:	f0 92 26 01 	sts	0x0126, r15
     7f6:	40 91 49 01 	lds	r20, 0x0149
     7fa:	50 91 4a 01 	lds	r21, 0x014A
     7fe:	45 2b       	or	r20, r21
     800:	e9 f4       	brne	.+58     	; 0x83c <linje+0x138>
     802:	2e 9a       	sbi	0x05, 6	; 5
     804:	2d 9a       	sbi	0x05, 5	; 5
     806:	60 91 0f 01 	lds	r22, 0x010F
     80a:	70 91 10 01 	lds	r23, 0x0110
     80e:	66 0f       	add	r22, r22
     810:	77 1f       	adc	r23, r23
     812:	80 91 59 01 	lds	r24, 0x0159
     816:	90 91 5a 01 	lds	r25, 0x015A
     81a:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     81e:	67 bd       	out	0x27, r22	; 39
     820:	60 91 0f 01 	lds	r22, 0x010F
     824:	70 91 10 01 	lds	r23, 0x0110
     828:	66 0f       	add	r22, r22
     82a:	77 1f       	adc	r23, r23
     82c:	80 91 57 01 	lds	r24, 0x0157
     830:	90 91 58 01 	lds	r25, 0x0158
     834:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     838:	68 bd       	out	0x28, r22	; 40
     83a:	c3 c0       	rjmp	.+390    	; 0x9c2 <linje+0x2be>
     83c:	77 23       	and	r23, r23
     83e:	0c f0       	brlt	.+2      	; 0x842 <linje+0x13e>
     840:	57 c0       	rjmp	.+174    	; 0x8f0 <linje+0x1ec>
     842:	9b 01       	movw	r18, r22
     844:	77 23       	and	r23, r23
     846:	24 f4       	brge	.+8      	; 0x850 <linje+0x14c>
     848:	22 27       	eor	r18, r18
     84a:	33 27       	eor	r19, r19
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	80 91 57 01 	lds	r24, 0x0157
     854:	90 91 58 01 	lds	r25, 0x0158
     858:	60 91 0f 01 	lds	r22, 0x010F
     85c:	70 91 10 01 	lds	r23, 0x0110
     860:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     864:	26 17       	cp	r18, r22
     866:	37 07       	cpc	r19, r23
     868:	24 f1       	brlt	.+72     	; 0x8b2 <linje+0x1ae>
     86a:	2d 9a       	sbi	0x05, 5	; 5
     86c:	2e 98       	cbi	0x05, 6	; 5
     86e:	80 91 59 01 	lds	r24, 0x0159
     872:	90 91 5a 01 	lds	r25, 0x015A
     876:	60 91 0f 01 	lds	r22, 0x010F
     87a:	70 91 10 01 	lds	r23, 0x0110
     87e:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     882:	67 bd       	out	0x27, r22	; 39
     884:	80 91 27 01 	lds	r24, 0x0127
     888:	90 91 28 01 	lds	r25, 0x0128
     88c:	99 23       	and	r25, r25
     88e:	1c f4       	brge	.+6      	; 0x896 <linje+0x192>
     890:	91 95       	neg	r25
     892:	81 95       	neg	r24
     894:	91 09       	sbc	r25, r1
     896:	20 91 57 01 	lds	r18, 0x0157
     89a:	30 91 58 01 	lds	r19, 0x0158
     89e:	82 1b       	sub	r24, r18
     8a0:	93 0b       	sbc	r25, r19
     8a2:	60 91 0f 01 	lds	r22, 0x010F
     8a6:	70 91 10 01 	lds	r23, 0x0110
     8aa:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     8ae:	68 bd       	out	0x28, r22	; 40
     8b0:	88 c0       	rjmp	.+272    	; 0x9c2 <linje+0x2be>
     8b2:	2e 98       	cbi	0x05, 6	; 5
     8b4:	2d 98       	cbi	0x05, 5	; 5
     8b6:	80 91 59 01 	lds	r24, 0x0159
     8ba:	90 91 5a 01 	lds	r25, 0x015A
     8be:	60 91 0f 01 	lds	r22, 0x010F
     8c2:	70 91 10 01 	lds	r23, 0x0110
     8c6:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     8ca:	67 bd       	out	0x27, r22	; 39
     8cc:	20 91 57 01 	lds	r18, 0x0157
     8d0:	30 91 58 01 	lds	r19, 0x0158
     8d4:	80 91 27 01 	lds	r24, 0x0127
     8d8:	90 91 28 01 	lds	r25, 0x0128
     8dc:	82 0f       	add	r24, r18
     8de:	93 1f       	adc	r25, r19
     8e0:	60 91 0f 01 	lds	r22, 0x010F
     8e4:	70 91 10 01 	lds	r23, 0x0110
     8e8:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     8ec:	68 bd       	out	0x28, r22	; 40
     8ee:	69 c0       	rjmp	.+210    	; 0x9c2 <linje+0x2be>
     8f0:	16 16       	cp	r1, r22
     8f2:	17 06       	cpc	r1, r23
     8f4:	0c f0       	brlt	.+2      	; 0x8f8 <linje+0x1f4>
     8f6:	4b c0       	rjmp	.+150    	; 0x98e <linje+0x28a>
     8f8:	80 91 59 01 	lds	r24, 0x0159
     8fc:	90 91 5a 01 	lds	r25, 0x015A
     900:	60 91 0f 01 	lds	r22, 0x010F
     904:	70 91 10 01 	lds	r23, 0x0110
     908:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     90c:	26 17       	cp	r18, r22
     90e:	37 07       	cpc	r19, r23
     910:	fc f0       	brlt	.+62     	; 0x950 <linje+0x24c>
     912:	2e 9a       	sbi	0x05, 6	; 5
     914:	2d 98       	cbi	0x05, 5	; 5
     916:	80 91 57 01 	lds	r24, 0x0157
     91a:	90 91 58 01 	lds	r25, 0x0158
     91e:	60 91 0f 01 	lds	r22, 0x010F
     922:	70 91 10 01 	lds	r23, 0x0110
     926:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     92a:	68 bd       	out	0x28, r22	; 40
     92c:	80 91 27 01 	lds	r24, 0x0127
     930:	90 91 28 01 	lds	r25, 0x0128
     934:	20 91 59 01 	lds	r18, 0x0159
     938:	30 91 5a 01 	lds	r19, 0x015A
     93c:	82 1b       	sub	r24, r18
     93e:	93 0b       	sbc	r25, r19
     940:	60 91 0f 01 	lds	r22, 0x010F
     944:	70 91 10 01 	lds	r23, 0x0110
     948:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     94c:	67 bd       	out	0x27, r22	; 39
     94e:	39 c0       	rjmp	.+114    	; 0x9c2 <linje+0x2be>
     950:	2e 98       	cbi	0x05, 6	; 5
     952:	2d 98       	cbi	0x05, 5	; 5
     954:	80 91 57 01 	lds	r24, 0x0157
     958:	90 91 58 01 	lds	r25, 0x0158
     95c:	60 91 0f 01 	lds	r22, 0x010F
     960:	70 91 10 01 	lds	r23, 0x0110
     964:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     968:	68 bd       	out	0x28, r22	; 40
     96a:	80 91 59 01 	lds	r24, 0x0159
     96e:	90 91 5a 01 	lds	r25, 0x015A
     972:	20 91 27 01 	lds	r18, 0x0127
     976:	30 91 28 01 	lds	r19, 0x0128
     97a:	82 1b       	sub	r24, r18
     97c:	93 0b       	sbc	r25, r19
     97e:	60 91 0f 01 	lds	r22, 0x010F
     982:	70 91 10 01 	lds	r23, 0x0110
     986:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     98a:	67 bd       	out	0x27, r22	; 39
     98c:	1a c0       	rjmp	.+52     	; 0x9c2 <linje+0x2be>
     98e:	67 2b       	or	r22, r23
     990:	c1 f4       	brne	.+48     	; 0x9c2 <linje+0x2be>
     992:	2e 98       	cbi	0x05, 6	; 5
     994:	2d 98       	cbi	0x05, 5	; 5
     996:	80 91 59 01 	lds	r24, 0x0159
     99a:	90 91 5a 01 	lds	r25, 0x015A
     99e:	60 91 0f 01 	lds	r22, 0x010F
     9a2:	70 91 10 01 	lds	r23, 0x0110
     9a6:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     9aa:	67 bd       	out	0x27, r22	; 39
     9ac:	80 91 57 01 	lds	r24, 0x0157
     9b0:	90 91 58 01 	lds	r25, 0x0158
     9b4:	60 91 0f 01 	lds	r22, 0x010F
     9b8:	70 91 10 01 	lds	r23, 0x0110
     9bc:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     9c0:	68 bd       	out	0x28, r22	; 40
     9c2:	ff 90       	pop	r15
     9c4:	ef 90       	pop	r14
     9c6:	df 90       	pop	r13
     9c8:	cf 90       	pop	r12
     9ca:	bf 90       	pop	r11
     9cc:	af 90       	pop	r10
     9ce:	9f 90       	pop	r9
     9d0:	8f 90       	pop	r8
     9d2:	7f 90       	pop	r7
     9d4:	6f 90       	pop	r6
     9d6:	5f 90       	pop	r5
     9d8:	4f 90       	pop	r4
     9da:	08 95       	ret

000009dc <linje_main>:
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	90 93 10 01 	sts	0x0110, r25
     9e4:	80 93 0f 01 	sts	0x010F, r24
     9e8:	80 91 88 01 	lds	r24, 0x0188
     9ec:	81 50       	subi	r24, 0x01	; 1
     9ee:	83 30       	cpi	r24, 0x03	; 3
     9f0:	b8 f4       	brcc	.+46     	; 0xa20 <linje_main+0x44>
     9f2:	2a dc       	rcall	.-1964   	; 0x248 <linje_RGBsveng>
     9f4:	68 2f       	mov	r22, r24
     9f6:	88 0f       	add	r24, r24
     9f8:	77 0b       	sbc	r23, r23
     9fa:	88 0b       	sbc	r24, r24
     9fc:	99 0b       	sbc	r25, r25
     9fe:	65 d7       	rcall	.+3786   	; 0x18ca <__floatsisf>
     a00:	60 93 1f 01 	sts	0x011F, r22
     a04:	70 93 20 01 	sts	0x0120, r23
     a08:	80 93 21 01 	sts	0x0121, r24
     a0c:	90 93 22 01 	sts	0x0122, r25
     a10:	82 e0       	ldi	r24, 0x02	; 2
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	90 93 10 01 	sts	0x0110, r25
     a18:	80 93 0f 01 	sts	0x010F, r24
     a1c:	73 ce       	rjmp	.-794    	; 0x704 <linje>
     a1e:	08 95       	ret
     a20:	06 dd       	rcall	.-1524   	; 0x42e <detect_goal>
     a22:	88 23       	and	r24, r24
     a24:	79 f0       	breq	.+30     	; 0xa44 <linje_main+0x68>
     a26:	2f e1       	ldi	r18, 0x1F	; 31
     a28:	81 ea       	ldi	r24, 0xA1	; 161
     a2a:	97 e0       	ldi	r25, 0x07	; 7
     a2c:	21 50       	subi	r18, 0x01	; 1
     a2e:	80 40       	sbci	r24, 0x00	; 0
     a30:	90 40       	sbci	r25, 0x00	; 0
     a32:	e1 f7       	brne	.-8      	; 0xa2c <linje_main+0x50>
     a34:	00 c0       	rjmp	.+0      	; 0xa36 <linje_main+0x5a>
     a36:	00 00       	nop
     a38:	10 92 5c 01 	sts	0x015C, r1
     a3c:	10 92 5b 01 	sts	0x015B, r1
     a40:	59 9a       	sbi	0x0b, 1	; 11
     a42:	08 95       	ret
     a44:	61 dd       	rcall	.-1342   	; 0x508 <detect_labyrint>
     a46:	88 23       	and	r24, r24
     a48:	31 f0       	breq	.+12     	; 0xa56 <linje_main+0x7a>
     a4a:	58 9a       	sbi	0x0b, 0	; 11
     a4c:	10 92 5c 01 	sts	0x015C, r1
     a50:	10 92 5b 01 	sts	0x015B, r1
     a54:	08 95       	ret
     a56:	4b db       	rcall	.-2410   	; 0xee <linje_get_error>
     a58:	bc 01       	movw	r22, r24
     a5a:	99 0f       	add	r25, r25
     a5c:	88 0b       	sbc	r24, r24
     a5e:	99 0b       	sbc	r25, r25
     a60:	34 d7       	rcall	.+3688   	; 0x18ca <__floatsisf>
     a62:	60 93 1f 01 	sts	0x011F, r22
     a66:	70 93 20 01 	sts	0x0120, r23
     a6a:	80 93 21 01 	sts	0x0121, r24
     a6e:	90 93 22 01 	sts	0x0122, r25
     a72:	48 ce       	rjmp	.-880    	; 0x704 <linje>
     a74:	08 95       	ret

00000a76 <initengine>:
     a76:	84 b5       	in	r24, 0x24	; 36
     a78:	83 6a       	ori	r24, 0xA3	; 163
     a7a:	84 bd       	out	0x24, r24	; 36
     a7c:	17 bc       	out	0x27, r1	; 39
     a7e:	18 bc       	out	0x28, r1	; 40
     a80:	85 b5       	in	r24, 0x25	; 37
     a82:	83 60       	ori	r24, 0x03	; 3
     a84:	85 bd       	out	0x25, r24	; 37
     a86:	88 e7       	ldi	r24, 0x78	; 120
     a88:	84 b9       	out	0x04, r24	; 4
     a8a:	85 b1       	in	r24, 0x05	; 5
     a8c:	15 b8       	out	0x05, r1	; 5
     a8e:	08 95       	ret

00000a90 <timerinit>:
     a90:	83 e0       	ldi	r24, 0x03	; 3
     a92:	8a b9       	out	0x0a, r24	; 10
     a94:	e1 e8       	ldi	r30, 0x81	; 129
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	80 81       	ld	r24, Z
     a9a:	8d 60       	ori	r24, 0x0D	; 13
     a9c:	80 83       	st	Z, r24
     a9e:	80 ea       	ldi	r24, 0xA0	; 160
     aa0:	95 e0       	ldi	r25, 0x05	; 5
     aa2:	90 93 89 00 	sts	0x0089, r25
     aa6:	80 93 88 00 	sts	0x0088, r24
     aaa:	ef e6       	ldi	r30, 0x6F	; 111
     aac:	f0 e0       	ldi	r31, 0x00	; 0
     aae:	80 81       	ld	r24, Z
     ab0:	82 60       	ori	r24, 0x02	; 2
     ab2:	80 83       	st	Z, r24
     ab4:	b1 9a       	sbi	0x16, 1	; 22
     ab6:	08 95       	ret

00000ab8 <__vector_13>:
     ab8:	1f 92       	push	r1
     aba:	0f 92       	push	r0
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	0f 92       	push	r0
     ac0:	11 24       	eor	r1, r1
     ac2:	8f 93       	push	r24
     ac4:	9f 93       	push	r25
     ac6:	81 e0       	ldi	r24, 0x01	; 1
     ac8:	80 93 4c 01 	sts	0x014C, r24
     acc:	80 91 51 01 	lds	r24, 0x0151
     ad0:	90 91 52 01 	lds	r25, 0x0152
     ad4:	01 96       	adiw	r24, 0x01	; 1
     ad6:	82 33       	cpi	r24, 0x32	; 50
     ad8:	91 05       	cpc	r25, r1
     ada:	2c f4       	brge	.+10     	; 0xae6 <__vector_13+0x2e>
     adc:	90 93 52 01 	sts	0x0152, r25
     ae0:	80 93 51 01 	sts	0x0151, r24
     ae4:	06 c0       	rjmp	.+12     	; 0xaf2 <__vector_13+0x3a>
     ae6:	82 e3       	ldi	r24, 0x32	; 50
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	90 93 52 01 	sts	0x0152, r25
     aee:	80 93 51 01 	sts	0x0151, r24
     af2:	80 91 53 01 	lds	r24, 0x0153
     af6:	90 91 54 01 	lds	r25, 0x0154
     afa:	01 96       	adiw	r24, 0x01	; 1
     afc:	82 33       	cpi	r24, 0x32	; 50
     afe:	91 05       	cpc	r25, r1
     b00:	2c f4       	brge	.+10     	; 0xb0c <__vector_13+0x54>
     b02:	90 93 54 01 	sts	0x0154, r25
     b06:	80 93 53 01 	sts	0x0153, r24
     b0a:	06 c0       	rjmp	.+12     	; 0xb18 <__vector_13+0x60>
     b0c:	82 e3       	ldi	r24, 0x32	; 50
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	90 93 54 01 	sts	0x0154, r25
     b14:	80 93 53 01 	sts	0x0153, r24
     b18:	80 91 4f 01 	lds	r24, 0x014F
     b1c:	90 91 50 01 	lds	r25, 0x0150
     b20:	01 96       	adiw	r24, 0x01	; 1
     b22:	82 33       	cpi	r24, 0x32	; 50
     b24:	91 05       	cpc	r25, r1
     b26:	2c f4       	brge	.+10     	; 0xb32 <__vector_13+0x7a>
     b28:	90 93 50 01 	sts	0x0150, r25
     b2c:	80 93 4f 01 	sts	0x014F, r24
     b30:	06 c0       	rjmp	.+12     	; 0xb3e <__vector_13+0x86>
     b32:	82 e3       	ldi	r24, 0x32	; 50
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	90 93 50 01 	sts	0x0150, r25
     b3a:	80 93 4f 01 	sts	0x014F, r24
     b3e:	80 91 55 01 	lds	r24, 0x0155
     b42:	90 91 56 01 	lds	r25, 0x0156
     b46:	01 96       	adiw	r24, 0x01	; 1
     b48:	90 93 56 01 	sts	0x0156, r25
     b4c:	80 93 55 01 	sts	0x0155, r24
     b50:	9f 91       	pop	r25
     b52:	8f 91       	pop	r24
     b54:	0f 90       	pop	r0
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	0f 90       	pop	r0
     b5a:	1f 90       	pop	r1
     b5c:	18 95       	reti

00000b5e <interrupt_init>:
     b5e:	8d b3       	in	r24, 0x1d	; 29
     b60:	86 60       	ori	r24, 0x06	; 6
     b62:	8d bb       	out	0x1d, r24	; 29
     b64:	e9 e6       	ldi	r30, 0x69	; 105
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	80 81       	ld	r24, Z
     b6a:	88 62       	ori	r24, 0x28	; 40
     b6c:	80 83       	st	Z, r24
     b6e:	08 95       	ret

00000b70 <__vector_2>:
     b70:	1f 92       	push	r1
     b72:	0f 92       	push	r0
     b74:	0f b6       	in	r0, 0x3f	; 63
     b76:	0f 92       	push	r0
     b78:	11 24       	eor	r1, r1
     b7a:	8f 93       	push	r24
     b7c:	9f 93       	push	r25
     b7e:	80 91 5d 01 	lds	r24, 0x015D
     b82:	90 91 5e 01 	lds	r25, 0x015E
     b86:	01 97       	sbiw	r24, 0x01	; 1
     b88:	39 f4       	brne	.+14     	; 0xb98 <__vector_2+0x28>
     b8a:	10 92 5e 01 	sts	0x015E, r1
     b8e:	10 92 5d 01 	sts	0x015D, r1
     b92:	59 9a       	sbi	0x0b, 1	; 11
     b94:	58 98       	cbi	0x0b, 0	; 11
     b96:	0c c0       	rjmp	.+24     	; 0xbb0 <__vector_2+0x40>
     b98:	10 92 5c 01 	sts	0x015C, r1
     b9c:	10 92 5b 01 	sts	0x015B, r1
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	90 93 5e 01 	sts	0x015E, r25
     ba8:	80 93 5d 01 	sts	0x015D, r24
     bac:	58 9a       	sbi	0x0b, 0	; 11
     bae:	59 98       	cbi	0x0b, 1	; 11
     bb0:	e1 9a       	sbi	0x1c, 1	; 28
     bb2:	9f 91       	pop	r25
     bb4:	8f 91       	pop	r24
     bb6:	0f 90       	pop	r0
     bb8:	0f be       	out	0x3f, r0	; 63
     bba:	0f 90       	pop	r0
     bbc:	1f 90       	pop	r1
     bbe:	18 95       	reti

00000bc0 <__vector_3>:
     bc0:	1f 92       	push	r1
     bc2:	0f 92       	push	r0
     bc4:	0f b6       	in	r0, 0x3f	; 63
     bc6:	0f 92       	push	r0
     bc8:	11 24       	eor	r1, r1
     bca:	8f 93       	push	r24
     bcc:	9f 93       	push	r25
     bce:	80 91 5b 01 	lds	r24, 0x015B
     bd2:	90 91 5c 01 	lds	r25, 0x015C
     bd6:	89 2b       	or	r24, r25
     bd8:	39 f4       	brne	.+14     	; 0xbe8 <__vector_3+0x28>
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	90 93 5c 01 	sts	0x015C, r25
     be2:	80 93 5b 01 	sts	0x015B, r24
     be6:	04 c0       	rjmp	.+8      	; 0xbf0 <__vector_3+0x30>
     be8:	10 92 5c 01 	sts	0x015C, r1
     bec:	10 92 5b 01 	sts	0x015B, r1
     bf0:	e2 9a       	sbi	0x1c, 2	; 28
     bf2:	9f 91       	pop	r25
     bf4:	8f 91       	pop	r24
     bf6:	0f 90       	pop	r0
     bf8:	0f be       	out	0x3f, r0	; 63
     bfa:	0f 90       	pop	r0
     bfc:	1f 90       	pop	r1
     bfe:	18 95       	reti

00000c00 <i2c_setup>:
     c00:	88 23       	and	r24, r24
     c02:	69 f0       	breq	.+26     	; 0xc1e <i2c_setup+0x1e>
     c04:	3e 98       	cbi	0x07, 6	; 7
     c06:	3f 98       	cbi	0x07, 7	; 7
     c08:	e8 9a       	sbi	0x1d, 0	; 29
     c0a:	e9 e6       	ldi	r30, 0x69	; 105
     c0c:	f0 e0       	ldi	r31, 0x00	; 0
     c0e:	80 81       	ld	r24, Z
     c10:	83 60       	ori	r24, 0x03	; 3
     c12:	80 83       	st	Z, r24
     c14:	80 e1       	ldi	r24, 0x10	; 16
     c16:	80 93 b8 00 	sts	0x00B8, r24
     c1a:	10 92 b9 00 	sts	0x00B9, r1
     c1e:	08 95       	ret

00000c20 <i2c_send>:
     c20:	8f 92       	push	r8
     c22:	9f 92       	push	r9
     c24:	af 92       	push	r10
     c26:	bf 92       	push	r11
     c28:	cf 92       	push	r12
     c2a:	df 92       	push	r13
     c2c:	ef 92       	push	r14
     c2e:	ff 92       	push	r15
     c30:	0f 93       	push	r16
     c32:	1f 93       	push	r17
     c34:	cf 93       	push	r28
     c36:	df 93       	push	r29
     c38:	eb 01       	movw	r28, r22
     c3a:	08 81       	ld	r16, Y
     c3c:	02 95       	swap	r16
     c3e:	0f 70       	andi	r16, 0x0F	; 15
     c40:	10 e0       	ldi	r17, 0x00	; 0
     c42:	4b 01       	movw	r8, r22
     c44:	68 94       	set
     c46:	ee 24       	eor	r14, r14
     c48:	e3 f8       	bld	r14, 3
     c4a:	f1 2c       	mov	r15, r1
     c4c:	40 e0       	ldi	r20, 0x00	; 0
     c4e:	50 e0       	ldi	r21, 0x00	; 0
     c50:	ec eb       	ldi	r30, 0xBC	; 188
     c52:	f0 e0       	ldi	r31, 0x00	; 0
     c54:	0f 2e       	mov	r0, r31
     c56:	f4 ea       	ldi	r31, 0xA4	; 164
     c58:	df 2e       	mov	r13, r31
     c5a:	f0 2d       	mov	r31, r0
     c5c:	a9 eb       	ldi	r26, 0xB9	; 185
     c5e:	b0 e0       	ldi	r27, 0x00	; 0
     c60:	8e 7f       	andi	r24, 0xFE	; 254
     c62:	c8 2e       	mov	r12, r24
     c64:	6b eb       	ldi	r22, 0xBB	; 187
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	84 e8       	ldi	r24, 0x84	; 132
     c6a:	68 94       	set
     c6c:	aa 24       	eor	r10, r10
     c6e:	a4 f8       	bld	r10, 4
     c70:	b1 2c       	mov	r11, r1
     c72:	d0 82       	st	Z, r13
     c74:	90 81       	ld	r25, Z
     c76:	99 23       	and	r25, r25
     c78:	ec f7       	brge	.-6      	; 0xc74 <i2c_send+0x54>
     c7a:	2c 91       	ld	r18, X
     c7c:	28 7f       	andi	r18, 0xF8	; 248
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	2e 15       	cp	r18, r14
     c82:	3f 05       	cpc	r19, r15
     c84:	69 f5       	brne	.+90     	; 0xce0 <i2c_send+0xc0>
     c86:	eb 01       	movw	r28, r22
     c88:	c8 82       	st	Y, r12
     c8a:	80 83       	st	Z, r24
     c8c:	90 81       	ld	r25, Z
     c8e:	99 23       	and	r25, r25
     c90:	ec f7       	brge	.-6      	; 0xc8c <i2c_send+0x6c>
     c92:	9c 91       	ld	r25, X
     c94:	98 7f       	andi	r25, 0xF8	; 248
     c96:	98 31       	cpi	r25, 0x18	; 24
     c98:	29 f0       	breq	.+10     	; 0xca4 <i2c_send+0x84>
     c9a:	84 e9       	ldi	r24, 0x94	; 148
     c9c:	80 93 bc 00 	sts	0x00BC, r24
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	1f c0       	rjmp	.+62     	; 0xce2 <i2c_send+0xc2>
     ca4:	e4 01       	movw	r28, r8
     ca6:	99 91       	ld	r25, Y+
     ca8:	4e 01       	movw	r8, r28
     caa:	eb 01       	movw	r28, r22
     cac:	98 83       	st	Y, r25
     cae:	80 83       	st	Z, r24
     cb0:	90 81       	ld	r25, Z
     cb2:	99 23       	and	r25, r25
     cb4:	ec f7       	brge	.-6      	; 0xcb0 <i2c_send+0x90>
     cb6:	9c 91       	ld	r25, X
     cb8:	98 7f       	andi	r25, 0xF8	; 248
     cba:	98 32       	cpi	r25, 0x28	; 40
     cbc:	29 f0       	breq	.+10     	; 0xcc8 <i2c_send+0xa8>
     cbe:	84 e9       	ldi	r24, 0x94	; 148
     cc0:	80 93 bc 00 	sts	0x00BC, r24
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	0d c0       	rjmp	.+26     	; 0xce2 <i2c_send+0xc2>
     cc8:	4f 5f       	subi	r20, 0xFF	; 255
     cca:	5f 4f       	sbci	r21, 0xFF	; 255
     ccc:	ea 2c       	mov	r14, r10
     cce:	fb 2c       	mov	r15, r11
     cd0:	04 17       	cp	r16, r20
     cd2:	15 07       	cpc	r17, r21
     cd4:	74 f6       	brge	.-100    	; 0xc72 <i2c_send+0x52>
     cd6:	84 e9       	ldi	r24, 0x94	; 148
     cd8:	80 93 bc 00 	sts	0x00BC, r24
     cdc:	81 e0       	ldi	r24, 0x01	; 1
     cde:	01 c0       	rjmp	.+2      	; 0xce2 <i2c_send+0xc2>
     ce0:	80 e0       	ldi	r24, 0x00	; 0
     ce2:	df 91       	pop	r29
     ce4:	cf 91       	pop	r28
     ce6:	1f 91       	pop	r17
     ce8:	0f 91       	pop	r16
     cea:	ff 90       	pop	r15
     cec:	ef 90       	pop	r14
     cee:	df 90       	pop	r13
     cf0:	cf 90       	pop	r12
     cf2:	bf 90       	pop	r11
     cf4:	af 90       	pop	r10
     cf6:	9f 90       	pop	r9
     cf8:	8f 90       	pop	r8
     cfa:	08 95       	ret

00000cfc <req_gyro_turn>:
     cfc:	cf 93       	push	r28
     cfe:	df 93       	push	r29
     d00:	1f 92       	push	r1
     d02:	cd b7       	in	r28, 0x3d	; 61
     d04:	de b7       	in	r29, 0x3e	; 62
     d06:	87 e0       	ldi	r24, 0x07	; 7
     d08:	89 83       	std	Y+1, r24	; 0x01
     d0a:	be 01       	movw	r22, r28
     d0c:	6f 5f       	subi	r22, 0xFF	; 255
     d0e:	7f 4f       	sbci	r23, 0xFF	; 255
     d10:	86 e0       	ldi	r24, 0x06	; 6
     d12:	86 df       	rcall	.-244    	; 0xc20 <i2c_send>
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	80 93 4b 01 	sts	0x014B, r24
     d1a:	87 ea       	ldi	r24, 0xA7	; 167
     d1c:	91 e6       	ldi	r25, 0x61	; 97
     d1e:	01 97       	sbiw	r24, 0x01	; 1
     d20:	f1 f7       	brne	.-4      	; 0xd1e <req_gyro_turn+0x22>
     d22:	00 c0       	rjmp	.+0      	; 0xd24 <req_gyro_turn+0x28>
     d24:	00 00       	nop
     d26:	0f 90       	pop	r0
     d28:	df 91       	pop	r29
     d2a:	cf 91       	pop	r28
     d2c:	08 95       	ret

00000d2e <manual_drive>:
     d2e:	20 91 3d 01 	lds	r18, 0x013D
     d32:	30 91 3e 01 	lds	r19, 0x013E
     d36:	21 30       	cpi	r18, 0x01	; 1
     d38:	31 05       	cpc	r19, r1
     d3a:	49 f4       	brne	.+18     	; 0xd4e <manual_drive+0x20>
     d3c:	10 92 40 01 	sts	0x0140, r1
     d40:	10 92 3f 01 	sts	0x013F, r1
     d44:	10 92 3e 01 	sts	0x013E, r1
     d48:	10 92 3d 01 	sts	0x013D, r1
     d4c:	08 95       	ret
     d4e:	80 91 3b 01 	lds	r24, 0x013B
     d52:	90 91 3c 01 	lds	r25, 0x013C
     d56:	01 97       	sbiw	r24, 0x01	; 1
     d58:	71 f4       	brne	.+28     	; 0xd76 <manual_drive+0x48>
     d5a:	85 e0       	ldi	r24, 0x05	; 5
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	90 93 40 01 	sts	0x0140, r25
     d62:	80 93 3f 01 	sts	0x013F, r24
     d66:	80 91 3b 01 	lds	r24, 0x013B
     d6a:	90 91 3c 01 	lds	r25, 0x013C
     d6e:	00 97       	sbiw	r24, 0x00	; 0
     d70:	09 f0       	breq	.+2      	; 0xd74 <manual_drive+0x46>
     d72:	59 c0       	rjmp	.+178    	; 0xe26 <manual_drive+0xf8>
     d74:	4f c0       	rjmp	.+158    	; 0xe14 <manual_drive+0xe6>
     d76:	80 91 3f 01 	lds	r24, 0x013F
     d7a:	90 91 40 01 	lds	r25, 0x0140
     d7e:	00 97       	sbiw	r24, 0x00	; 0
     d80:	29 f4       	brne	.+10     	; 0xd8c <manual_drive+0x5e>
     d82:	2e 98       	cbi	0x05, 6	; 5
     d84:	2d 98       	cbi	0x05, 5	; 5
     d86:	17 bc       	out	0x27, r1	; 39
     d88:	18 bc       	out	0x28, r1	; 40
     d8a:	08 95       	ret
     d8c:	81 30       	cpi	r24, 0x01	; 1
     d8e:	91 05       	cpc	r25, r1
     d90:	49 f4       	brne	.+18     	; 0xda4 <manual_drive+0x76>
     d92:	2e 98       	cbi	0x05, 6	; 5
     d94:	2d 98       	cbi	0x05, 5	; 5
     d96:	80 91 59 01 	lds	r24, 0x0159
     d9a:	87 bd       	out	0x27, r24	; 39
     d9c:	80 91 57 01 	lds	r24, 0x0157
     da0:	88 bd       	out	0x28, r24	; 40
     da2:	08 95       	ret
     da4:	82 30       	cpi	r24, 0x02	; 2
     da6:	91 05       	cpc	r25, r1
     da8:	59 f4       	brne	.+22     	; 0xdc0 <manual_drive+0x92>
     daa:	85 b1       	in	r24, 0x05	; 5
     dac:	80 66       	ori	r24, 0x60	; 96
     dae:	85 b9       	out	0x05, r24	; 5
     db0:	80 91 59 01 	lds	r24, 0x0159
     db4:	8d 50       	subi	r24, 0x0D	; 13
     db6:	87 bd       	out	0x27, r24	; 39
     db8:	80 91 57 01 	lds	r24, 0x0157
     dbc:	88 bd       	out	0x28, r24	; 40
     dbe:	08 95       	ret
     dc0:	83 30       	cpi	r24, 0x03	; 3
     dc2:	91 05       	cpc	r25, r1
     dc4:	81 f4       	brne	.+32     	; 0xde6 <manual_drive+0xb8>
     dc6:	2e 98       	cbi	0x05, 6	; 5
     dc8:	2d 98       	cbi	0x05, 5	; 5
     dca:	80 91 59 01 	lds	r24, 0x0159
     dce:	87 bd       	out	0x27, r24	; 39
     dd0:	20 91 57 01 	lds	r18, 0x0157
     dd4:	90 91 58 01 	lds	r25, 0x0158
     dd8:	82 2f       	mov	r24, r18
     dda:	63 e0       	ldi	r22, 0x03	; 3
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	64 d6       	rcall	.+3272   	; 0x1aa8 <__divmodhi4>
     de0:	26 1b       	sub	r18, r22
     de2:	28 bd       	out	0x28, r18	; 40
     de4:	08 95       	ret
     de6:	84 30       	cpi	r24, 0x04	; 4
     de8:	91 05       	cpc	r25, r1
     dea:	81 f4       	brne	.+32     	; 0xe0c <manual_drive+0xde>
     dec:	2e 98       	cbi	0x05, 6	; 5
     dee:	2d 98       	cbi	0x05, 5	; 5
     df0:	20 91 59 01 	lds	r18, 0x0159
     df4:	90 91 5a 01 	lds	r25, 0x015A
     df8:	82 2f       	mov	r24, r18
     dfa:	63 e0       	ldi	r22, 0x03	; 3
     dfc:	70 e0       	ldi	r23, 0x00	; 0
     dfe:	54 d6       	rcall	.+3240   	; 0x1aa8 <__divmodhi4>
     e00:	26 1b       	sub	r18, r22
     e02:	27 bd       	out	0x27, r18	; 39
     e04:	80 91 57 01 	lds	r24, 0x0157
     e08:	88 bd       	out	0x28, r24	; 40
     e0a:	08 95       	ret
     e0c:	85 30       	cpi	r24, 0x05	; 5
     e0e:	91 05       	cpc	r25, r1
     e10:	a9 f4       	brne	.+42     	; 0xe3c <manual_drive+0x10e>
     e12:	26 c0       	rjmp	.+76     	; 0xe60 <manual_drive+0x132>
     e14:	73 df       	rcall	.-282    	; 0xcfc <req_gyro_turn>
     e16:	af db       	rcall	.-2210   	; 0x576 <turn_right>
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	90 93 3c 01 	sts	0x013C, r25
     e20:	80 93 3b 01 	sts	0x013B, r24
     e24:	08 95       	ret
     e26:	01 97       	sbiw	r24, 0x01	; 1
     e28:	09 f5       	brne	.+66     	; 0xe6c <manual_drive+0x13e>
     e2a:	10 92 40 01 	sts	0x0140, r1
     e2e:	10 92 3f 01 	sts	0x013F, r1
     e32:	10 92 3c 01 	sts	0x013C, r1
     e36:	10 92 3b 01 	sts	0x013B, r1
     e3a:	08 95       	ret
     e3c:	06 97       	sbiw	r24, 0x06	; 6
     e3e:	59 f4       	brne	.+22     	; 0xe56 <manual_drive+0x128>
     e40:	23 2b       	or	r18, r19
     e42:	a1 f4       	brne	.+40     	; 0xe6c <manual_drive+0x13e>
     e44:	5b df       	rcall	.-330    	; 0xcfc <req_gyro_turn>
     e46:	8d db       	rcall	.-2278   	; 0x562 <turn_left>
     e48:	81 e0       	ldi	r24, 0x01	; 1
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	90 93 3e 01 	sts	0x013E, r25
     e50:	80 93 3d 01 	sts	0x013D, r24
     e54:	08 95       	ret
     e56:	10 92 40 01 	sts	0x0140, r1
     e5a:	10 92 3f 01 	sts	0x013F, r1
     e5e:	08 95       	ret
     e60:	80 91 3b 01 	lds	r24, 0x013B
     e64:	90 91 3c 01 	lds	r25, 0x013C
     e68:	89 2b       	or	r24, r25
     e6a:	a1 f2       	breq	.-88     	; 0xe14 <manual_drive+0xe6>
     e6c:	08 95       	ret

00000e6e <PD_for_lab>:
     e6e:	2f 92       	push	r2
     e70:	3f 92       	push	r3
     e72:	4f 92       	push	r4
     e74:	5f 92       	push	r5
     e76:	6f 92       	push	r6
     e78:	7f 92       	push	r7
     e7a:	8f 92       	push	r8
     e7c:	9f 92       	push	r9
     e7e:	af 92       	push	r10
     e80:	bf 92       	push	r11
     e82:	cf 92       	push	r12
     e84:	df 92       	push	r13
     e86:	ef 92       	push	r14
     e88:	ff 92       	push	r15
     e8a:	0f 93       	push	r16
     e8c:	1f 93       	push	r17
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	cd b7       	in	r28, 0x3d	; 61
     e94:	de b7       	in	r29, 0x3e	; 62
     e96:	2a 97       	sbiw	r28, 0x0a	; 10
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	f8 94       	cli
     e9c:	de bf       	out	0x3e, r29	; 62
     e9e:	0f be       	out	0x3f, r0	; 63
     ea0:	cd bf       	out	0x3d, r28	; 61
     ea2:	4c 01       	movw	r8, r24
     ea4:	3a 01       	movw	r6, r20
     ea6:	e0 90 09 01 	lds	r14, 0x0109
     eaa:	f0 90 0a 01 	lds	r15, 0x010A
     eae:	c7 01       	movw	r24, r14
     eb0:	86 1b       	sub	r24, r22
     eb2:	97 0b       	sbc	r25, r23
     eb4:	9a 87       	std	Y+10, r25	; 0x0a
     eb6:	89 87       	std	Y+9, r24	; 0x09
     eb8:	40 90 35 01 	lds	r4, 0x0135
     ebc:	50 90 36 01 	lds	r5, 0x0136
     ec0:	a0 90 0d 01 	lds	r10, 0x010D
     ec4:	b0 90 0e 01 	lds	r11, 0x010E
     ec8:	60 91 0b 01 	lds	r22, 0x010B
     ecc:	70 91 0c 01 	lds	r23, 0x010C
     ed0:	07 2e       	mov	r0, r23
     ed2:	00 0c       	add	r0, r0
     ed4:	88 0b       	sbc	r24, r24
     ed6:	99 0b       	sbc	r25, r25
     ed8:	f8 d4       	rcall	.+2544   	; 0x18ca <__floatsisf>
     eda:	69 83       	std	Y+1, r22	; 0x01
     edc:	7a 83       	std	Y+2, r23	; 0x02
     ede:	8b 83       	std	Y+3, r24	; 0x03
     ee0:	9c 83       	std	Y+4, r25	; 0x04
     ee2:	e9 85       	ldd	r30, Y+9	; 0x09
     ee4:	fa 85       	ldd	r31, Y+10	; 0x0a
     ee6:	ea 9d       	mul	r30, r10
     ee8:	b0 01       	movw	r22, r0
     eea:	eb 9d       	mul	r30, r11
     eec:	70 0d       	add	r23, r0
     eee:	fa 9d       	mul	r31, r10
     ef0:	70 0d       	add	r23, r0
     ef2:	11 24       	eor	r1, r1
     ef4:	07 2e       	mov	r0, r23
     ef6:	00 0c       	add	r0, r0
     ef8:	88 0b       	sbc	r24, r24
     efa:	99 0b       	sbc	r25, r25
     efc:	e6 d4       	rcall	.+2508   	; 0x18ca <__floatsisf>
     efe:	6d 83       	std	Y+5, r22	; 0x05
     f00:	7e 83       	std	Y+6, r23	; 0x06
     f02:	8f 83       	std	Y+7, r24	; 0x07
     f04:	98 87       	std	Y+8, r25	; 0x08
     f06:	62 01       	movw	r12, r4
     f08:	cc 0c       	add	r12, r12
     f0a:	dd 1c       	adc	r13, r13
     f0c:	86 01       	movw	r16, r12
     f0e:	0e 59       	subi	r16, 0x9E	; 158
     f10:	1e 4f       	sbci	r17, 0xFE	; 254
     f12:	f8 01       	movw	r30, r16
     f14:	80 81       	ld	r24, Z
     f16:	91 81       	ldd	r25, Z+1	; 0x01
     f18:	69 85       	ldd	r22, Y+9	; 0x09
     f1a:	7a 85       	ldd	r23, Y+10	; 0x0a
     f1c:	68 1b       	sub	r22, r24
     f1e:	79 0b       	sbc	r23, r25
     f20:	07 2e       	mov	r0, r23
     f22:	00 0c       	add	r0, r0
     f24:	88 0b       	sbc	r24, r24
     f26:	99 0b       	sbc	r25, r25
     f28:	d0 d4       	rcall	.+2464   	; 0x18ca <__floatsisf>
     f2a:	29 81       	ldd	r18, Y+1	; 0x01
     f2c:	3a 81       	ldd	r19, Y+2	; 0x02
     f2e:	4b 81       	ldd	r20, Y+3	; 0x03
     f30:	5c 81       	ldd	r21, Y+4	; 0x04
     f32:	57 d5       	rcall	.+2734   	; 0x19e2 <__mulsf3>
     f34:	9b 01       	movw	r18, r22
     f36:	ac 01       	movw	r20, r24
     f38:	6d 81       	ldd	r22, Y+5	; 0x05
     f3a:	7e 81       	ldd	r23, Y+6	; 0x06
     f3c:	8f 81       	ldd	r24, Y+7	; 0x07
     f3e:	98 85       	ldd	r25, Y+8	; 0x08
     f40:	c5 d3       	rcall	.+1930   	; 0x16cc <__addsf3>
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	40 e2       	ldi	r20, 0x20	; 32
     f48:	51 e4       	ldi	r21, 0x41	; 65
     f4a:	24 d4       	rcall	.+2120   	; 0x1794 <__divsf3>
     f4c:	8b d4       	rcall	.+2326   	; 0x1864 <__fixsfsi>
     f4e:	1b 01       	movw	r2, r22
     f50:	70 93 97 01 	sts	0x0197, r23
     f54:	60 93 96 01 	sts	0x0196, r22
     f58:	89 85       	ldd	r24, Y+9	; 0x09
     f5a:	9a 85       	ldd	r25, Y+10	; 0x0a
     f5c:	f8 01       	movw	r30, r16
     f5e:	91 83       	std	Z+1, r25	; 0x01
     f60:	80 83       	st	Z, r24
     f62:	f7 01       	movw	r30, r14
     f64:	e8 19       	sub	r30, r8
     f66:	f9 09       	sbc	r31, r9
     f68:	fe 83       	std	Y+6, r31	; 0x06
     f6a:	ed 83       	std	Y+5, r30	; 0x05
     f6c:	f0 93 87 01 	sts	0x0187, r31
     f70:	e0 93 86 01 	sts	0x0186, r30
     f74:	86 01       	movw	r16, r12
     f76:	06 57       	subi	r16, 0x76	; 118
     f78:	1e 4f       	sbci	r17, 0xFE	; 254
     f7a:	f8 01       	movw	r30, r16
     f7c:	80 81       	ld	r24, Z
     f7e:	91 81       	ldd	r25, Z+1	; 0x01
     f80:	6d 81       	ldd	r22, Y+5	; 0x05
     f82:	7e 81       	ldd	r23, Y+6	; 0x06
     f84:	68 1b       	sub	r22, r24
     f86:	79 0b       	sbc	r23, r25
     f88:	07 2e       	mov	r0, r23
     f8a:	00 0c       	add	r0, r0
     f8c:	88 0b       	sbc	r24, r24
     f8e:	99 0b       	sbc	r25, r25
     f90:	9c d4       	rcall	.+2360   	; 0x18ca <__floatsisf>
     f92:	6b 01       	movw	r12, r22
     f94:	7c 01       	movw	r14, r24
     f96:	60 93 37 01 	sts	0x0137, r22
     f9a:	70 93 38 01 	sts	0x0138, r23
     f9e:	80 93 39 01 	sts	0x0139, r24
     fa2:	90 93 3a 01 	sts	0x013A, r25
     fa6:	8d 81       	ldd	r24, Y+5	; 0x05
     fa8:	9e 81       	ldd	r25, Y+6	; 0x06
     faa:	a8 9e       	mul	r10, r24
     fac:	b0 01       	movw	r22, r0
     fae:	a9 9e       	mul	r10, r25
     fb0:	70 0d       	add	r23, r0
     fb2:	b8 9e       	mul	r11, r24
     fb4:	70 0d       	add	r23, r0
     fb6:	11 24       	eor	r1, r1
     fb8:	07 2e       	mov	r0, r23
     fba:	00 0c       	add	r0, r0
     fbc:	88 0b       	sbc	r24, r24
     fbe:	99 0b       	sbc	r25, r25
     fc0:	84 d4       	rcall	.+2312   	; 0x18ca <__floatsisf>
     fc2:	4b 01       	movw	r8, r22
     fc4:	5c 01       	movw	r10, r24
     fc6:	a7 01       	movw	r20, r14
     fc8:	96 01       	movw	r18, r12
     fca:	69 81       	ldd	r22, Y+1	; 0x01
     fcc:	7a 81       	ldd	r23, Y+2	; 0x02
     fce:	8b 81       	ldd	r24, Y+3	; 0x03
     fd0:	9c 81       	ldd	r25, Y+4	; 0x04
     fd2:	07 d5       	rcall	.+2574   	; 0x19e2 <__mulsf3>
     fd4:	9b 01       	movw	r18, r22
     fd6:	ac 01       	movw	r20, r24
     fd8:	c5 01       	movw	r24, r10
     fda:	b4 01       	movw	r22, r8
     fdc:	77 d3       	rcall	.+1774   	; 0x16cc <__addsf3>
     fde:	20 e0       	ldi	r18, 0x00	; 0
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	40 e2       	ldi	r20, 0x20	; 32
     fe4:	51 e4       	ldi	r21, 0x41	; 65
     fe6:	d6 d3       	rcall	.+1964   	; 0x1794 <__divsf3>
     fe8:	3d d4       	rcall	.+2170   	; 0x1864 <__fixsfsi>
     fea:	9b 01       	movw	r18, r22
     fec:	70 93 7e 01 	sts	0x017E, r23
     ff0:	60 93 7d 01 	sts	0x017D, r22
     ff4:	8d 81       	ldd	r24, Y+5	; 0x05
     ff6:	9e 81       	ldd	r25, Y+6	; 0x06
     ff8:	f8 01       	movw	r30, r16
     ffa:	91 83       	std	Z+1, r25	; 0x01
     ffc:	80 83       	st	Z, r24
     ffe:	c2 01       	movw	r24, r4
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	90 93 36 01 	sts	0x0136, r25
    1006:	80 93 35 01 	sts	0x0135, r24
    100a:	40 91 07 01 	lds	r20, 0x0107
    100e:	50 91 08 01 	lds	r21, 0x0108
    1012:	84 17       	cp	r24, r20
    1014:	95 07       	cpc	r25, r21
    1016:	24 f0       	brlt	.+8      	; 0x1020 <PD_for_lab+0x1b2>
    1018:	10 92 36 01 	sts	0x0136, r1
    101c:	10 92 35 01 	sts	0x0135, r1
    1020:	33 23       	and	r19, r19
    1022:	2c f0       	brlt	.+10     	; 0x102e <PD_for_lab+0x1c0>
    1024:	10 92 7e 01 	sts	0x017E, r1
    1028:	10 92 7d 01 	sts	0x017D, r1
    102c:	11 c0       	rjmp	.+34     	; 0x1050 <PD_for_lab+0x1e2>
    102e:	87 b5       	in	r24, 0x27	; 39
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	91 95       	neg	r25
    1034:	81 95       	neg	r24
    1036:	91 09       	sbc	r25, r1
    1038:	82 17       	cp	r24, r18
    103a:	93 07       	cpc	r25, r19
    103c:	4c f0       	brlt	.+18     	; 0x1050 <PD_for_lab+0x1e2>
    103e:	87 b5       	in	r24, 0x27	; 39
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	91 95       	neg	r25
    1044:	81 95       	neg	r24
    1046:	91 09       	sbc	r25, r1
    1048:	90 93 7e 01 	sts	0x017E, r25
    104c:	80 93 7d 01 	sts	0x017D, r24
    1050:	33 20       	and	r3, r3
    1052:	2c f0       	brlt	.+10     	; 0x105e <PD_for_lab+0x1f0>
    1054:	10 92 97 01 	sts	0x0197, r1
    1058:	10 92 96 01 	sts	0x0196, r1
    105c:	11 c0       	rjmp	.+34     	; 0x1080 <PD_for_lab+0x212>
    105e:	88 b5       	in	r24, 0x28	; 40
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	91 95       	neg	r25
    1064:	81 95       	neg	r24
    1066:	91 09       	sbc	r25, r1
    1068:	82 15       	cp	r24, r2
    106a:	93 05       	cpc	r25, r3
    106c:	4c f0       	brlt	.+18     	; 0x1080 <PD_for_lab+0x212>
    106e:	88 b5       	in	r24, 0x28	; 40
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	91 95       	neg	r25
    1074:	81 95       	neg	r24
    1076:	91 09       	sbc	r25, r1
    1078:	90 93 97 01 	sts	0x0197, r25
    107c:	80 93 96 01 	sts	0x0196, r24
    1080:	90 e2       	ldi	r25, 0x20	; 32
    1082:	69 16       	cp	r6, r25
    1084:	71 04       	cpc	r7, r1
    1086:	1c f4       	brge	.+6      	; 0x108e <PD_for_lab+0x220>
    1088:	39 de       	rcall	.-910    	; 0xcfc <req_gyro_turn>
    108a:	75 da       	rcall	.-2838   	; 0x576 <turn_right>
    108c:	0c c0       	rjmp	.+24     	; 0x10a6 <PD_for_lab+0x238>
    108e:	90 91 7d 01 	lds	r25, 0x017D
    1092:	80 91 59 01 	lds	r24, 0x0159
    1096:	89 0f       	add	r24, r25
    1098:	87 bd       	out	0x27, r24	; 39
    109a:	90 91 96 01 	lds	r25, 0x0196
    109e:	80 91 57 01 	lds	r24, 0x0157
    10a2:	89 0f       	add	r24, r25
    10a4:	88 bd       	out	0x28, r24	; 40
    10a6:	2a 96       	adiw	r28, 0x0a	; 10
    10a8:	0f b6       	in	r0, 0x3f	; 63
    10aa:	f8 94       	cli
    10ac:	de bf       	out	0x3e, r29	; 62
    10ae:	0f be       	out	0x3f, r0	; 63
    10b0:	cd bf       	out	0x3d, r28	; 61
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	1f 91       	pop	r17
    10b8:	0f 91       	pop	r16
    10ba:	ff 90       	pop	r15
    10bc:	ef 90       	pop	r14
    10be:	df 90       	pop	r13
    10c0:	cf 90       	pop	r12
    10c2:	bf 90       	pop	r11
    10c4:	af 90       	pop	r10
    10c6:	9f 90       	pop	r9
    10c8:	8f 90       	pop	r8
    10ca:	7f 90       	pop	r7
    10cc:	6f 90       	pop	r6
    10ce:	5f 90       	pop	r5
    10d0:	4f 90       	pop	r4
    10d2:	3f 90       	pop	r3
    10d4:	2f 90       	pop	r2
    10d6:	08 95       	ret

000010d8 <oneway_turn_lab>:
    10d8:	fc 01       	movw	r30, r24
    10da:	90 91 33 01 	lds	r25, 0x0133
    10de:	91 11       	cpse	r25, r1
    10e0:	12 c0       	rjmp	.+36     	; 0x1106 <oneway_turn_lab+0x2e>
    10e2:	80 91 04 01 	lds	r24, 0x0104
    10e6:	90 91 05 01 	lds	r25, 0x0105
    10ea:	84 17       	cp	r24, r20
    10ec:	95 07       	cpc	r25, r21
    10ee:	24 f4       	brge	.+8      	; 0x10f8 <oneway_turn_lab+0x20>
    10f0:	fb da       	rcall	.-2570   	; 0x6e8 <drive_forward>
    10f2:	10 92 32 01 	sts	0x0132, r1
    10f6:	08 95       	ret
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	80 93 33 01 	sts	0x0133, r24
    10fe:	80 93 34 01 	sts	0x0134, r24
    1102:	fb ca       	rjmp	.-2570   	; 0x6fa <stand_still>
    1104:	08 95       	ret
    1106:	80 91 34 01 	lds	r24, 0x0134
    110a:	88 23       	and	r24, r24
    110c:	71 f0       	breq	.+28     	; 0x112a <oneway_turn_lab+0x52>
    110e:	2e 17       	cp	r18, r30
    1110:	3f 07       	cpc	r19, r31
    1112:	1c f4       	brge	.+6      	; 0x111a <oneway_turn_lab+0x42>
    1114:	f3 dd       	rcall	.-1050   	; 0xcfc <req_gyro_turn>
    1116:	25 da       	rcall	.-2998   	; 0x562 <turn_left>
    1118:	05 c0       	rjmp	.+10     	; 0x1124 <oneway_turn_lab+0x4c>
    111a:	26 17       	cp	r18, r22
    111c:	37 07       	cpc	r19, r23
    111e:	14 f4       	brge	.+4      	; 0x1124 <oneway_turn_lab+0x4c>
    1120:	ed dd       	rcall	.-1062   	; 0xcfc <req_gyro_turn>
    1122:	29 da       	rcall	.-2990   	; 0x576 <turn_right>
    1124:	10 92 34 01 	sts	0x0134, r1
    1128:	08 95       	ret
    112a:	80 91 32 01 	lds	r24, 0x0132
    112e:	81 11       	cpse	r24, r1
    1130:	05 c0       	rjmp	.+10     	; 0x113c <oneway_turn_lab+0x64>
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	80 93 32 01 	sts	0x0132, r24
    1138:	d7 ca       	rjmp	.-2642   	; 0x6e8 <drive_forward>
    113a:	08 95       	ret
    113c:	7f 97       	sbiw	r30, 0x1f	; 31
    113e:	3c f4       	brge	.+14     	; 0x114e <oneway_turn_lab+0x76>
    1140:	6f 31       	cpi	r22, 0x1F	; 31
    1142:	71 05       	cpc	r23, r1
    1144:	24 f4       	brge	.+8      	; 0x114e <oneway_turn_lab+0x76>
    1146:	10 92 30 01 	sts	0x0130, r1
    114a:	10 92 33 01 	sts	0x0133, r1
    114e:	08 95       	ret

00001150 <twoway_turn_right_lab>:
	}
}


//INTE KLAR + måste testas
void twoway_turn_right_lab(int distance_left,int distance_right,int distance_front,int st_value){// roboten kommer fram till ett vägskäl där den antingen kan svänga åt höger/vänster eller köra raktfram
    1150:	dc 01       	movw	r26, r24
	
	if(first_time){    //---kör fram i korsningen för att prepa sväng
    1152:	90 91 06 01 	lds	r25, 0x0106
    1156:	99 23       	and	r25, r25
    1158:	51 f0       	breq	.+20     	; 0x116e <twoway_turn_right_lab+0x1e>
		drive_forward();
    115a:	c6 da       	rcall	.-2676   	; 0x6e8 <drive_forward>
		turn_done = false;
    115c:	10 92 32 01 	sts	0x0132, r1
		first_time = false;
    1160:	10 92 06 01 	sts	0x0106, r1
		count_waypoint = 0;
    1164:	10 92 56 01 	sts	0x0156, r1
    1168:	10 92 55 01 	sts	0x0155, r1
    116c:	08 95       	ret
	}
	else if(!ongoing_turn && ++count_waypoint <=1){	// Roboten har kört ut i kurvan och signalerar att den är klar och svänga
    116e:	90 91 33 01 	lds	r25, 0x0133
    1172:	91 11       	cpse	r25, r1
    1174:	12 c0       	rjmp	.+36     	; 0x119a <twoway_turn_right_lab+0x4a>
    1176:	e0 91 55 01 	lds	r30, 0x0155
    117a:	f0 91 56 01 	lds	r31, 0x0156
    117e:	31 96       	adiw	r30, 0x01	; 1
    1180:	f0 93 56 01 	sts	0x0156, r31
    1184:	e0 93 55 01 	sts	0x0155, r30
    1188:	32 97       	sbiw	r30, 0x02	; 2
    118a:	3c f4       	brge	.+14     	; 0x119a <twoway_turn_right_lab+0x4a>
		ongoing_turn = true;
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	80 93 33 01 	sts	0x0133, r24
		start_turn = true;
    1192:	80 93 34 01 	sts	0x0134, r24
		stand_still();
    1196:	b1 ca       	rjmp	.-2718   	; 0x6fa <stand_still>
    1198:	08 95       	ret
	}
	
	else if(start_turn){				//Robot är inne i kurva och kontrollerar vilket håll den ska svänga
    119a:	80 91 34 01 	lds	r24, 0x0134
    119e:	88 23       	and	r24, r24
    11a0:	89 f0       	breq	.+34     	; 0x11c4 <twoway_turn_right_lab+0x74>
		
		if(RGB_data!=1){			//RGB säger inte att roboten ska svänga höger så den kör rakt fram
    11a2:	80 91 88 01 	lds	r24, 0x0188
    11a6:	81 30       	cpi	r24, 0x01	; 1
    11a8:	41 f0       	breq	.+16     	; 0x11ba <twoway_turn_right_lab+0x6a>
			drive_forward_left(distance_left);
    11aa:	cd 01       	movw	r24, r26
    11ac:	ee d9       	rcall	.-3108   	; 0x58a <drive_forward_left>
			turn_done = true;
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	80 93 32 01 	sts	0x0132, r24
			regler_against_wall = true;
    11b4:	80 93 31 01 	sts	0x0131, r24
    11b8:	02 c0       	rjmp	.+4      	; 0x11be <twoway_turn_right_lab+0x6e>
		}
		else {						//RGB säger att roboten ska svänga höger så högersväng inleds samt kall på Gyro för att kontrollera 90-grader
			req_gyro_turn();
    11ba:	a0 dd       	rcall	.-1216   	; 0xcfc <req_gyro_turn>
			turn_right();
    11bc:	dc d9       	rcall	.-3144   	; 0x576 <turn_right>
		}
		
		start_turn = false;				// Signalerar att sväng har	inledits för att inte gå in i denna if igen
    11be:	10 92 34 01 	sts	0x0134, r1
    11c2:	08 95       	ret
	}
	
	else if(RGB_data != 1 && distance_left < st_value && distance_right < st_value && distance_front > st_value){	//Roboten har kört igenom kurvan och återgår till vanlig reglering
    11c4:	80 91 88 01 	lds	r24, 0x0188
    11c8:	81 30       	cpi	r24, 0x01	; 1
    11ca:	81 f0       	breq	.+32     	; 0x11ec <twoway_turn_right_lab+0x9c>
    11cc:	a2 17       	cp	r26, r18
    11ce:	b3 07       	cpc	r27, r19
    11d0:	6c f4       	brge	.+26     	; 0x11ec <twoway_turn_right_lab+0x9c>
    11d2:	62 17       	cp	r22, r18
    11d4:	73 07       	cpc	r23, r19
    11d6:	54 f4       	brge	.+20     	; 0x11ec <twoway_turn_right_lab+0x9c>
    11d8:	24 17       	cp	r18, r20
    11da:	35 07       	cpc	r19, r21
    11dc:	3c f4       	brge	.+14     	; 0x11ec <twoway_turn_right_lab+0x9c>
		twoway_turn_right = false;
    11de:	10 92 2f 01 	sts	0x012F, r1
		first_time = false;
    11e2:	10 92 06 01 	sts	0x0106, r1
		ongoing_turn = false;
    11e6:	10 92 33 01 	sts	0x0133, r1
    11ea:	08 95       	ret
	}
	
	//
	
	
	else if(regler_against_wall && (distance_right > st_value )){
    11ec:	e0 91 31 01 	lds	r30, 0x0131
    11f0:	ee 23       	and	r30, r30
    11f2:	31 f0       	breq	.+12     	; 0x1200 <twoway_turn_right_lab+0xb0>
    11f4:	26 17       	cp	r18, r22
    11f6:	37 07       	cpc	r19, r23
    11f8:	1c f4       	brge	.+6      	; 0x1200 <twoway_turn_right_lab+0xb0>
		drive_forward_left(distance_left);
    11fa:	cd 01       	movw	r24, r26
    11fc:	c6 c9       	rjmp	.-3188   	; 0x58a <drive_forward_left>
    11fe:	08 95       	ret
	}
	
	else if(ongoing_turn && RGB_data == 1 && !turn_done){ //RGB sensor visar på att vi ska svänga vänster och RGB säger att vi roterat 90-grader	
    1200:	99 23       	and	r25, r25
    1202:	69 f0       	breq	.+26     	; 0x121e <twoway_turn_right_lab+0xce>
    1204:	81 30       	cpi	r24, 0x01	; 1
    1206:	59 f4       	brne	.+22     	; 0x121e <twoway_turn_right_lab+0xce>
    1208:	80 91 32 01 	lds	r24, 0x0132
    120c:	81 11       	cpse	r24, r1
    120e:	0b c0       	rjmp	.+22     	; 0x1226 <twoway_turn_right_lab+0xd6>
		turn_done = true;
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	80 93 32 01 	sts	0x0132, r24
		//count_waypoint = 0;			//counter som används för att roboten ska köra i 0.5 sek för att komma ur kurvor 
		RGB_data = 0;				// RGB värdet nollsätts för att kunna kontrollera för nästa kurva
    1216:	10 92 88 01 	sts	0x0188, r1
		drive_forward();			// motorerna kör framåt för att komma ur kurvan
    121a:	66 ca       	rjmp	.-2868   	; 0x6e8 <drive_forward>
    121c:	08 95       	ret
	}
	
	else if(turn_done && distance_left < st_value && distance_right < st_value && distance_front > st_value){	//sväng är klar och roboten har kört ur kurvan, återgå till vanlig PD-reglering
    121e:	80 91 32 01 	lds	r24, 0x0132
    1222:	88 23       	and	r24, r24
    1224:	91 f0       	breq	.+36     	; 0x124a <twoway_turn_right_lab+0xfa>
    1226:	a2 17       	cp	r26, r18
    1228:	b3 07       	cpc	r27, r19
    122a:	7c f4       	brge	.+30     	; 0x124a <twoway_turn_right_lab+0xfa>
    122c:	62 17       	cp	r22, r18
    122e:	73 07       	cpc	r23, r19
    1230:	64 f4       	brge	.+24     	; 0x124a <twoway_turn_right_lab+0xfa>
    1232:	24 17       	cp	r18, r20
    1234:	35 07       	cpc	r19, r21
    1236:	4c f4       	brge	.+18     	; 0x124a <twoway_turn_right_lab+0xfa>
		twoway_turn_right = false;
    1238:	10 92 2f 01 	sts	0x012F, r1
		ongoing_turn = false;
    123c:	10 92 33 01 	sts	0x0133, r1
		first_time = true;
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	80 93 06 01 	sts	0x0106, r24
		regler_against_wall = false;
    1246:	10 92 31 01 	sts	0x0131, r1
    124a:	08 95       	ret

0000124c <labyreg>:
int sensor_left;
int sensor_right;

                 
void labyreg(){
	cli();
    124c:	f8 94       	cli
	int sensor_front_tmp = distans_fram;
    124e:	40 91 81 01 	lds	r20, 0x0181
    1252:	50 e0       	ldi	r21, 0x00	; 0
	int sensor_right_tmp = distans_right;
    1254:	60 91 89 01 	lds	r22, 0x0189
    1258:	70 e0       	ldi	r23, 0x00	; 0
	int sensor_left_tmp = distans_left;
    125a:	80 91 84 01 	lds	r24, 0x0184
    125e:	90 e0       	ldi	r25, 0x00	; 0
	sei();
    1260:	78 94       	sei
	/*
	if(waypoint){
		waypoint_lab(sensor_left_tmp,sensor_right_tmp,sensor_front_tmp,st_value);
		return;	
	}
	else*/ if(oneway_turn){
    1262:	20 91 30 01 	lds	r18, 0x0130
    1266:	22 23       	and	r18, r18
    1268:	21 f0       	breq	.+8      	; 0x1272 <labyreg+0x26>
		oneway_turn_lab(sensor_left_tmp,sensor_right_tmp,sensor_front_tmp,st_value);
    126a:	28 e2       	ldi	r18, 0x28	; 40
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	34 cf       	rjmp	.-408    	; 0x10d8 <oneway_turn_lab>
		return;
    1270:	08 95       	ret
	}/*
	else if(twoway_turn_left){
		twoway_turn_left_lab(sensor_left_tmp,sensor_right_tmp,sensor_front_tmp,st_value);
		return;
	}*/
	else if(twoway_turn_right){
    1272:	20 91 2f 01 	lds	r18, 0x012F
    1276:	22 23       	and	r18, r18
    1278:	21 f0       	breq	.+8      	; 0x1282 <labyreg+0x36>
		twoway_turn_right_lab(sensor_left_tmp,sensor_right_tmp,sensor_front_tmp,st_value);
    127a:	28 e2       	ldi	r18, 0x28	; 40
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	68 cf       	rjmp	.-304    	; 0x1150 <twoway_turn_right_lab>
		return;
    1280:	08 95       	ret
	}
	
	
	// Normalfall
	if(sensor_left_tmp < st_value &&/* sensor_front_tmp > st_value && */sensor_right_tmp < st_value)
    1282:	88 32       	cpi	r24, 0x28	; 40
    1284:	91 05       	cpc	r25, r1
    1286:	64 f4       	brge	.+24     	; 0x12a0 <labyreg+0x54>
    1288:	68 32       	cpi	r22, 0x28	; 40
    128a:	71 05       	cpc	r23, r1
    128c:	14 f4       	brge	.+4      	; 0x1292 <labyreg+0x46>
		PD_for_lab(sensor_left_tmp, sensor_right_tmp, sensor_front_tmp);
    128e:	ef cd       	rjmp	.-1058   	; 0xe6e <PD_for_lab>
    1290:	08 95       	ret
	//Enkelsväng	
	else if(((sensor_left_tmp < st_value && sensor_front_tmp < 60 && sensor_right_tmp > st_value) 
    1292:	4c 33       	cpi	r20, 0x3C	; 60
    1294:	51 05       	cpc	r21, r1
    1296:	a4 f4       	brge	.+40     	; 0x12c0 <labyreg+0x74>
    1298:	69 32       	cpi	r22, 0x29	; 41
    129a:	71 05       	cpc	r23, r1
    129c:	8c f0       	brlt	.+34     	; 0x12c0 <labyreg+0x74>
    129e:	09 c0       	rjmp	.+18     	; 0x12b2 <labyreg+0x66>
		|| (sensor_left_tmp > st_value && sensor_front_tmp < 60 && sensor_right_tmp < st_value)))	{
    12a0:	89 32       	cpi	r24, 0x29	; 41
    12a2:	91 05       	cpc	r25, r1
    12a4:	6c f0       	brlt	.+26     	; 0x12c0 <labyreg+0x74>
    12a6:	4c 33       	cpi	r20, 0x3C	; 60
    12a8:	51 05       	cpc	r21, r1
    12aa:	54 f4       	brge	.+20     	; 0x12c0 <labyreg+0x74>
    12ac:	68 32       	cpi	r22, 0x28	; 40
    12ae:	71 05       	cpc	r23, r1
    12b0:	3c f4       	brge	.+14     	; 0x12c0 <labyreg+0x74>
		oneway_turn_lab(sensor_left_tmp,sensor_right_tmp,sensor_front_tmp,st_value);
    12b2:	28 e2       	ldi	r18, 0x28	; 40
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	10 df       	rcall	.-480    	; 0x10d8 <oneway_turn_lab>
		oneway_turn = true;
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	80 93 30 01 	sts	0x0130, r24
    12be:	08 95       	ret
	/*else if(sensor_left_tmp < st_value && sensor_front_tmp > st_value && sensor_right_tmp > st_value){
		twoway_turn_right_lab(sensor_left_tmp,sensor_right_tmp,sensor_front_tmp,st_value);
		twoway_turn_right = true;
	}*/
	else{
		motor_left = 0;
    12c0:	17 bc       	out	0x27, r1	; 39
		motor_right = 0;	
    12c2:	18 bc       	out	0x28, r1	; 40
    12c4:	08 95       	ret

000012c6 <regulator>:
		//motor_left = 70;
		//motor_right = 60;
		//PORTB &= ~(1 << motor_dir_right);								// Set motor direction to forward
		//PORTB |= (1 << motor_dir_left);									// Set motor direction to backward
//	}
	if((regulator_mode == 1) && (regler_ready_linje == 1)){
    12c6:	80 91 11 01 	lds	r24, 0x0111
    12ca:	90 91 12 01 	lds	r25, 0x0112
    12ce:	81 30       	cpi	r24, 0x01	; 1
    12d0:	91 05       	cpc	r25, r1
    12d2:	61 f4       	brne	.+24     	; 0x12ec <regulator+0x26>
    12d4:	80 91 4d 01 	lds	r24, 0x014D
    12d8:	90 91 4e 01 	lds	r25, 0x014E
    12dc:	01 97       	sbiw	r24, 0x01	; 1
    12de:	89 f4       	brne	.+34     	; 0x1302 <regulator+0x3c>
		linje_main();
    12e0:	7d db       	rcall	.-2310   	; 0x9dc <linje_main>
		regler_ready_linje = 0;
    12e2:	10 92 4e 01 	sts	0x014E, r1
    12e6:	10 92 4d 01 	sts	0x014D, r1
    12ea:	08 95       	ret
	}

	else if(regulator_mode == 0){	
    12ec:	89 2b       	or	r24, r25
    12ee:	49 f4       	brne	.+18     	; 0x1302 <regulator+0x3c>
		
		PORTB &= ~(1 << motor_dir_right);								// Set motor direction to forward
    12f0:	2d 98       	cbi	0x05, 5	; 5
		PORTB &= ~(1 << motor_dir_left);	
    12f2:	2e 98       	cbi	0x05, 6	; 5
		if(updaterad_labyrint){
    12f4:	80 91 4c 01 	lds	r24, 0x014C
    12f8:	88 23       	and	r24, r24
    12fa:	19 f0       	breq	.+6      	; 0x1302 <regulator+0x3c>
			updaterad_labyrint = false;
    12fc:	10 92 4c 01 	sts	0x014C, r1
			labyreg();//kalla pÃ¥ labyrint funktion
    1300:	a5 cf       	rjmp	.-182    	; 0x124c <labyreg>
    1302:	08 95       	ret

00001304 <i2c_recive>:
	byte* data;
	int counter=0;
	int start =TW_START;
	//int size = 0;

	TWCR |= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//START
    1304:	ec eb       	ldi	r30, 0xBC	; 188
    1306:	f0 e0       	ldi	r31, 0x00	; 0
    1308:	90 81       	ld	r25, Z
    130a:	94 6a       	ori	r25, 0xA4	; 164
    130c:	90 83       	st	Z, r25
	while(!(TWCR & (1<<TWINT))); //Wait for TWINT, START is now sent
    130e:	90 81       	ld	r25, Z
    1310:	99 23       	and	r25, r25
    1312:	ec f7       	brge	.-6      	; 0x130e <i2c_recive+0xa>
	if((TWSR & 0xF8) != start) // om status en start eventuellt bara tw_start
    1314:	90 91 b9 00 	lds	r25, 0x00B9
    1318:	98 7f       	andi	r25, 0xF8	; 248
    131a:	98 30       	cpi	r25, 0x08	; 8
    131c:	29 f0       	breq	.+10     	; 0x1328 <i2c_recive+0x24>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
    131e:	84 e9       	ldi	r24, 0x94	; 148
    1320:	80 93 bc 00 	sts	0x00BC, r24
		return false;
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	08 95       	ret
	}
	TWDR = prossesor | 0x01;	//adress och Read 
    1328:	81 60       	ori	r24, 0x01	; 1
    132a:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT)|(1<<TWEN);
    132e:	84 e8       	ldi	r24, 0x84	; 132
    1330:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT))); // wait for SLA+R transmited and ACK/NACK recived
    1334:	ec eb       	ldi	r30, 0xBC	; 188
    1336:	f0 e0       	ldi	r31, 0x00	; 0
    1338:	80 81       	ld	r24, Z
    133a:	88 23       	and	r24, r24
    133c:	ec f7       	brge	.-6      	; 0x1338 <i2c_recive+0x34>
	if((TWSR & 0xF8) != TW_MR_SLA_ACK) // om slav adress har skickats och ack har fåtts
    133e:	80 91 b9 00 	lds	r24, 0x00B9
    1342:	88 7f       	andi	r24, 0xF8	; 248
    1344:	80 34       	cpi	r24, 0x40	; 64
    1346:	29 f0       	breq	.+10     	; 0x1352 <i2c_recive+0x4e>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
    1348:	84 e9       	ldi	r24, 0x94	; 148
    134a:	80 93 bc 00 	sts	0x00BC, r24
		return false;
    134e:	80 e0       	ldi	r24, 0x00	; 0
    1350:	08 95       	ret
	}
	
	TWCR |= (1<<TWINT)|(1<<TWEN);
    1352:	ec eb       	ldi	r30, 0xBC	; 188
    1354:	f0 e0       	ldi	r31, 0x00	; 0
    1356:	80 81       	ld	r24, Z
    1358:	84 68       	ori	r24, 0x84	; 132
    135a:	80 83       	st	Z, r24
	while(!(TWCR & (1<<TWINT)));
    135c:	80 81       	ld	r24, Z
    135e:	88 23       	and	r24, r24
    1360:	ec f7       	brge	.-6      	; 0x135c <i2c_recive+0x58>
	}*/
	/*if(counter == 0){
		data = data[(TWDR>>4) & 0x0f];
		size= (TWDR>>4) & 0x0f;
	}*/
	data = TWDR; //ta emot data 
    1362:	80 91 bb 00 	lds	r24, 0x00BB
	counter++;	
	start=TW_REP_START;
	//TWCR = (1<<TWINT);
	//while(!(TWCR & (1<<TWINT)));
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
    1366:	94 e9       	ldi	r25, 0x94	; 148
    1368:	90 93 bc 00 	sts	0x00BC, r25
	return data;
}
    136c:	08 95       	ret

0000136e <i2c_store_data>:

void i2c_store_data(byte data) //bygger ihop data till en aray liknande den som blev skickad och sätter flaggan i2c_newdata då all data i ett paket motaget
{
	static int counter;
	static int size;
	if(counter == 0){ //om första databiten ta ut mängd data som kommer komma 
    136e:	20 91 16 01 	lds	r18, 0x0116
    1372:	30 91 17 01 	lds	r19, 0x0117
    1376:	21 15       	cp	r18, r1
    1378:	31 05       	cpc	r19, r1
    137a:	89 f4       	brne	.+34     	; 0x139e <i2c_store_data+0x30>
		size = (data>>4) & 0x0f;
    137c:	28 2f       	mov	r18, r24
    137e:	22 95       	swap	r18
    1380:	2f 70       	andi	r18, 0x0F	; 15
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	30 93 15 01 	sts	0x0115, r19
    1388:	20 93 14 01 	sts	0x0114, r18
		i2c_data[counter] = data;
    138c:	80 93 6c 01 	sts	0x016C, r24
		counter++;
    1390:	81 e0       	ldi	r24, 0x01	; 1
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	90 93 17 01 	sts	0x0117, r25
    1398:	80 93 16 01 	sts	0x0116, r24
    139c:	18 c0       	rjmp	.+48     	; 0x13ce <i2c_store_data+0x60>
	}
	else if(counter < size+1){ //fyll på arayen med data
    139e:	40 91 14 01 	lds	r20, 0x0114
    13a2:	50 91 15 01 	lds	r21, 0x0115
    13a6:	4f 5f       	subi	r20, 0xFF	; 255
    13a8:	5f 4f       	sbci	r21, 0xFF	; 255
    13aa:	24 17       	cp	r18, r20
    13ac:	35 07       	cpc	r19, r21
    13ae:	5c f4       	brge	.+22     	; 0x13c6 <i2c_store_data+0x58>
		i2c_data[counter] = data;
    13b0:	f9 01       	movw	r30, r18
    13b2:	e4 59       	subi	r30, 0x94	; 148
    13b4:	fe 4f       	sbci	r31, 0xFE	; 254
    13b6:	80 83       	st	Z, r24
		counter++;
    13b8:	2f 5f       	subi	r18, 0xFF	; 255
    13ba:	3f 4f       	sbci	r19, 0xFF	; 255
    13bc:	30 93 17 01 	sts	0x0117, r19
    13c0:	20 93 16 01 	sts	0x0116, r18
    13c4:	04 c0       	rjmp	.+8      	; 0x13ce <i2c_store_data+0x60>
	}
	else{
		i2c_data[counter] = data;
    13c6:	f9 01       	movw	r30, r18
    13c8:	e4 59       	subi	r30, 0x94	; 148
    13ca:	fe 4f       	sbci	r31, 0xFE	; 254
    13cc:	80 83       	st	Z, r24
	}
	if(counter>=size+1){ // aray färdig all data motagen
    13ce:	80 91 14 01 	lds	r24, 0x0114
    13d2:	90 91 15 01 	lds	r25, 0x0115
    13d6:	01 96       	adiw	r24, 0x01	; 1
    13d8:	20 91 16 01 	lds	r18, 0x0116
    13dc:	30 91 17 01 	lds	r19, 0x0117
    13e0:	28 17       	cp	r18, r24
    13e2:	39 07       	cpc	r19, r25
    13e4:	44 f0       	brlt	.+16     	; 0x13f6 <i2c_store_data+0x88>
		i2c_newdata = true;
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	80 93 1e 01 	sts	0x011E, r24
		counter = 0;
    13ec:	10 92 17 01 	sts	0x0117, r1
    13f0:	10 92 16 01 	sts	0x0116, r1
		EIMSK &= ~(1<<INT0);
    13f4:	e8 98       	cbi	0x1d, 0	; 29
    13f6:	08 95       	ret

000013f8 <__vector_1>:
byte i2c_data[15];
bool i2c_newdata=false;
int Reflex_data;
//aidshub was here
ISR(INT0_vect)// händer om annan processor kör request to send
{	
    13f8:	1f 92       	push	r1
    13fa:	0f 92       	push	r0
    13fc:	0f b6       	in	r0, 0x3f	; 63
    13fe:	0f 92       	push	r0
    1400:	11 24       	eor	r1, r1
    1402:	0b b6       	in	r0, 0x3b	; 59
    1404:	0f 92       	push	r0
    1406:	2f 93       	push	r18
    1408:	3f 93       	push	r19
    140a:	4f 93       	push	r20
    140c:	5f 93       	push	r21
    140e:	6f 93       	push	r22
    1410:	7f 93       	push	r23
    1412:	8f 93       	push	r24
    1414:	9f 93       	push	r25
    1416:	af 93       	push	r26
    1418:	bf 93       	push	r27
    141a:	ef 93       	push	r30
    141c:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    141e:	00 00       	nop
	_delay_us(1);
	if (PINC&(1<< PC6)){	//komunikation vill skicka
    1420:	36 9b       	sbis	0x06, 6	; 6
    1422:	04 c0       	rjmp	.+8      	; 0x142c <__vector_1+0x34>
		i2c_store_data(i2c_recive(0x02)); // adress processor 1
    1424:	82 e0       	ldi	r24, 0x02	; 2
    1426:	6e df       	rcall	.-292    	; 0x1304 <i2c_recive>
    1428:	a2 df       	rcall	.-188    	; 0x136e <i2c_store_data>
    142a:	05 c0       	rjmp	.+10     	; 0x1436 <__vector_1+0x3e>
		//PORTD ^=(1 << PD0);
	}
	else if(PINC&(1<< PC7)){ //sensor vill skicka  
    142c:	37 9b       	sbis	0x06, 7	; 6
    142e:	03 c0       	rjmp	.+6      	; 0x1436 <__vector_1+0x3e>
		i2c_store_data(i2c_recive(0x06)); // adress processor 3
    1430:	86 e0       	ldi	r24, 0x06	; 6
    1432:	68 df       	rcall	.-304    	; 0x1304 <i2c_recive>
    1434:	9c df       	rcall	.-200    	; 0x136e <i2c_store_data>
	}
}
    1436:	ff 91       	pop	r31
    1438:	ef 91       	pop	r30
    143a:	bf 91       	pop	r27
    143c:	af 91       	pop	r26
    143e:	9f 91       	pop	r25
    1440:	8f 91       	pop	r24
    1442:	7f 91       	pop	r23
    1444:	6f 91       	pop	r22
    1446:	5f 91       	pop	r21
    1448:	4f 91       	pop	r20
    144a:	3f 91       	pop	r19
    144c:	2f 91       	pop	r18
    144e:	0f 90       	pop	r0
    1450:	0b be       	out	0x3b, r0	; 59
    1452:	0f 90       	pop	r0
    1454:	0f be       	out	0x3f, r0	; 63
    1456:	0f 90       	pop	r0
    1458:	1f 90       	pop	r1
    145a:	18 95       	reti

0000145c <i2c_handel_data>:
	}

}

void i2c_handel_data(void){ //hanterar den motagna datan och läger den på rätt plats och skickar vidare sensordata till komunikation
	if(i2c_newdata==true)
    145c:	80 91 1e 01 	lds	r24, 0x011E
    1460:	88 23       	and	r24, r24
    1462:	09 f4       	brne	.+2      	; 0x1466 <i2c_handel_data+0xa>
    1464:	f9 c0       	rjmp	.+498    	; 0x1658 <i2c_handel_data+0x1fc>
	{
		i2c_newdata=false;
    1466:	10 92 1e 01 	sts	0x011E, r1
		if(!((i2c_data[0]>>3)&0x01)){
    146a:	80 91 6c 01 	lds	r24, 0x016C
    146e:	83 fd       	sbrc	r24, 3
    1470:	07 c0       	rjmp	.+14     	; 0x1480 <i2c_handel_data+0x24>
    1472:	24 e6       	ldi	r18, 0x64	; 100
    1474:	2a 95       	dec	r18
    1476:	f1 f7       	brne	.-4      	; 0x1474 <i2c_handel_data+0x18>
			_delay_us(300);
			i2c_send(0x02,i2c_data);// send to komunikation
    1478:	6c e6       	ldi	r22, 0x6C	; 108
    147a:	71 e0       	ldi	r23, 0x01	; 1
    147c:	82 e0       	ldi	r24, 0x02	; 2
    147e:	d0 db       	rcall	.-2144   	; 0xc20 <i2c_send>
		}
		
		switch (i2c_data[0] & 0x0f){
    1480:	80 91 6c 01 	lds	r24, 0x016C
    1484:	e8 2f       	mov	r30, r24
    1486:	ef 70       	andi	r30, 0x0F	; 15
    1488:	8e 2f       	mov	r24, r30
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	fc 01       	movw	r30, r24
    148e:	ea 5b       	subi	r30, 0xBA	; 186
    1490:	ff 4f       	sbci	r31, 0xFF	; 255
    1492:	1d c3       	rjmp	.+1594   	; 0x1ace <__tablejump2__>
			case 0x00 ://batteri nivå
				batteri=i2c_data[1],i2c_data[2];
    1494:	80 91 6d 01 	lds	r24, 0x016D
    1498:	80 93 85 01 	sts	0x0185, r24
				break;
    149c:	dc c0       	rjmp	.+440    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x01 ://avståndssensorer
				distans_right = i2c_data[3];
    149e:	ec e6       	ldi	r30, 0x6C	; 108
    14a0:	f1 e0       	ldi	r31, 0x01	; 1
    14a2:	83 81       	ldd	r24, Z+3	; 0x03
    14a4:	80 93 89 01 	sts	0x0189, r24
				distans_fram = i2c_data[2];;
    14a8:	82 81       	ldd	r24, Z+2	; 0x02
    14aa:	80 93 81 01 	sts	0x0181, r24
				distans_left = i2c_data[1];
    14ae:	81 81       	ldd	r24, Z+1	; 0x01
    14b0:	80 93 84 01 	sts	0x0184, r24
				//updaterad_labyrint = true;
				break;
    14b4:	d0 c0       	rjmp	.+416    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x02 :// refelxsensor data
				regler_ready_linje = 1;					// Ny data har lästs in då uppdaterar vi regleringen
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	90 93 4e 01 	sts	0x014E, r25
    14be:	80 93 4d 01 	sts	0x014D, r24
				Reflex_data = (i2c_data[2]<<8) + i2c_data[1];
    14c2:	ec e6       	ldi	r30, 0x6C	; 108
    14c4:	f1 e0       	ldi	r31, 0x01	; 1
    14c6:	82 81       	ldd	r24, Z+2	; 0x02
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	98 2f       	mov	r25, r24
    14cc:	88 27       	eor	r24, r24
    14ce:	21 81       	ldd	r18, Z+1	; 0x01
    14d0:	82 0f       	add	r24, r18
    14d2:	91 1d       	adc	r25, r1
    14d4:	90 93 7c 01 	sts	0x017C, r25
    14d8:	80 93 7b 01 	sts	0x017B, r24
				Reflex_data2 = i2c_data[3];// går inte att få in mer än 16 bitar i en int...
    14dc:	83 81       	ldd	r24, Z+3	; 0x03
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	90 93 95 01 	sts	0x0195, r25
    14e4:	80 93 94 01 	sts	0x0194, r24
				break;
    14e8:	b6 c0       	rjmp	.+364    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x03 :
				RGB_data=1;//"röd";"
    14ea:	81 e0       	ldi	r24, 0x01	; 1
    14ec:	80 93 88 01 	sts	0x0188, r24
				break;
    14f0:	b2 c0       	rjmp	.+356    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x04 :
				RGB_data=2;//"grön";
    14f2:	82 e0       	ldi	r24, 0x02	; 2
    14f4:	80 93 88 01 	sts	0x0188, r24
				break;		
    14f8:	ae c0       	rjmp	.+348    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x05 :
				RGB_data=3;//"blå";
    14fa:	83 e0       	ldi	r24, 0x03	; 3
    14fc:	80 93 88 01 	sts	0x0188, r24
				break;
    1500:	aa c0       	rjmp	.+340    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x06 : // gyro klart
				gyro_90 = true;
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	80 93 61 01 	sts	0x0161, r24
				turning = false;
    1508:	10 92 4b 01 	sts	0x014B, r1
				motor_right = 0;
    150c:	18 bc       	out	0x28, r1	; 40
				motor_left = 0;
    150e:	17 bc       	out	0x27, r1	; 39
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1510:	8f e9       	ldi	r24, 0x9F	; 159
    1512:	96 e8       	ldi	r25, 0x86	; 134
    1514:	21 e0       	ldi	r18, 0x01	; 1
    1516:	81 50       	subi	r24, 0x01	; 1
    1518:	90 40       	sbci	r25, 0x00	; 0
    151a:	20 40       	sbci	r18, 0x00	; 0
    151c:	e1 f7       	brne	.-8      	; 0x1516 <i2c_handel_data+0xba>
    151e:	00 c0       	rjmp	.+0      	; 0x1520 <i2c_handel_data+0xc4>
    1520:	00 00       	nop
    1522:	99 c0       	rjmp	.+306    	; 0x1656 <i2c_handel_data+0x1fa>
				break;
			case 0x07 :// gyro data
				// Kod vi skickar till sensor
				break;
			case 0x08 : // manuel stå still
				manual_function=0;
    1524:	10 92 40 01 	sts	0x0140, r1
    1528:	10 92 3f 01 	sts	0x013F, r1
				break;
    152c:	94 c0       	rjmp	.+296    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x09 : //manuel kar rakt fram
				manual_function=1;			
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	90 93 40 01 	sts	0x0140, r25
    1536:	80 93 3f 01 	sts	0x013F, r24
				break;
    153a:	8d c0       	rjmp	.+282    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x0a : //manuel kör bakåt
				manual_function=2;				
    153c:	82 e0       	ldi	r24, 0x02	; 2
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	90 93 40 01 	sts	0x0140, r25
    1544:	80 93 3f 01 	sts	0x013F, r24
				break;
    1548:	86 c0       	rjmp	.+268    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x0b ://manuel vänster fram
				manual_function=4;
    154a:	84 e0       	ldi	r24, 0x04	; 4
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	90 93 40 01 	sts	0x0140, r25
    1552:	80 93 3f 01 	sts	0x013F, r24
				break;
    1556:	7f c0       	rjmp	.+254    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x0c ://manuel höger fram
				manual_function=3;
    1558:	83 e0       	ldi	r24, 0x03	; 3
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	90 93 40 01 	sts	0x0140, r25
    1560:	80 93 3f 01 	sts	0x013F, r24
				break;
    1564:	78 c0       	rjmp	.+240    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x0d :// spin på stället åt vänster
				manual_function=6;
    1566:	86 e0       	ldi	r24, 0x06	; 6
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	90 93 40 01 	sts	0x0140, r25
    156e:	80 93 3f 01 	sts	0x013F, r24
				break;
    1572:	71 c0       	rjmp	.+226    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x0e :// spin på stället åt höger
				manual_function=5;
    1574:	85 e0       	ldi	r24, 0x05	; 5
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	90 93 40 01 	sts	0x0140, r25
    157c:	80 93 3f 01 	sts	0x013F, r24
				break;
    1580:	6a c0       	rjmp	.+212    	; 0x1656 <i2c_handel_data+0x1fa>
			case 0x0f :	// GUI skickar en extra byte där vi behandlar knapparna "man/auto" samt "start" (av/på) (används för extrafunktioner i almenhet som inte får plats i vanliga data tabellen)
				if(i2c_data[1]==0xf0){
    1582:	80 91 6d 01 	lds	r24, 0x016D
    1586:	80 3f       	cpi	r24, 0xF0	; 240
    1588:	a1 f4       	brne	.+40     	; 0x15b2 <i2c_handel_data+0x156>
					if(start==1){
    158a:	80 91 5b 01 	lds	r24, 0x015B
    158e:	90 91 5c 01 	lds	r25, 0x015C
    1592:	01 97       	sbiw	r24, 0x01	; 1
    1594:	29 f4       	brne	.+10     	; 0x15a0 <i2c_handel_data+0x144>
						start=0;
    1596:	10 92 5c 01 	sts	0x015C, r1
    159a:	10 92 5b 01 	sts	0x015B, r1
    159e:	5b c0       	rjmp	.+182    	; 0x1656 <i2c_handel_data+0x1fa>
					}
					else{
						start=1;
    15a0:	81 e0       	ldi	r24, 0x01	; 1
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	90 93 5c 01 	sts	0x015C, r25
    15a8:	80 93 5b 01 	sts	0x015B, r24
						RGB_data = 0;
    15ac:	10 92 88 01 	sts	0x0188, r1
    15b0:	52 c0       	rjmp	.+164    	; 0x1656 <i2c_handel_data+0x1fa>
					}
				}
				else if(i2c_data[1]==0x0f){
    15b2:	8f 30       	cpi	r24, 0x0F	; 15
    15b4:	f1 f4       	brne	.+60     	; 0x15f2 <i2c_handel_data+0x196>
					if(drive_mode==1){
    15b6:	80 91 5d 01 	lds	r24, 0x015D
    15ba:	90 91 5e 01 	lds	r25, 0x015E
    15be:	01 97       	sbiw	r24, 0x01	; 1
    15c0:	59 f4       	brne	.+22     	; 0x15d8 <i2c_handel_data+0x17c>
						PORTD |= (1 << PD1);
    15c2:	59 9a       	sbi	0x0b, 1	; 11
						PORTD &= ~(1 << PD0);
    15c4:	58 98       	cbi	0x0b, 0	; 11
						drive_mode=0;
    15c6:	10 92 5e 01 	sts	0x015E, r1
    15ca:	10 92 5d 01 	sts	0x015D, r1
						start=0;
    15ce:	10 92 5c 01 	sts	0x015C, r1
    15d2:	10 92 5b 01 	sts	0x015B, r1
    15d6:	3f c0       	rjmp	.+126    	; 0x1656 <i2c_handel_data+0x1fa>
					}
					else{
						PORTD |= (1 << PD0);
    15d8:	58 9a       	sbi	0x0b, 0	; 11
						PORTD &= ~(1 << PD1);
    15da:	59 98       	cbi	0x0b, 1	; 11
						drive_mode=1;
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	90 93 5e 01 	sts	0x015E, r25
    15e4:	80 93 5d 01 	sts	0x015D, r24
						start=0;
    15e8:	10 92 5c 01 	sts	0x015C, r1
    15ec:	10 92 5b 01 	sts	0x015B, r1
    15f0:	32 c0       	rjmp	.+100    	; 0x1656 <i2c_handel_data+0x1fa>
					}
				}
				else if(i2c_data[1]==0x00){			// Ändra P och D konstant för linje
    15f2:	81 11       	cpse	r24, r1
    15f4:	0f c0       	rjmp	.+30     	; 0x1614 <i2c_handel_data+0x1b8>
					d_constant = i2c_data[2];
    15f6:	ec e6       	ldi	r30, 0x6C	; 108
    15f8:	f1 e0       	ldi	r31, 0x01	; 1
    15fa:	82 81       	ldd	r24, Z+2	; 0x02
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	90 93 01 01 	sts	0x0101, r25
    1602:	80 93 00 01 	sts	0x0100, r24
					p_constant = i2c_data[3];
    1606:	83 81       	ldd	r24, Z+3	; 0x03
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	90 93 03 01 	sts	0x0103, r25
    160e:	80 93 02 01 	sts	0x0102, r24
    1612:	21 c0       	rjmp	.+66     	; 0x1656 <i2c_handel_data+0x1fa>
				}
				else if(i2c_data[1]==0x01){			// Ändra P och D konstant för labyrint
    1614:	81 30       	cpi	r24, 0x01	; 1
    1616:	79 f4       	brne	.+30     	; 0x1636 <i2c_handel_data+0x1da>
					d_constant_lab = i2c_data[2];
    1618:	ec e6       	ldi	r30, 0x6C	; 108
    161a:	f1 e0       	ldi	r31, 0x01	; 1
    161c:	82 81       	ldd	r24, Z+2	; 0x02
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	90 93 0c 01 	sts	0x010C, r25
    1624:	80 93 0b 01 	sts	0x010B, r24
					p_constant_lab = i2c_data[3];
    1628:	83 81       	ldd	r24, Z+3	; 0x03
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	90 93 0e 01 	sts	0x010E, r25
    1630:	80 93 0d 01 	sts	0x010D, r24
    1634:	10 c0       	rjmp	.+32     	; 0x1656 <i2c_handel_data+0x1fa>
				}
				else if(i2c_data[1]==0x02){
    1636:	82 30       	cpi	r24, 0x02	; 2
    1638:	71 f4       	brne	.+28     	; 0x1656 <i2c_handel_data+0x1fa>
					left = i2c_data[2];
    163a:	ec e6       	ldi	r30, 0x6C	; 108
    163c:	f1 e0       	ldi	r31, 0x01	; 1
    163e:	82 81       	ldd	r24, Z+2	; 0x02
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	90 93 5a 01 	sts	0x015A, r25
    1646:	80 93 59 01 	sts	0x0159, r24
					right = i2c_data[3];
    164a:	83 81       	ldd	r24, Z+3	; 0x03
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	90 93 58 01 	sts	0x0158, r25
    1652:	80 93 57 01 	sts	0x0157, r24
				
				break;		
			default :
				break;
		}
		EIMSK |= (1<<INT0);
    1656:	e8 9a       	sbi	0x1d, 0	; 29
    1658:	08 95       	ret

0000165a <main>:
#include "i2c_master.c"


int main(void)
{
	interrupt_init();
    165a:	81 da       	rcall	.-2814   	; 0xb5e <interrupt_init>
	board_init();
    165c:	0e 94 76 00 	call	0xec	; 0xec <board_init>
	initengine();
    1660:	0a da       	rcall	.-3052   	; 0xa76 <initengine>
	timerinit();
    1662:	16 da       	rcall	.-3028   	; 0xa90 <timerinit>
	i2c_setup(1);
    1664:	81 e0       	ldi	r24, 0x01	; 1
    1666:	cc da       	rcall	.-2664   	; 0xc00 <i2c_setup>
	sei();
    1668:	78 94       	sei
	//***********Set motors speed value here *****************
	left=180;				// kanske räcker med en variable för båda om båda kör exakt lika fort
    166a:	84 eb       	ldi	r24, 0xB4	; 180
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	90 93 5a 01 	sts	0x015A, r25
    1672:	80 93 59 01 	sts	0x0159, r24
	right=170;
    1676:	8a ea       	ldi	r24, 0xAA	; 170
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	90 93 58 01 	sts	0x0158, r25
    167e:	80 93 57 01 	sts	0x0157, r24
	//********************************************************
	motor_left=left;
    1682:	84 eb       	ldi	r24, 0xB4	; 180
    1684:	87 bd       	out	0x27, r24	; 39
	motor_right=right;
    1686:	80 91 57 01 	lds	r24, 0x0157
    168a:	88 bd       	out	0x28, r24	; 40
	while(1){
		i2c_handel_data();  //test av fregulito
    168c:	e7 de       	rcall	.-562    	; 0x145c <i2c_handel_data>
		if(turning)
    168e:	80 91 4b 01 	lds	r24, 0x014B
    1692:	81 11       	cpse	r24, r1
    1694:	fb cf       	rjmp	.-10     	; 0x168c <main+0x32>
			;
		else if(drive_mode == 1){						// Drivemode is auto    // (drive_mode == 1 && start == 1)
    1696:	80 91 5d 01 	lds	r24, 0x015D
    169a:	90 91 5e 01 	lds	r25, 0x015E
    169e:	81 30       	cpi	r24, 0x01	; 1
    16a0:	91 05       	cpc	r25, r1
    16a2:	71 f4       	brne	.+28     	; 0x16c0 <main+0x66>
			//current_position = arre[count_arre];	// används för att simulera linjeföljning, arrayen ändras i globala
			//if((gyro_left == 1)|| (gyro_right == 1)){
			//	drive_mode = 0;
			//}
			if(start == 1){
    16a4:	80 91 5b 01 	lds	r24, 0x015B
    16a8:	90 91 5c 01 	lds	r25, 0x015C
    16ac:	81 30       	cpi	r24, 0x01	; 1
    16ae:	91 05       	cpc	r25, r1
    16b0:	11 f4       	brne	.+4      	; 0x16b6 <main+0x5c>
				regulator();	
    16b2:	09 de       	rcall	.-1006   	; 0x12c6 <regulator>
    16b4:	eb cf       	rjmp	.-42     	; 0x168c <main+0x32>
			}
			else if(start == 0){					// if start is zero then turn off the auto, stops motors
    16b6:	89 2b       	or	r24, r25
    16b8:	49 f7       	brne	.-46     	; 0x168c <main+0x32>
				motor_left=0;
    16ba:	17 bc       	out	0x27, r1	; 39
				motor_right=0;
    16bc:	18 bc       	out	0x28, r1	; 40
    16be:	e6 cf       	rjmp	.-52     	; 0x168c <main+0x32>
			}
		}
		else if(drive_mode==0){										// Drivemode is manual
    16c0:	89 2b       	or	r24, r25
    16c2:	21 f7       	brne	.-56     	; 0x168c <main+0x32>
			PORTD |= (1 << PD1);
    16c4:	59 9a       	sbi	0x0b, 1	; 11
			manual_drive();
    16c6:	33 db       	rcall	.-2458   	; 0xd2e <manual_drive>
    16c8:	e1 cf       	rjmp	.-62     	; 0x168c <main+0x32>

000016ca <__subsf3>:
    16ca:	50 58       	subi	r21, 0x80	; 128

000016cc <__addsf3>:
    16cc:	bb 27       	eor	r27, r27
    16ce:	aa 27       	eor	r26, r26
    16d0:	0e d0       	rcall	.+28     	; 0x16ee <__addsf3x>
    16d2:	4d c1       	rjmp	.+666    	; 0x196e <__fp_round>
    16d4:	3e d1       	rcall	.+636    	; 0x1952 <__fp_pscA>
    16d6:	30 f0       	brcs	.+12     	; 0x16e4 <__addsf3+0x18>
    16d8:	43 d1       	rcall	.+646    	; 0x1960 <__fp_pscB>
    16da:	20 f0       	brcs	.+8      	; 0x16e4 <__addsf3+0x18>
    16dc:	31 f4       	brne	.+12     	; 0x16ea <__addsf3+0x1e>
    16de:	9f 3f       	cpi	r25, 0xFF	; 255
    16e0:	11 f4       	brne	.+4      	; 0x16e6 <__addsf3+0x1a>
    16e2:	1e f4       	brtc	.+6      	; 0x16ea <__addsf3+0x1e>
    16e4:	33 c1       	rjmp	.+614    	; 0x194c <__fp_nan>
    16e6:	0e f4       	brtc	.+2      	; 0x16ea <__addsf3+0x1e>
    16e8:	e0 95       	com	r30
    16ea:	e7 fb       	bst	r30, 7
    16ec:	29 c1       	rjmp	.+594    	; 0x1940 <__fp_inf>

000016ee <__addsf3x>:
    16ee:	e9 2f       	mov	r30, r25
    16f0:	4f d1       	rcall	.+670    	; 0x1990 <__fp_split3>
    16f2:	80 f3       	brcs	.-32     	; 0x16d4 <__addsf3+0x8>
    16f4:	ba 17       	cp	r27, r26
    16f6:	62 07       	cpc	r22, r18
    16f8:	73 07       	cpc	r23, r19
    16fa:	84 07       	cpc	r24, r20
    16fc:	95 07       	cpc	r25, r21
    16fe:	18 f0       	brcs	.+6      	; 0x1706 <__addsf3x+0x18>
    1700:	71 f4       	brne	.+28     	; 0x171e <__addsf3x+0x30>
    1702:	9e f5       	brtc	.+102    	; 0x176a <__addsf3x+0x7c>
    1704:	67 c1       	rjmp	.+718    	; 0x19d4 <__fp_zero>
    1706:	0e f4       	brtc	.+2      	; 0x170a <__addsf3x+0x1c>
    1708:	e0 95       	com	r30
    170a:	0b 2e       	mov	r0, r27
    170c:	ba 2f       	mov	r27, r26
    170e:	a0 2d       	mov	r26, r0
    1710:	0b 01       	movw	r0, r22
    1712:	b9 01       	movw	r22, r18
    1714:	90 01       	movw	r18, r0
    1716:	0c 01       	movw	r0, r24
    1718:	ca 01       	movw	r24, r20
    171a:	a0 01       	movw	r20, r0
    171c:	11 24       	eor	r1, r1
    171e:	ff 27       	eor	r31, r31
    1720:	59 1b       	sub	r21, r25
    1722:	99 f0       	breq	.+38     	; 0x174a <__addsf3x+0x5c>
    1724:	59 3f       	cpi	r21, 0xF9	; 249
    1726:	50 f4       	brcc	.+20     	; 0x173c <__addsf3x+0x4e>
    1728:	50 3e       	cpi	r21, 0xE0	; 224
    172a:	68 f1       	brcs	.+90     	; 0x1786 <__addsf3x+0x98>
    172c:	1a 16       	cp	r1, r26
    172e:	f0 40       	sbci	r31, 0x00	; 0
    1730:	a2 2f       	mov	r26, r18
    1732:	23 2f       	mov	r18, r19
    1734:	34 2f       	mov	r19, r20
    1736:	44 27       	eor	r20, r20
    1738:	58 5f       	subi	r21, 0xF8	; 248
    173a:	f3 cf       	rjmp	.-26     	; 0x1722 <__addsf3x+0x34>
    173c:	46 95       	lsr	r20
    173e:	37 95       	ror	r19
    1740:	27 95       	ror	r18
    1742:	a7 95       	ror	r26
    1744:	f0 40       	sbci	r31, 0x00	; 0
    1746:	53 95       	inc	r21
    1748:	c9 f7       	brne	.-14     	; 0x173c <__addsf3x+0x4e>
    174a:	7e f4       	brtc	.+30     	; 0x176a <__addsf3x+0x7c>
    174c:	1f 16       	cp	r1, r31
    174e:	ba 0b       	sbc	r27, r26
    1750:	62 0b       	sbc	r22, r18
    1752:	73 0b       	sbc	r23, r19
    1754:	84 0b       	sbc	r24, r20
    1756:	ba f0       	brmi	.+46     	; 0x1786 <__addsf3x+0x98>
    1758:	91 50       	subi	r25, 0x01	; 1
    175a:	a1 f0       	breq	.+40     	; 0x1784 <__addsf3x+0x96>
    175c:	ff 0f       	add	r31, r31
    175e:	bb 1f       	adc	r27, r27
    1760:	66 1f       	adc	r22, r22
    1762:	77 1f       	adc	r23, r23
    1764:	88 1f       	adc	r24, r24
    1766:	c2 f7       	brpl	.-16     	; 0x1758 <__addsf3x+0x6a>
    1768:	0e c0       	rjmp	.+28     	; 0x1786 <__addsf3x+0x98>
    176a:	ba 0f       	add	r27, r26
    176c:	62 1f       	adc	r22, r18
    176e:	73 1f       	adc	r23, r19
    1770:	84 1f       	adc	r24, r20
    1772:	48 f4       	brcc	.+18     	; 0x1786 <__addsf3x+0x98>
    1774:	87 95       	ror	r24
    1776:	77 95       	ror	r23
    1778:	67 95       	ror	r22
    177a:	b7 95       	ror	r27
    177c:	f7 95       	ror	r31
    177e:	9e 3f       	cpi	r25, 0xFE	; 254
    1780:	08 f0       	brcs	.+2      	; 0x1784 <__addsf3x+0x96>
    1782:	b3 cf       	rjmp	.-154    	; 0x16ea <__addsf3+0x1e>
    1784:	93 95       	inc	r25
    1786:	88 0f       	add	r24, r24
    1788:	08 f0       	brcs	.+2      	; 0x178c <__addsf3x+0x9e>
    178a:	99 27       	eor	r25, r25
    178c:	ee 0f       	add	r30, r30
    178e:	97 95       	ror	r25
    1790:	87 95       	ror	r24
    1792:	08 95       	ret

00001794 <__divsf3>:
    1794:	0c d0       	rcall	.+24     	; 0x17ae <__divsf3x>
    1796:	eb c0       	rjmp	.+470    	; 0x196e <__fp_round>
    1798:	e3 d0       	rcall	.+454    	; 0x1960 <__fp_pscB>
    179a:	40 f0       	brcs	.+16     	; 0x17ac <__divsf3+0x18>
    179c:	da d0       	rcall	.+436    	; 0x1952 <__fp_pscA>
    179e:	30 f0       	brcs	.+12     	; 0x17ac <__divsf3+0x18>
    17a0:	21 f4       	brne	.+8      	; 0x17aa <__divsf3+0x16>
    17a2:	5f 3f       	cpi	r21, 0xFF	; 255
    17a4:	19 f0       	breq	.+6      	; 0x17ac <__divsf3+0x18>
    17a6:	cc c0       	rjmp	.+408    	; 0x1940 <__fp_inf>
    17a8:	51 11       	cpse	r21, r1
    17aa:	15 c1       	rjmp	.+554    	; 0x19d6 <__fp_szero>
    17ac:	cf c0       	rjmp	.+414    	; 0x194c <__fp_nan>

000017ae <__divsf3x>:
    17ae:	f0 d0       	rcall	.+480    	; 0x1990 <__fp_split3>
    17b0:	98 f3       	brcs	.-26     	; 0x1798 <__divsf3+0x4>

000017b2 <__divsf3_pse>:
    17b2:	99 23       	and	r25, r25
    17b4:	c9 f3       	breq	.-14     	; 0x17a8 <__divsf3+0x14>
    17b6:	55 23       	and	r21, r21
    17b8:	b1 f3       	breq	.-20     	; 0x17a6 <__divsf3+0x12>
    17ba:	95 1b       	sub	r25, r21
    17bc:	55 0b       	sbc	r21, r21
    17be:	bb 27       	eor	r27, r27
    17c0:	aa 27       	eor	r26, r26
    17c2:	62 17       	cp	r22, r18
    17c4:	73 07       	cpc	r23, r19
    17c6:	84 07       	cpc	r24, r20
    17c8:	38 f0       	brcs	.+14     	; 0x17d8 <__divsf3_pse+0x26>
    17ca:	9f 5f       	subi	r25, 0xFF	; 255
    17cc:	5f 4f       	sbci	r21, 0xFF	; 255
    17ce:	22 0f       	add	r18, r18
    17d0:	33 1f       	adc	r19, r19
    17d2:	44 1f       	adc	r20, r20
    17d4:	aa 1f       	adc	r26, r26
    17d6:	a9 f3       	breq	.-22     	; 0x17c2 <__divsf3_pse+0x10>
    17d8:	33 d0       	rcall	.+102    	; 0x1840 <__divsf3_pse+0x8e>
    17da:	0e 2e       	mov	r0, r30
    17dc:	3a f0       	brmi	.+14     	; 0x17ec <__divsf3_pse+0x3a>
    17de:	e0 e8       	ldi	r30, 0x80	; 128
    17e0:	30 d0       	rcall	.+96     	; 0x1842 <__divsf3_pse+0x90>
    17e2:	91 50       	subi	r25, 0x01	; 1
    17e4:	50 40       	sbci	r21, 0x00	; 0
    17e6:	e6 95       	lsr	r30
    17e8:	00 1c       	adc	r0, r0
    17ea:	ca f7       	brpl	.-14     	; 0x17de <__divsf3_pse+0x2c>
    17ec:	29 d0       	rcall	.+82     	; 0x1840 <__divsf3_pse+0x8e>
    17ee:	fe 2f       	mov	r31, r30
    17f0:	27 d0       	rcall	.+78     	; 0x1840 <__divsf3_pse+0x8e>
    17f2:	66 0f       	add	r22, r22
    17f4:	77 1f       	adc	r23, r23
    17f6:	88 1f       	adc	r24, r24
    17f8:	bb 1f       	adc	r27, r27
    17fa:	26 17       	cp	r18, r22
    17fc:	37 07       	cpc	r19, r23
    17fe:	48 07       	cpc	r20, r24
    1800:	ab 07       	cpc	r26, r27
    1802:	b0 e8       	ldi	r27, 0x80	; 128
    1804:	09 f0       	breq	.+2      	; 0x1808 <__divsf3_pse+0x56>
    1806:	bb 0b       	sbc	r27, r27
    1808:	80 2d       	mov	r24, r0
    180a:	bf 01       	movw	r22, r30
    180c:	ff 27       	eor	r31, r31
    180e:	93 58       	subi	r25, 0x83	; 131
    1810:	5f 4f       	sbci	r21, 0xFF	; 255
    1812:	2a f0       	brmi	.+10     	; 0x181e <__divsf3_pse+0x6c>
    1814:	9e 3f       	cpi	r25, 0xFE	; 254
    1816:	51 05       	cpc	r21, r1
    1818:	68 f0       	brcs	.+26     	; 0x1834 <__divsf3_pse+0x82>
    181a:	92 c0       	rjmp	.+292    	; 0x1940 <__fp_inf>
    181c:	dc c0       	rjmp	.+440    	; 0x19d6 <__fp_szero>
    181e:	5f 3f       	cpi	r21, 0xFF	; 255
    1820:	ec f3       	brlt	.-6      	; 0x181c <__divsf3_pse+0x6a>
    1822:	98 3e       	cpi	r25, 0xE8	; 232
    1824:	dc f3       	brlt	.-10     	; 0x181c <__divsf3_pse+0x6a>
    1826:	86 95       	lsr	r24
    1828:	77 95       	ror	r23
    182a:	67 95       	ror	r22
    182c:	b7 95       	ror	r27
    182e:	f7 95       	ror	r31
    1830:	9f 5f       	subi	r25, 0xFF	; 255
    1832:	c9 f7       	brne	.-14     	; 0x1826 <__divsf3_pse+0x74>
    1834:	88 0f       	add	r24, r24
    1836:	91 1d       	adc	r25, r1
    1838:	96 95       	lsr	r25
    183a:	87 95       	ror	r24
    183c:	97 f9       	bld	r25, 7
    183e:	08 95       	ret
    1840:	e1 e0       	ldi	r30, 0x01	; 1
    1842:	66 0f       	add	r22, r22
    1844:	77 1f       	adc	r23, r23
    1846:	88 1f       	adc	r24, r24
    1848:	bb 1f       	adc	r27, r27
    184a:	62 17       	cp	r22, r18
    184c:	73 07       	cpc	r23, r19
    184e:	84 07       	cpc	r24, r20
    1850:	ba 07       	cpc	r27, r26
    1852:	20 f0       	brcs	.+8      	; 0x185c <__divsf3_pse+0xaa>
    1854:	62 1b       	sub	r22, r18
    1856:	73 0b       	sbc	r23, r19
    1858:	84 0b       	sbc	r24, r20
    185a:	ba 0b       	sbc	r27, r26
    185c:	ee 1f       	adc	r30, r30
    185e:	88 f7       	brcc	.-30     	; 0x1842 <__divsf3_pse+0x90>
    1860:	e0 95       	com	r30
    1862:	08 95       	ret

00001864 <__fixsfsi>:
    1864:	04 d0       	rcall	.+8      	; 0x186e <__fixunssfsi>
    1866:	68 94       	set
    1868:	b1 11       	cpse	r27, r1
    186a:	b5 c0       	rjmp	.+362    	; 0x19d6 <__fp_szero>
    186c:	08 95       	ret

0000186e <__fixunssfsi>:
    186e:	98 d0       	rcall	.+304    	; 0x19a0 <__fp_splitA>
    1870:	88 f0       	brcs	.+34     	; 0x1894 <__fixunssfsi+0x26>
    1872:	9f 57       	subi	r25, 0x7F	; 127
    1874:	90 f0       	brcs	.+36     	; 0x189a <__fixunssfsi+0x2c>
    1876:	b9 2f       	mov	r27, r25
    1878:	99 27       	eor	r25, r25
    187a:	b7 51       	subi	r27, 0x17	; 23
    187c:	a0 f0       	brcs	.+40     	; 0x18a6 <__fixunssfsi+0x38>
    187e:	d1 f0       	breq	.+52     	; 0x18b4 <__fixunssfsi+0x46>
    1880:	66 0f       	add	r22, r22
    1882:	77 1f       	adc	r23, r23
    1884:	88 1f       	adc	r24, r24
    1886:	99 1f       	adc	r25, r25
    1888:	1a f0       	brmi	.+6      	; 0x1890 <__fixunssfsi+0x22>
    188a:	ba 95       	dec	r27
    188c:	c9 f7       	brne	.-14     	; 0x1880 <__fixunssfsi+0x12>
    188e:	12 c0       	rjmp	.+36     	; 0x18b4 <__fixunssfsi+0x46>
    1890:	b1 30       	cpi	r27, 0x01	; 1
    1892:	81 f0       	breq	.+32     	; 0x18b4 <__fixunssfsi+0x46>
    1894:	9f d0       	rcall	.+318    	; 0x19d4 <__fp_zero>
    1896:	b1 e0       	ldi	r27, 0x01	; 1
    1898:	08 95       	ret
    189a:	9c c0       	rjmp	.+312    	; 0x19d4 <__fp_zero>
    189c:	67 2f       	mov	r22, r23
    189e:	78 2f       	mov	r23, r24
    18a0:	88 27       	eor	r24, r24
    18a2:	b8 5f       	subi	r27, 0xF8	; 248
    18a4:	39 f0       	breq	.+14     	; 0x18b4 <__fixunssfsi+0x46>
    18a6:	b9 3f       	cpi	r27, 0xF9	; 249
    18a8:	cc f3       	brlt	.-14     	; 0x189c <__fixunssfsi+0x2e>
    18aa:	86 95       	lsr	r24
    18ac:	77 95       	ror	r23
    18ae:	67 95       	ror	r22
    18b0:	b3 95       	inc	r27
    18b2:	d9 f7       	brne	.-10     	; 0x18aa <__fixunssfsi+0x3c>
    18b4:	3e f4       	brtc	.+14     	; 0x18c4 <__fixunssfsi+0x56>
    18b6:	90 95       	com	r25
    18b8:	80 95       	com	r24
    18ba:	70 95       	com	r23
    18bc:	61 95       	neg	r22
    18be:	7f 4f       	sbci	r23, 0xFF	; 255
    18c0:	8f 4f       	sbci	r24, 0xFF	; 255
    18c2:	9f 4f       	sbci	r25, 0xFF	; 255
    18c4:	08 95       	ret

000018c6 <__floatunsisf>:
    18c6:	e8 94       	clt
    18c8:	09 c0       	rjmp	.+18     	; 0x18dc <__floatsisf+0x12>

000018ca <__floatsisf>:
    18ca:	97 fb       	bst	r25, 7
    18cc:	3e f4       	brtc	.+14     	; 0x18dc <__floatsisf+0x12>
    18ce:	90 95       	com	r25
    18d0:	80 95       	com	r24
    18d2:	70 95       	com	r23
    18d4:	61 95       	neg	r22
    18d6:	7f 4f       	sbci	r23, 0xFF	; 255
    18d8:	8f 4f       	sbci	r24, 0xFF	; 255
    18da:	9f 4f       	sbci	r25, 0xFF	; 255
    18dc:	99 23       	and	r25, r25
    18de:	a9 f0       	breq	.+42     	; 0x190a <__floatsisf+0x40>
    18e0:	f9 2f       	mov	r31, r25
    18e2:	96 e9       	ldi	r25, 0x96	; 150
    18e4:	bb 27       	eor	r27, r27
    18e6:	93 95       	inc	r25
    18e8:	f6 95       	lsr	r31
    18ea:	87 95       	ror	r24
    18ec:	77 95       	ror	r23
    18ee:	67 95       	ror	r22
    18f0:	b7 95       	ror	r27
    18f2:	f1 11       	cpse	r31, r1
    18f4:	f8 cf       	rjmp	.-16     	; 0x18e6 <__floatsisf+0x1c>
    18f6:	fa f4       	brpl	.+62     	; 0x1936 <__floatsisf+0x6c>
    18f8:	bb 0f       	add	r27, r27
    18fa:	11 f4       	brne	.+4      	; 0x1900 <__floatsisf+0x36>
    18fc:	60 ff       	sbrs	r22, 0
    18fe:	1b c0       	rjmp	.+54     	; 0x1936 <__floatsisf+0x6c>
    1900:	6f 5f       	subi	r22, 0xFF	; 255
    1902:	7f 4f       	sbci	r23, 0xFF	; 255
    1904:	8f 4f       	sbci	r24, 0xFF	; 255
    1906:	9f 4f       	sbci	r25, 0xFF	; 255
    1908:	16 c0       	rjmp	.+44     	; 0x1936 <__floatsisf+0x6c>
    190a:	88 23       	and	r24, r24
    190c:	11 f0       	breq	.+4      	; 0x1912 <__floatsisf+0x48>
    190e:	96 e9       	ldi	r25, 0x96	; 150
    1910:	11 c0       	rjmp	.+34     	; 0x1934 <__floatsisf+0x6a>
    1912:	77 23       	and	r23, r23
    1914:	21 f0       	breq	.+8      	; 0x191e <__floatsisf+0x54>
    1916:	9e e8       	ldi	r25, 0x8E	; 142
    1918:	87 2f       	mov	r24, r23
    191a:	76 2f       	mov	r23, r22
    191c:	05 c0       	rjmp	.+10     	; 0x1928 <__floatsisf+0x5e>
    191e:	66 23       	and	r22, r22
    1920:	71 f0       	breq	.+28     	; 0x193e <__floatsisf+0x74>
    1922:	96 e8       	ldi	r25, 0x86	; 134
    1924:	86 2f       	mov	r24, r22
    1926:	70 e0       	ldi	r23, 0x00	; 0
    1928:	60 e0       	ldi	r22, 0x00	; 0
    192a:	2a f0       	brmi	.+10     	; 0x1936 <__floatsisf+0x6c>
    192c:	9a 95       	dec	r25
    192e:	66 0f       	add	r22, r22
    1930:	77 1f       	adc	r23, r23
    1932:	88 1f       	adc	r24, r24
    1934:	da f7       	brpl	.-10     	; 0x192c <__floatsisf+0x62>
    1936:	88 0f       	add	r24, r24
    1938:	96 95       	lsr	r25
    193a:	87 95       	ror	r24
    193c:	97 f9       	bld	r25, 7
    193e:	08 95       	ret

00001940 <__fp_inf>:
    1940:	97 f9       	bld	r25, 7
    1942:	9f 67       	ori	r25, 0x7F	; 127
    1944:	80 e8       	ldi	r24, 0x80	; 128
    1946:	70 e0       	ldi	r23, 0x00	; 0
    1948:	60 e0       	ldi	r22, 0x00	; 0
    194a:	08 95       	ret

0000194c <__fp_nan>:
    194c:	9f ef       	ldi	r25, 0xFF	; 255
    194e:	80 ec       	ldi	r24, 0xC0	; 192
    1950:	08 95       	ret

00001952 <__fp_pscA>:
    1952:	00 24       	eor	r0, r0
    1954:	0a 94       	dec	r0
    1956:	16 16       	cp	r1, r22
    1958:	17 06       	cpc	r1, r23
    195a:	18 06       	cpc	r1, r24
    195c:	09 06       	cpc	r0, r25
    195e:	08 95       	ret

00001960 <__fp_pscB>:
    1960:	00 24       	eor	r0, r0
    1962:	0a 94       	dec	r0
    1964:	12 16       	cp	r1, r18
    1966:	13 06       	cpc	r1, r19
    1968:	14 06       	cpc	r1, r20
    196a:	05 06       	cpc	r0, r21
    196c:	08 95       	ret

0000196e <__fp_round>:
    196e:	09 2e       	mov	r0, r25
    1970:	03 94       	inc	r0
    1972:	00 0c       	add	r0, r0
    1974:	11 f4       	brne	.+4      	; 0x197a <__fp_round+0xc>
    1976:	88 23       	and	r24, r24
    1978:	52 f0       	brmi	.+20     	; 0x198e <__fp_round+0x20>
    197a:	bb 0f       	add	r27, r27
    197c:	40 f4       	brcc	.+16     	; 0x198e <__fp_round+0x20>
    197e:	bf 2b       	or	r27, r31
    1980:	11 f4       	brne	.+4      	; 0x1986 <__fp_round+0x18>
    1982:	60 ff       	sbrs	r22, 0
    1984:	04 c0       	rjmp	.+8      	; 0x198e <__fp_round+0x20>
    1986:	6f 5f       	subi	r22, 0xFF	; 255
    1988:	7f 4f       	sbci	r23, 0xFF	; 255
    198a:	8f 4f       	sbci	r24, 0xFF	; 255
    198c:	9f 4f       	sbci	r25, 0xFF	; 255
    198e:	08 95       	ret

00001990 <__fp_split3>:
    1990:	57 fd       	sbrc	r21, 7
    1992:	90 58       	subi	r25, 0x80	; 128
    1994:	44 0f       	add	r20, r20
    1996:	55 1f       	adc	r21, r21
    1998:	59 f0       	breq	.+22     	; 0x19b0 <__fp_splitA+0x10>
    199a:	5f 3f       	cpi	r21, 0xFF	; 255
    199c:	71 f0       	breq	.+28     	; 0x19ba <__fp_splitA+0x1a>
    199e:	47 95       	ror	r20

000019a0 <__fp_splitA>:
    19a0:	88 0f       	add	r24, r24
    19a2:	97 fb       	bst	r25, 7
    19a4:	99 1f       	adc	r25, r25
    19a6:	61 f0       	breq	.+24     	; 0x19c0 <__fp_splitA+0x20>
    19a8:	9f 3f       	cpi	r25, 0xFF	; 255
    19aa:	79 f0       	breq	.+30     	; 0x19ca <__fp_splitA+0x2a>
    19ac:	87 95       	ror	r24
    19ae:	08 95       	ret
    19b0:	12 16       	cp	r1, r18
    19b2:	13 06       	cpc	r1, r19
    19b4:	14 06       	cpc	r1, r20
    19b6:	55 1f       	adc	r21, r21
    19b8:	f2 cf       	rjmp	.-28     	; 0x199e <__fp_split3+0xe>
    19ba:	46 95       	lsr	r20
    19bc:	f1 df       	rcall	.-30     	; 0x19a0 <__fp_splitA>
    19be:	08 c0       	rjmp	.+16     	; 0x19d0 <__fp_splitA+0x30>
    19c0:	16 16       	cp	r1, r22
    19c2:	17 06       	cpc	r1, r23
    19c4:	18 06       	cpc	r1, r24
    19c6:	99 1f       	adc	r25, r25
    19c8:	f1 cf       	rjmp	.-30     	; 0x19ac <__fp_splitA+0xc>
    19ca:	86 95       	lsr	r24
    19cc:	71 05       	cpc	r23, r1
    19ce:	61 05       	cpc	r22, r1
    19d0:	08 94       	sec
    19d2:	08 95       	ret

000019d4 <__fp_zero>:
    19d4:	e8 94       	clt

000019d6 <__fp_szero>:
    19d6:	bb 27       	eor	r27, r27
    19d8:	66 27       	eor	r22, r22
    19da:	77 27       	eor	r23, r23
    19dc:	cb 01       	movw	r24, r22
    19de:	97 f9       	bld	r25, 7
    19e0:	08 95       	ret

000019e2 <__mulsf3>:
    19e2:	0b d0       	rcall	.+22     	; 0x19fa <__mulsf3x>
    19e4:	c4 cf       	rjmp	.-120    	; 0x196e <__fp_round>
    19e6:	b5 df       	rcall	.-150    	; 0x1952 <__fp_pscA>
    19e8:	28 f0       	brcs	.+10     	; 0x19f4 <__mulsf3+0x12>
    19ea:	ba df       	rcall	.-140    	; 0x1960 <__fp_pscB>
    19ec:	18 f0       	brcs	.+6      	; 0x19f4 <__mulsf3+0x12>
    19ee:	95 23       	and	r25, r21
    19f0:	09 f0       	breq	.+2      	; 0x19f4 <__mulsf3+0x12>
    19f2:	a6 cf       	rjmp	.-180    	; 0x1940 <__fp_inf>
    19f4:	ab cf       	rjmp	.-170    	; 0x194c <__fp_nan>
    19f6:	11 24       	eor	r1, r1
    19f8:	ee cf       	rjmp	.-36     	; 0x19d6 <__fp_szero>

000019fa <__mulsf3x>:
    19fa:	ca df       	rcall	.-108    	; 0x1990 <__fp_split3>
    19fc:	a0 f3       	brcs	.-24     	; 0x19e6 <__mulsf3+0x4>

000019fe <__mulsf3_pse>:
    19fe:	95 9f       	mul	r25, r21
    1a00:	d1 f3       	breq	.-12     	; 0x19f6 <__mulsf3+0x14>
    1a02:	95 0f       	add	r25, r21
    1a04:	50 e0       	ldi	r21, 0x00	; 0
    1a06:	55 1f       	adc	r21, r21
    1a08:	62 9f       	mul	r22, r18
    1a0a:	f0 01       	movw	r30, r0
    1a0c:	72 9f       	mul	r23, r18
    1a0e:	bb 27       	eor	r27, r27
    1a10:	f0 0d       	add	r31, r0
    1a12:	b1 1d       	adc	r27, r1
    1a14:	63 9f       	mul	r22, r19
    1a16:	aa 27       	eor	r26, r26
    1a18:	f0 0d       	add	r31, r0
    1a1a:	b1 1d       	adc	r27, r1
    1a1c:	aa 1f       	adc	r26, r26
    1a1e:	64 9f       	mul	r22, r20
    1a20:	66 27       	eor	r22, r22
    1a22:	b0 0d       	add	r27, r0
    1a24:	a1 1d       	adc	r26, r1
    1a26:	66 1f       	adc	r22, r22
    1a28:	82 9f       	mul	r24, r18
    1a2a:	22 27       	eor	r18, r18
    1a2c:	b0 0d       	add	r27, r0
    1a2e:	a1 1d       	adc	r26, r1
    1a30:	62 1f       	adc	r22, r18
    1a32:	73 9f       	mul	r23, r19
    1a34:	b0 0d       	add	r27, r0
    1a36:	a1 1d       	adc	r26, r1
    1a38:	62 1f       	adc	r22, r18
    1a3a:	83 9f       	mul	r24, r19
    1a3c:	a0 0d       	add	r26, r0
    1a3e:	61 1d       	adc	r22, r1
    1a40:	22 1f       	adc	r18, r18
    1a42:	74 9f       	mul	r23, r20
    1a44:	33 27       	eor	r19, r19
    1a46:	a0 0d       	add	r26, r0
    1a48:	61 1d       	adc	r22, r1
    1a4a:	23 1f       	adc	r18, r19
    1a4c:	84 9f       	mul	r24, r20
    1a4e:	60 0d       	add	r22, r0
    1a50:	21 1d       	adc	r18, r1
    1a52:	82 2f       	mov	r24, r18
    1a54:	76 2f       	mov	r23, r22
    1a56:	6a 2f       	mov	r22, r26
    1a58:	11 24       	eor	r1, r1
    1a5a:	9f 57       	subi	r25, 0x7F	; 127
    1a5c:	50 40       	sbci	r21, 0x00	; 0
    1a5e:	8a f0       	brmi	.+34     	; 0x1a82 <__mulsf3_pse+0x84>
    1a60:	e1 f0       	breq	.+56     	; 0x1a9a <__mulsf3_pse+0x9c>
    1a62:	88 23       	and	r24, r24
    1a64:	4a f0       	brmi	.+18     	; 0x1a78 <__mulsf3_pse+0x7a>
    1a66:	ee 0f       	add	r30, r30
    1a68:	ff 1f       	adc	r31, r31
    1a6a:	bb 1f       	adc	r27, r27
    1a6c:	66 1f       	adc	r22, r22
    1a6e:	77 1f       	adc	r23, r23
    1a70:	88 1f       	adc	r24, r24
    1a72:	91 50       	subi	r25, 0x01	; 1
    1a74:	50 40       	sbci	r21, 0x00	; 0
    1a76:	a9 f7       	brne	.-22     	; 0x1a62 <__mulsf3_pse+0x64>
    1a78:	9e 3f       	cpi	r25, 0xFE	; 254
    1a7a:	51 05       	cpc	r21, r1
    1a7c:	70 f0       	brcs	.+28     	; 0x1a9a <__mulsf3_pse+0x9c>
    1a7e:	60 cf       	rjmp	.-320    	; 0x1940 <__fp_inf>
    1a80:	aa cf       	rjmp	.-172    	; 0x19d6 <__fp_szero>
    1a82:	5f 3f       	cpi	r21, 0xFF	; 255
    1a84:	ec f3       	brlt	.-6      	; 0x1a80 <__mulsf3_pse+0x82>
    1a86:	98 3e       	cpi	r25, 0xE8	; 232
    1a88:	dc f3       	brlt	.-10     	; 0x1a80 <__mulsf3_pse+0x82>
    1a8a:	86 95       	lsr	r24
    1a8c:	77 95       	ror	r23
    1a8e:	67 95       	ror	r22
    1a90:	b7 95       	ror	r27
    1a92:	f7 95       	ror	r31
    1a94:	e7 95       	ror	r30
    1a96:	9f 5f       	subi	r25, 0xFF	; 255
    1a98:	c1 f7       	brne	.-16     	; 0x1a8a <__mulsf3_pse+0x8c>
    1a9a:	fe 2b       	or	r31, r30
    1a9c:	88 0f       	add	r24, r24
    1a9e:	91 1d       	adc	r25, r1
    1aa0:	96 95       	lsr	r25
    1aa2:	87 95       	ror	r24
    1aa4:	97 f9       	bld	r25, 7
    1aa6:	08 95       	ret

00001aa8 <__divmodhi4>:
    1aa8:	97 fb       	bst	r25, 7
    1aaa:	07 2e       	mov	r0, r23
    1aac:	16 f4       	brtc	.+4      	; 0x1ab2 <__divmodhi4+0xa>
    1aae:	00 94       	com	r0
    1ab0:	06 d0       	rcall	.+12     	; 0x1abe <__divmodhi4_neg1>
    1ab2:	77 fd       	sbrc	r23, 7
    1ab4:	08 d0       	rcall	.+16     	; 0x1ac6 <__divmodhi4_neg2>
    1ab6:	14 d0       	rcall	.+40     	; 0x1ae0 <__udivmodhi4>
    1ab8:	07 fc       	sbrc	r0, 7
    1aba:	05 d0       	rcall	.+10     	; 0x1ac6 <__divmodhi4_neg2>
    1abc:	3e f4       	brtc	.+14     	; 0x1acc <__divmodhi4_exit>

00001abe <__divmodhi4_neg1>:
    1abe:	90 95       	com	r25
    1ac0:	81 95       	neg	r24
    1ac2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac4:	08 95       	ret

00001ac6 <__divmodhi4_neg2>:
    1ac6:	70 95       	com	r23
    1ac8:	61 95       	neg	r22
    1aca:	7f 4f       	sbci	r23, 0xFF	; 255

00001acc <__divmodhi4_exit>:
    1acc:	08 95       	ret

00001ace <__tablejump2__>:
    1ace:	ee 0f       	add	r30, r30
    1ad0:	ff 1f       	adc	r31, r31
    1ad2:	00 24       	eor	r0, r0
    1ad4:	00 1c       	adc	r0, r0
    1ad6:	0b be       	out	0x3b, r0	; 59
    1ad8:	07 90       	elpm	r0, Z+
    1ada:	f6 91       	elpm	r31, Z
    1adc:	e0 2d       	mov	r30, r0
    1ade:	09 94       	ijmp

00001ae0 <__udivmodhi4>:
    1ae0:	aa 1b       	sub	r26, r26
    1ae2:	bb 1b       	sub	r27, r27
    1ae4:	51 e1       	ldi	r21, 0x11	; 17
    1ae6:	07 c0       	rjmp	.+14     	; 0x1af6 <__udivmodhi4_ep>

00001ae8 <__udivmodhi4_loop>:
    1ae8:	aa 1f       	adc	r26, r26
    1aea:	bb 1f       	adc	r27, r27
    1aec:	a6 17       	cp	r26, r22
    1aee:	b7 07       	cpc	r27, r23
    1af0:	10 f0       	brcs	.+4      	; 0x1af6 <__udivmodhi4_ep>
    1af2:	a6 1b       	sub	r26, r22
    1af4:	b7 0b       	sbc	r27, r23

00001af6 <__udivmodhi4_ep>:
    1af6:	88 1f       	adc	r24, r24
    1af8:	99 1f       	adc	r25, r25
    1afa:	5a 95       	dec	r21
    1afc:	a9 f7       	brne	.-22     	; 0x1ae8 <__udivmodhi4_loop>
    1afe:	80 95       	com	r24
    1b00:	90 95       	com	r25
    1b02:	bc 01       	movw	r22, r24
    1b04:	cd 01       	movw	r24, r26
    1b06:	08 95       	ret

00001b08 <_exit>:
    1b08:	f8 94       	cli

00001b0a <__stop_program>:
    1b0a:	ff cf       	rjmp	.-2      	; 0x1b0a <__stop_program>
