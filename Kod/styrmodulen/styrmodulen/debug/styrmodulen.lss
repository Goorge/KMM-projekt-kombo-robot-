
styrmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000013a6  0000143a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000072  0080010c  0080010c  00001446  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001446  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001478  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000014b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010d0  00000000  00000000  00001608  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002ed  00000000  00000000  000026d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a0a  00000000  00000000  000029c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004cc  00000000  00000000  000043d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001089e  00000000  00000000  0000489c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018c4  00000000  00000000  0001513a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  000169fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003f12  00000000  00000000  00016b2e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
       2:	00 00       	nop
       4:	50 c6       	rjmp	.+3232   	; 0xca6 <__vector_1>
       6:	00 00       	nop
       8:	e0 c2       	rjmp	.+1472   	; 0x5ca <__vector_2>
       a:	00 00       	nop
       c:	06 c3       	rjmp	.+1548   	; 0x61a <__vector_3>
       e:	00 00       	nop
      10:	6b c0       	rjmp	.+214    	; 0xe8 <__bad_interrupt>
      12:	00 00       	nop
      14:	69 c0       	rjmp	.+210    	; 0xe8 <__bad_interrupt>
      16:	00 00       	nop
      18:	67 c0       	rjmp	.+206    	; 0xe8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	65 c0       	rjmp	.+202    	; 0xe8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	63 c0       	rjmp	.+198    	; 0xe8 <__bad_interrupt>
      22:	00 00       	nop
      24:	61 c0       	rjmp	.+194    	; 0xe8 <__bad_interrupt>
      26:	00 00       	nop
      28:	5f c0       	rjmp	.+190    	; 0xe8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5d c0       	rjmp	.+186    	; 0xe8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	5b c0       	rjmp	.+182    	; 0xe8 <__bad_interrupt>
      32:	00 00       	nop
      34:	6e c2       	rjmp	.+1244   	; 0x512 <__vector_13>
      36:	00 00       	nop
      38:	57 c0       	rjmp	.+174    	; 0xe8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	55 c0       	rjmp	.+170    	; 0xe8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	53 c0       	rjmp	.+166    	; 0xe8 <__bad_interrupt>
      42:	00 00       	nop
      44:	51 c0       	rjmp	.+162    	; 0xe8 <__bad_interrupt>
      46:	00 00       	nop
      48:	4f c0       	rjmp	.+158    	; 0xe8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4d c0       	rjmp	.+154    	; 0xe8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	4b c0       	rjmp	.+150    	; 0xe8 <__bad_interrupt>
      52:	00 00       	nop
      54:	49 c0       	rjmp	.+146    	; 0xe8 <__bad_interrupt>
      56:	00 00       	nop
      58:	47 c0       	rjmp	.+142    	; 0xe8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	45 c0       	rjmp	.+138    	; 0xe8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	43 c0       	rjmp	.+134    	; 0xe8 <__bad_interrupt>
      62:	00 00       	nop
      64:	41 c0       	rjmp	.+130    	; 0xe8 <__bad_interrupt>
      66:	00 00       	nop
      68:	3f c0       	rjmp	.+126    	; 0xe8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	3d c0       	rjmp	.+122    	; 0xe8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	3b c0       	rjmp	.+118    	; 0xe8 <__bad_interrupt>
      72:	00 00       	nop
      74:	39 c0       	rjmp	.+114    	; 0xe8 <__bad_interrupt>
      76:	00 00       	nop
      78:	37 c0       	rjmp	.+110    	; 0xe8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	35 c0       	rjmp	.+106    	; 0xe8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	33 c0       	rjmp	.+102    	; 0xe8 <__bad_interrupt>
      82:	00 00       	nop
      84:	31 c0       	rjmp	.+98     	; 0xe8 <__bad_interrupt>
      86:	00 00       	nop
      88:	2f c0       	rjmp	.+94     	; 0xe8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	a1 06       	cpc	r10, r17
      8e:	a6 06       	cpc	r10, r22
      90:	b2 06       	cpc	r11, r18
      92:	cc 06       	cpc	r12, r28
      94:	d0 06       	cpc	r13, r16
      96:	d4 06       	cpc	r13, r20
      98:	d8 06       	cpc	r13, r24
      9a:	79 07       	cpc	r23, r25
      9c:	e2 06       	cpc	r14, r18
      9e:	e7 06       	cpc	r14, r23
      a0:	ee 06       	cpc	r14, r30
      a2:	f5 06       	cpc	r15, r21
      a4:	fc 06       	cpc	r15, r28
      a6:	03 07       	cpc	r16, r19
      a8:	0a 07       	cpc	r16, r26
      aa:	11 07       	cpc	r17, r17

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	d0 e4       	ldi	r29, 0x40	; 64
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	11 e0       	ldi	r17, 0x01	; 1
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	e6 ea       	ldi	r30, 0xA6	; 166
      c0:	f3 e1       	ldi	r31, 0x13	; 19
      c2:	00 e0       	ldi	r16, 0x00	; 0
      c4:	0b bf       	out	0x3b, r16	; 59
      c6:	02 c0       	rjmp	.+4      	; 0xcc <__do_copy_data+0x14>
      c8:	07 90       	elpm	r0, Z+
      ca:	0d 92       	st	X+, r0
      cc:	ac 30       	cpi	r26, 0x0C	; 12
      ce:	b1 07       	cpc	r27, r17
      d0:	d9 f7       	brne	.-10     	; 0xc8 <__do_copy_data+0x10>

000000d2 <__do_clear_bss>:
      d2:	21 e0       	ldi	r18, 0x01	; 1
      d4:	ac e0       	ldi	r26, 0x0C	; 12
      d6:	b1 e0       	ldi	r27, 0x01	; 1
      d8:	01 c0       	rjmp	.+2      	; 0xdc <.do_clear_bss_start>

000000da <.do_clear_bss_loop>:
      da:	1d 92       	st	X+, r1

000000dc <.do_clear_bss_start>:
      dc:	ae 37       	cpi	r26, 0x7E	; 126
      de:	b2 07       	cpc	r27, r18
      e0:	e1 f7       	brne	.-8      	; 0xda <.do_clear_bss_loop>
      e2:	09 d7       	rcall	.+3602   	; 0xef6 <main>
      e4:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <_exit>

000000e8 <__bad_interrupt>:
      e8:	8b cf       	rjmp	.-234    	; 0x0 <__vectors>

000000ea <board_init>:
      ea:	08 95       	ret

000000ec <linje_get_error>:
	
	else if(turn_done && distance_left < st_value && distance_right < st_value && distance_front > st_value){	//sväng är klar och roboten har kört ur kurvan, återgå till vanlig PD-reglering
		twoway_turn_right = false;
		ongoing_turn = false;
		first_time = true;
		regler_against_wall = false;
      ec:	2f 92       	push	r2
      ee:	3f 92       	push	r3
      f0:	4f 92       	push	r4
      f2:	5f 92       	push	r5
      f4:	6f 92       	push	r6
      f6:	7f 92       	push	r7
      f8:	8f 92       	push	r8
      fa:	9f 92       	push	r9
      fc:	af 92       	push	r10
      fe:	bf 92       	push	r11
     100:	cf 92       	push	r12
     102:	df 92       	push	r13
     104:	ef 92       	push	r14
     106:	ff 92       	push	r15
     108:	0f 93       	push	r16
     10a:	1f 93       	push	r17
     10c:	cf 93       	push	r28
     10e:	df 93       	push	r29
     110:	10 92 26 01 	sts	0x0126, r1
     114:	10 92 25 01 	sts	0x0125, r1
     118:	f8 94       	cli
     11a:	80 90 59 01 	lds	r8, 0x0159
     11e:	90 90 5a 01 	lds	r9, 0x015A
     122:	20 90 72 01 	lds	r2, 0x0172
     126:	30 90 73 01 	lds	r3, 0x0173
     12a:	78 94       	sei
     12c:	c0 90 25 01 	lds	r12, 0x0125
     130:	d0 90 26 01 	lds	r13, 0x0126
     134:	05 e0       	ldi	r16, 0x05	; 5
     136:	10 e0       	ldi	r17, 0x00	; 0
     138:	c0 e0       	ldi	r28, 0x00	; 0
     13a:	d0 e0       	ldi	r29, 0x00	; 0
     13c:	41 2c       	mov	r4, r1
     13e:	51 2c       	mov	r5, r1
     140:	32 01       	movw	r6, r4
     142:	0f 2e       	mov	r0, r31
     144:	f5 e0       	ldi	r31, 0x05	; 5
     146:	af 2e       	mov	r10, r31
     148:	b1 2c       	mov	r11, r1
     14a:	f0 2d       	mov	r31, r0
     14c:	c5 01       	movw	r24, r10
     14e:	80 1b       	sub	r24, r16
     150:	91 0b       	sbc	r25, r17
     152:	08 97       	sbiw	r24, 0x08	; 8
     154:	04 f5       	brge	.+64     	; 0x196 <linje_get_error+0xaa>
     156:	74 01       	movw	r14, r8
     158:	0c 2e       	mov	r0, r28
     15a:	02 c0       	rjmp	.+4      	; 0x160 <linje_get_error+0x74>
     15c:	f5 94       	asr	r15
     15e:	e7 94       	ror	r14
     160:	0a 94       	dec	r0
     162:	e2 f7       	brpl	.-8      	; 0x15c <linje_get_error+0x70>
     164:	83 e0       	ldi	r24, 0x03	; 3
     166:	e8 22       	and	r14, r24
     168:	ff 24       	eor	r15, r15
     16a:	0e 9d       	mul	r16, r14
     16c:	b0 01       	movw	r22, r0
     16e:	0f 9d       	mul	r16, r15
     170:	70 0d       	add	r23, r0
     172:	1e 9d       	mul	r17, r14
     174:	70 0d       	add	r23, r0
     176:	11 24       	eor	r1, r1
     178:	07 2e       	mov	r0, r23
     17a:	00 0c       	add	r0, r0
     17c:	88 0b       	sbc	r24, r24
     17e:	99 0b       	sbc	r25, r25
     180:	f1 d7       	rcall	.+4066   	; 0x1164 <__floatsisf>
     182:	9b 01       	movw	r18, r22
     184:	ac 01       	movw	r20, r24
     186:	c3 01       	movw	r24, r6
     188:	b2 01       	movw	r22, r4
     18a:	ed d6       	rcall	.+3546   	; 0xf66 <__addsf3>
     18c:	2b 01       	movw	r4, r22
     18e:	3c 01       	movw	r6, r24
     190:	ce 0c       	add	r12, r14
     192:	df 1c       	adc	r13, r15
     194:	20 c0       	rjmp	.+64     	; 0x1d6 <linje_get_error+0xea>
     196:	ce 01       	movw	r24, r28
     198:	40 97       	sbiw	r24, 0x10	; 16
     19a:	71 01       	movw	r14, r2
     19c:	02 c0       	rjmp	.+4      	; 0x1a2 <linje_get_error+0xb6>
     19e:	f5 94       	asr	r15
     1a0:	e7 94       	ror	r14
     1a2:	8a 95       	dec	r24
     1a4:	e2 f7       	brpl	.-8      	; 0x19e <linje_get_error+0xb2>
     1a6:	83 e0       	ldi	r24, 0x03	; 3
     1a8:	e8 22       	and	r14, r24
     1aa:	ff 24       	eor	r15, r15
     1ac:	0e 9d       	mul	r16, r14
     1ae:	b0 01       	movw	r22, r0
     1b0:	0f 9d       	mul	r16, r15
     1b2:	70 0d       	add	r23, r0
     1b4:	1e 9d       	mul	r17, r14
     1b6:	70 0d       	add	r23, r0
     1b8:	11 24       	eor	r1, r1
     1ba:	07 2e       	mov	r0, r23
     1bc:	00 0c       	add	r0, r0
     1be:	88 0b       	sbc	r24, r24
     1c0:	99 0b       	sbc	r25, r25
     1c2:	d0 d7       	rcall	.+4000   	; 0x1164 <__floatsisf>
     1c4:	9b 01       	movw	r18, r22
     1c6:	ac 01       	movw	r20, r24
     1c8:	c3 01       	movw	r24, r6
     1ca:	b2 01       	movw	r22, r4
     1cc:	cc d6       	rcall	.+3480   	; 0xf66 <__addsf3>
     1ce:	2b 01       	movw	r4, r22
     1d0:	3c 01       	movw	r6, r24
     1d2:	ce 0c       	add	r12, r14
     1d4:	df 1c       	adc	r13, r15
     1d6:	22 96       	adiw	r28, 0x02	; 2
     1d8:	01 50       	subi	r16, 0x01	; 1
     1da:	11 09       	sbc	r17, r1
     1dc:	c6 31       	cpi	r28, 0x16	; 22
     1de:	d1 05       	cpc	r29, r1
     1e0:	09 f0       	breq	.+2      	; 0x1e4 <linje_get_error+0xf8>
     1e2:	b4 cf       	rjmp	.-152    	; 0x14c <linje_get_error+0x60>
     1e4:	d0 92 26 01 	sts	0x0126, r13
     1e8:	c0 92 25 01 	sts	0x0125, r12
     1ec:	c1 14       	cp	r12, r1
     1ee:	d1 04       	cpc	r13, r1
     1f0:	59 f0       	breq	.+22     	; 0x208 <linje_get_error+0x11c>
     1f2:	b6 01       	movw	r22, r12
     1f4:	dd 0c       	add	r13, r13
     1f6:	88 0b       	sbc	r24, r24
     1f8:	99 0b       	sbc	r25, r25
     1fa:	b4 d7       	rcall	.+3944   	; 0x1164 <__floatsisf>
     1fc:	9b 01       	movw	r18, r22
     1fe:	ac 01       	movw	r20, r24
     200:	c3 01       	movw	r24, r6
     202:	b2 01       	movw	r22, r4
     204:	14 d7       	rcall	.+3624   	; 0x102e <__divsf3>
     206:	03 c0       	rjmp	.+6      	; 0x20e <linje_get_error+0x122>
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	cb 01       	movw	r24, r22
     20e:	77 d7       	rcall	.+3822   	; 0x10fe <__fixsfsi>
     210:	cb 01       	movw	r24, r22
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28
     216:	1f 91       	pop	r17
     218:	0f 91       	pop	r16
     21a:	ff 90       	pop	r15
     21c:	ef 90       	pop	r14
     21e:	df 90       	pop	r13
     220:	cf 90       	pop	r12
     222:	bf 90       	pop	r11
     224:	af 90       	pop	r10
     226:	9f 90       	pop	r9
     228:	8f 90       	pop	r8
     22a:	7f 90       	pop	r7
     22c:	6f 90       	pop	r6
     22e:	5f 90       	pop	r5
     230:	4f 90       	pop	r4
     232:	3f 90       	pop	r3
     234:	2f 90       	pop	r2
     236:	08 95       	ret

00000238 <linje_RGBsveng>:
     238:	cf 93       	push	r28
     23a:	df 93       	push	r29
     23c:	f8 94       	cli
     23e:	20 91 59 01 	lds	r18, 0x0159
     242:	30 91 5a 01 	lds	r19, 0x015A
     246:	40 91 72 01 	lds	r20, 0x0172
     24a:	50 91 73 01 	lds	r21, 0x0173
     24e:	78 94       	sei
     250:	80 91 66 01 	lds	r24, 0x0166
     254:	88 23       	and	r24, r24
     256:	09 f4       	brne	.+2      	; 0x25a <linje_RGBsveng+0x22>
     258:	95 c0       	rjmp	.+298    	; 0x384 <linje_RGBsveng+0x14c>
     25a:	60 91 23 01 	lds	r22, 0x0123
     25e:	70 91 24 01 	lds	r23, 0x0124
     262:	67 2b       	or	r22, r23
     264:	61 f4       	brne	.+24     	; 0x27e <linje_RGBsveng+0x46>
     266:	10 92 32 01 	sts	0x0132, r1
     26a:	10 92 31 01 	sts	0x0131, r1
     26e:	81 e0       	ldi	r24, 0x01	; 1
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	90 93 24 01 	sts	0x0124, r25
     276:	80 93 23 01 	sts	0x0123, r24
     27a:	80 e0       	ldi	r24, 0x00	; 0
     27c:	8a c0       	rjmp	.+276    	; 0x392 <linje_RGBsveng+0x15a>
     27e:	60 91 31 01 	lds	r22, 0x0131
     282:	70 91 32 01 	lds	r23, 0x0132
     286:	60 31       	cpi	r22, 0x10	; 16
     288:	71 05       	cpc	r23, r1
     28a:	0c f0       	brlt	.+2      	; 0x28e <linje_RGBsveng+0x56>
     28c:	6f c0       	rjmp	.+222    	; 0x36c <linje_RGBsveng+0x134>
     28e:	83 30       	cpi	r24, 0x03	; 3
     290:	69 f5       	brne	.+90     	; 0x2ec <linje_RGBsveng+0xb4>
     292:	a0 ef       	ldi	r26, 0xF0	; 240
     294:	bf ef       	ldi	r27, 0xFF	; 255
     296:	6b ef       	ldi	r22, 0xFB	; 251
     298:	e0 e0       	ldi	r30, 0x00	; 0
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	80 e0       	ldi	r24, 0x00	; 0
     29e:	81 11       	cpse	r24, r1
     2a0:	1f c0       	rjmp	.+62     	; 0x2e0 <linje_RGBsveng+0xa8>
     2a2:	e8 30       	cpi	r30, 0x08	; 8
     2a4:	f1 05       	cpc	r31, r1
     2a6:	84 f4       	brge	.+32     	; 0x2c8 <linje_RGBsveng+0x90>
     2a8:	cf 01       	movw	r24, r30
     2aa:	88 0f       	add	r24, r24
     2ac:	99 1f       	adc	r25, r25
     2ae:	e9 01       	movw	r28, r18
     2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <linje_RGBsveng+0x7e>
     2b2:	d5 95       	asr	r29
     2b4:	c7 95       	ror	r28
     2b6:	8a 95       	dec	r24
     2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <linje_RGBsveng+0x7a>
     2ba:	ce 01       	movw	r24, r28
     2bc:	86 95       	lsr	r24
     2be:	81 70       	andi	r24, 0x01	; 1
     2c0:	68 9f       	mul	r22, r24
     2c2:	80 2d       	mov	r24, r0
     2c4:	11 24       	eor	r1, r1
     2c6:	0c c0       	rjmp	.+24     	; 0x2e0 <linje_RGBsveng+0xa8>
     2c8:	ca 01       	movw	r24, r20
     2ca:	0a 2e       	mov	r0, r26
     2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <linje_RGBsveng+0x9a>
     2ce:	95 95       	asr	r25
     2d0:	87 95       	ror	r24
     2d2:	0a 94       	dec	r0
     2d4:	e2 f7       	brpl	.-8      	; 0x2ce <linje_RGBsveng+0x96>
     2d6:	86 95       	lsr	r24
     2d8:	81 70       	andi	r24, 0x01	; 1
     2da:	68 9f       	mul	r22, r24
     2dc:	80 2d       	mov	r24, r0
     2de:	11 24       	eor	r1, r1
     2e0:	31 96       	adiw	r30, 0x01	; 1
     2e2:	6f 5f       	subi	r22, 0xFF	; 255
     2e4:	12 96       	adiw	r26, 0x02	; 2
     2e6:	66 30       	cpi	r22, 0x06	; 6
     2e8:	d1 f6       	brne	.-76     	; 0x29e <linje_RGBsveng+0x66>
     2ea:	53 c0       	rjmp	.+166    	; 0x392 <linje_RGBsveng+0x15a>
     2ec:	82 30       	cpi	r24, 0x02	; 2
     2ee:	69 f4       	brne	.+26     	; 0x30a <linje_RGBsveng+0xd2>
     2f0:	20 7f       	andi	r18, 0xF0	; 240
     2f2:	30 93 5a 01 	sts	0x015A, r19
     2f6:	20 93 59 01 	sts	0x0159, r18
     2fa:	43 70       	andi	r20, 0x03	; 3
     2fc:	55 27       	eor	r21, r21
     2fe:	50 93 73 01 	sts	0x0173, r21
     302:	40 93 72 01 	sts	0x0172, r20
     306:	f2 de       	rcall	.-540    	; 0xec <linje_get_error>
     308:	44 c0       	rjmp	.+136    	; 0x392 <linje_RGBsveng+0x15a>
     30a:	81 30       	cpi	r24, 0x01	; 1
     30c:	b9 f5       	brne	.+110    	; 0x37c <linje_RGBsveng+0x144>
     30e:	a6 e0       	ldi	r26, 0x06	; 6
     310:	b0 e0       	ldi	r27, 0x00	; 0
     312:	e6 e0       	ldi	r30, 0x06	; 6
     314:	6b e0       	ldi	r22, 0x0B	; 11
     316:	70 e0       	ldi	r23, 0x00	; 0
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	81 11       	cpse	r24, r1
     31c:	1f c0       	rjmp	.+62     	; 0x35c <linje_RGBsveng+0x124>
     31e:	68 30       	cpi	r22, 0x08	; 8
     320:	71 05       	cpc	r23, r1
     322:	84 f4       	brge	.+32     	; 0x344 <linje_RGBsveng+0x10c>
     324:	cb 01       	movw	r24, r22
     326:	88 0f       	add	r24, r24
     328:	99 1f       	adc	r25, r25
     32a:	e9 01       	movw	r28, r18
     32c:	02 c0       	rjmp	.+4      	; 0x332 <linje_RGBsveng+0xfa>
     32e:	d5 95       	asr	r29
     330:	c7 95       	ror	r28
     332:	8a 95       	dec	r24
     334:	e2 f7       	brpl	.-8      	; 0x32e <linje_RGBsveng+0xf6>
     336:	ce 01       	movw	r24, r28
     338:	86 95       	lsr	r24
     33a:	81 70       	andi	r24, 0x01	; 1
     33c:	e8 9f       	mul	r30, r24
     33e:	80 2d       	mov	r24, r0
     340:	11 24       	eor	r1, r1
     342:	0c c0       	rjmp	.+24     	; 0x35c <linje_RGBsveng+0x124>
     344:	ca 01       	movw	r24, r20
     346:	0a 2e       	mov	r0, r26
     348:	02 c0       	rjmp	.+4      	; 0x34e <linje_RGBsveng+0x116>
     34a:	95 95       	asr	r25
     34c:	87 95       	ror	r24
     34e:	0a 94       	dec	r0
     350:	e2 f7       	brpl	.-8      	; 0x34a <linje_RGBsveng+0x112>
     352:	86 95       	lsr	r24
     354:	81 70       	andi	r24, 0x01	; 1
     356:	e8 9f       	mul	r30, r24
     358:	80 2d       	mov	r24, r0
     35a:	11 24       	eor	r1, r1
     35c:	61 50       	subi	r22, 0x01	; 1
     35e:	71 09       	sbc	r23, r1
     360:	e1 50       	subi	r30, 0x01	; 1
     362:	12 97       	sbiw	r26, 0x02	; 2
     364:	61 15       	cp	r22, r1
     366:	71 05       	cpc	r23, r1
     368:	c1 f6       	brne	.-80     	; 0x31a <linje_RGBsveng+0xe2>
     36a:	13 c0       	rjmp	.+38     	; 0x392 <linje_RGBsveng+0x15a>
     36c:	10 92 66 01 	sts	0x0166, r1
     370:	10 92 24 01 	sts	0x0124, r1
     374:	10 92 23 01 	sts	0x0123, r1
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	0b c0       	rjmp	.+22     	; 0x392 <linje_RGBsveng+0x15a>
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	09 c0       	rjmp	.+18     	; 0x392 <linje_RGBsveng+0x15a>
     380:	80 e0       	ldi	r24, 0x00	; 0
     382:	07 c0       	rjmp	.+14     	; 0x392 <linje_RGBsveng+0x15a>
     384:	80 91 31 01 	lds	r24, 0x0131
     388:	90 91 32 01 	lds	r25, 0x0132
     38c:	40 97       	sbiw	r24, 0x10	; 16
     38e:	c4 f3       	brlt	.-16     	; 0x380 <linje_RGBsveng+0x148>
     390:	ed cf       	rjmp	.-38     	; 0x36c <linje_RGBsveng+0x134>
     392:	df 91       	pop	r29
     394:	cf 91       	pop	r28
     396:	08 95       	ret

00000398 <sekvens_goal_detekted>:
     398:	a9 de       	rcall	.-686    	; 0xec <linje_get_error>
     39a:	80 91 25 01 	lds	r24, 0x0125
     39e:	90 91 26 01 	lds	r25, 0x0126
     3a2:	4d 97       	sbiw	r24, 0x1d	; 29
     3a4:	1c f0       	brlt	.+6      	; 0x3ac <sekvens_goal_detekted+0x14>
     3a6:	59 9a       	sbi	0x0b, 1	; 11
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	08 95       	ret
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	08 95       	ret

000003b0 <detect_goal>:
     3b0:	f3 df       	rcall	.-26     	; 0x398 <sekvens_goal_detekted>
     3b2:	88 23       	and	r24, r24
     3b4:	91 f0       	breq	.+36     	; 0x3da <detect_goal+0x2a>
     3b6:	80 91 10 01 	lds	r24, 0x0110
     3ba:	90 91 11 01 	lds	r25, 0x0111
     3be:	89 2b       	or	r24, r25
     3c0:	61 f4       	brne	.+24     	; 0x3da <detect_goal+0x2a>
     3c2:	10 92 2e 01 	sts	0x012E, r1
     3c6:	10 92 2d 01 	sts	0x012D, r1
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	90 93 11 01 	sts	0x0111, r25
     3d2:	80 93 10 01 	sts	0x0110, r24
     3d6:	80 e0       	ldi	r24, 0x00	; 0
     3d8:	08 95       	ret
     3da:	de df       	rcall	.-68     	; 0x398 <sekvens_goal_detekted>
     3dc:	88 23       	and	r24, r24
     3de:	a1 f0       	breq	.+40     	; 0x408 <detect_goal+0x58>
     3e0:	80 91 10 01 	lds	r24, 0x0110
     3e4:	90 91 11 01 	lds	r25, 0x0111
     3e8:	01 97       	sbiw	r24, 0x01	; 1
     3ea:	71 f4       	brne	.+28     	; 0x408 <detect_goal+0x58>
     3ec:	80 91 2d 01 	lds	r24, 0x012D
     3f0:	90 91 2e 01 	lds	r25, 0x012E
     3f4:	44 97       	sbiw	r24, 0x14	; 20
     3f6:	44 f4       	brge	.+16     	; 0x408 <detect_goal+0x58>
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	90 93 11 01 	sts	0x0111, r25
     400:	80 93 10 01 	sts	0x0110, r24
     404:	80 e0       	ldi	r24, 0x00	; 0
     406:	08 95       	ret
     408:	c7 df       	rcall	.-114    	; 0x398 <sekvens_goal_detekted>
     40a:	88 23       	and	r24, r24
     40c:	99 f0       	breq	.+38     	; 0x434 <detect_goal+0x84>
     40e:	20 91 10 01 	lds	r18, 0x0110
     412:	30 91 11 01 	lds	r19, 0x0111
     416:	22 30       	cpi	r18, 0x02	; 2
     418:	31 05       	cpc	r19, r1
     41a:	61 f4       	brne	.+24     	; 0x434 <detect_goal+0x84>
     41c:	20 91 2d 01 	lds	r18, 0x012D
     420:	30 91 2e 01 	lds	r19, 0x012E
     424:	24 31       	cpi	r18, 0x14	; 20
     426:	31 05       	cpc	r19, r1
     428:	5c f4       	brge	.+22     	; 0x440 <detect_goal+0x90>
     42a:	10 92 11 01 	sts	0x0111, r1
     42e:	10 92 10 01 	sts	0x0110, r1
     432:	08 95       	ret
     434:	80 91 2d 01 	lds	r24, 0x012D
     438:	90 91 2e 01 	lds	r25, 0x012E
     43c:	44 97       	sbiw	r24, 0x14	; 20
     43e:	34 f0       	brlt	.+12     	; 0x44c <detect_goal+0x9c>
     440:	10 92 11 01 	sts	0x0111, r1
     444:	10 92 10 01 	sts	0x0110, r1
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	08 95       	ret
     44c:	08 95       	ret

0000044e <linje_main>:
     44e:	80 91 66 01 	lds	r24, 0x0166
     452:	81 50       	subi	r24, 0x01	; 1
     454:	83 30       	cpi	r24, 0x03	; 3
     456:	80 f4       	brcc	.+32     	; 0x478 <linje_main+0x2a>
     458:	ef de       	rcall	.-546    	; 0x238 <linje_RGBsveng>
     45a:	68 2f       	mov	r22, r24
     45c:	88 0f       	add	r24, r24
     45e:	77 0b       	sbc	r23, r23
     460:	88 0b       	sbc	r24, r24
     462:	99 0b       	sbc	r25, r25
     464:	7f d6       	rcall	.+3326   	; 0x1164 <__floatsisf>
     466:	60 93 13 01 	sts	0x0113, r22
     46a:	70 93 14 01 	sts	0x0114, r23
     46e:	80 93 15 01 	sts	0x0115, r24
     472:	90 93 16 01 	sts	0x0116, r25
     476:	08 95       	ret
     478:	9b df       	rcall	.-202    	; 0x3b0 <detect_goal>
     47a:	88 23       	and	r24, r24
     47c:	31 f0       	breq	.+12     	; 0x48a <linje_main+0x3c>
     47e:	10 92 3a 01 	sts	0x013A, r1
     482:	10 92 39 01 	sts	0x0139, r1
     486:	59 9a       	sbi	0x0b, 1	; 11
     488:	08 95       	ret
     48a:	30 de       	rcall	.-928    	; 0xec <linje_get_error>
     48c:	bc 01       	movw	r22, r24
     48e:	99 0f       	add	r25, r25
     490:	88 0b       	sbc	r24, r24
     492:	99 0b       	sbc	r25, r25
     494:	67 d6       	rcall	.+3278   	; 0x1164 <__floatsisf>
     496:	60 93 13 01 	sts	0x0113, r22
     49a:	70 93 14 01 	sts	0x0114, r23
     49e:	80 93 15 01 	sts	0x0115, r24
     4a2:	90 93 16 01 	sts	0x0116, r25
     4a6:	08 95       	ret

000004a8 <turn_left>:
     4a8:	2d 98       	cbi	0x05, 5	; 5
     4aa:	2e 9a       	sbi	0x05, 6	; 5
     4ac:	86 e4       	ldi	r24, 0x46	; 70
     4ae:	87 bd       	out	0x27, r24	; 39
     4b0:	8c e3       	ldi	r24, 0x3C	; 60
     4b2:	88 bd       	out	0x28, r24	; 40
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	80 93 27 01 	sts	0x0127, r24
     4ba:	08 95       	ret

000004bc <turn_right>:
     4bc:	2d 9a       	sbi	0x05, 5	; 5
     4be:	2e 98       	cbi	0x05, 6	; 5
     4c0:	86 e4       	ldi	r24, 0x46	; 70
     4c2:	87 bd       	out	0x27, r24	; 39
     4c4:	8c e3       	ldi	r24, 0x3C	; 60
     4c6:	88 bd       	out	0x28, r24	; 40
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	80 93 27 01 	sts	0x0127, r24
     4ce:	08 95       	ret

000004d0 <initengine>:
     4d0:	84 b5       	in	r24, 0x24	; 36
     4d2:	83 6a       	ori	r24, 0xA3	; 163
     4d4:	84 bd       	out	0x24, r24	; 36
     4d6:	17 bc       	out	0x27, r1	; 39
     4d8:	18 bc       	out	0x28, r1	; 40
     4da:	85 b5       	in	r24, 0x25	; 37
     4dc:	83 60       	ori	r24, 0x03	; 3
     4de:	85 bd       	out	0x25, r24	; 37
     4e0:	88 e7       	ldi	r24, 0x78	; 120
     4e2:	84 b9       	out	0x04, r24	; 4
     4e4:	85 b1       	in	r24, 0x05	; 5
     4e6:	15 b8       	out	0x05, r1	; 5
     4e8:	08 95       	ret

000004ea <timerinit>:
     4ea:	83 e0       	ldi	r24, 0x03	; 3
     4ec:	8a b9       	out	0x0a, r24	; 10
     4ee:	e1 e8       	ldi	r30, 0x81	; 129
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	80 81       	ld	r24, Z
     4f4:	8d 60       	ori	r24, 0x0D	; 13
     4f6:	80 83       	st	Z, r24
     4f8:	80 ea       	ldi	r24, 0xA0	; 160
     4fa:	95 e0       	ldi	r25, 0x05	; 5
     4fc:	90 93 89 00 	sts	0x0089, r25
     500:	80 93 88 00 	sts	0x0088, r24
     504:	ef e6       	ldi	r30, 0x6F	; 111
     506:	f0 e0       	ldi	r31, 0x00	; 0
     508:	80 81       	ld	r24, Z
     50a:	82 60       	ori	r24, 0x02	; 2
     50c:	80 83       	st	Z, r24
     50e:	b1 9a       	sbi	0x16, 1	; 22
     510:	08 95       	ret

00000512 <__vector_13>:
     512:	1f 92       	push	r1
     514:	0f 92       	push	r0
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	0f 92       	push	r0
     51a:	11 24       	eor	r1, r1
     51c:	8f 93       	push	r24
     51e:	9f 93       	push	r25
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	80 93 28 01 	sts	0x0128, r24
     526:	80 91 2f 01 	lds	r24, 0x012F
     52a:	90 91 30 01 	lds	r25, 0x0130
     52e:	01 96       	adiw	r24, 0x01	; 1
     530:	82 33       	cpi	r24, 0x32	; 50
     532:	91 05       	cpc	r25, r1
     534:	2c f4       	brge	.+10     	; 0x540 <__vector_13+0x2e>
     536:	90 93 30 01 	sts	0x0130, r25
     53a:	80 93 2f 01 	sts	0x012F, r24
     53e:	06 c0       	rjmp	.+12     	; 0x54c <__vector_13+0x3a>
     540:	82 e3       	ldi	r24, 0x32	; 50
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	90 93 30 01 	sts	0x0130, r25
     548:	80 93 2f 01 	sts	0x012F, r24
     54c:	80 91 31 01 	lds	r24, 0x0131
     550:	90 91 32 01 	lds	r25, 0x0132
     554:	01 96       	adiw	r24, 0x01	; 1
     556:	82 33       	cpi	r24, 0x32	; 50
     558:	91 05       	cpc	r25, r1
     55a:	2c f4       	brge	.+10     	; 0x566 <__vector_13+0x54>
     55c:	90 93 32 01 	sts	0x0132, r25
     560:	80 93 31 01 	sts	0x0131, r24
     564:	06 c0       	rjmp	.+12     	; 0x572 <__vector_13+0x60>
     566:	82 e3       	ldi	r24, 0x32	; 50
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	90 93 32 01 	sts	0x0132, r25
     56e:	80 93 31 01 	sts	0x0131, r24
     572:	80 91 2d 01 	lds	r24, 0x012D
     576:	90 91 2e 01 	lds	r25, 0x012E
     57a:	01 96       	adiw	r24, 0x01	; 1
     57c:	82 33       	cpi	r24, 0x32	; 50
     57e:	91 05       	cpc	r25, r1
     580:	2c f4       	brge	.+10     	; 0x58c <__vector_13+0x7a>
     582:	90 93 2e 01 	sts	0x012E, r25
     586:	80 93 2d 01 	sts	0x012D, r24
     58a:	06 c0       	rjmp	.+12     	; 0x598 <__vector_13+0x86>
     58c:	82 e3       	ldi	r24, 0x32	; 50
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	90 93 2e 01 	sts	0x012E, r25
     594:	80 93 2d 01 	sts	0x012D, r24
     598:	80 91 33 01 	lds	r24, 0x0133
     59c:	90 91 34 01 	lds	r25, 0x0134
     5a0:	01 96       	adiw	r24, 0x01	; 1
     5a2:	90 93 34 01 	sts	0x0134, r25
     5a6:	80 93 33 01 	sts	0x0133, r24
     5aa:	9f 91       	pop	r25
     5ac:	8f 91       	pop	r24
     5ae:	0f 90       	pop	r0
     5b0:	0f be       	out	0x3f, r0	; 63
     5b2:	0f 90       	pop	r0
     5b4:	1f 90       	pop	r1
     5b6:	18 95       	reti

000005b8 <interrupt_init>:
     5b8:	8d b3       	in	r24, 0x1d	; 29
     5ba:	86 60       	ori	r24, 0x06	; 6
     5bc:	8d bb       	out	0x1d, r24	; 29
     5be:	e9 e6       	ldi	r30, 0x69	; 105
     5c0:	f0 e0       	ldi	r31, 0x00	; 0
     5c2:	80 81       	ld	r24, Z
     5c4:	88 62       	ori	r24, 0x28	; 40
     5c6:	80 83       	st	Z, r24
     5c8:	08 95       	ret

000005ca <__vector_2>:
     5ca:	1f 92       	push	r1
     5cc:	0f 92       	push	r0
     5ce:	0f b6       	in	r0, 0x3f	; 63
     5d0:	0f 92       	push	r0
     5d2:	11 24       	eor	r1, r1
     5d4:	8f 93       	push	r24
     5d6:	9f 93       	push	r25
     5d8:	80 91 3b 01 	lds	r24, 0x013B
     5dc:	90 91 3c 01 	lds	r25, 0x013C
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	39 f4       	brne	.+14     	; 0x5f2 <__vector_2+0x28>
     5e4:	10 92 3c 01 	sts	0x013C, r1
     5e8:	10 92 3b 01 	sts	0x013B, r1
     5ec:	59 9a       	sbi	0x0b, 1	; 11
     5ee:	58 98       	cbi	0x0b, 0	; 11
     5f0:	0c c0       	rjmp	.+24     	; 0x60a <__vector_2+0x40>
     5f2:	10 92 3a 01 	sts	0x013A, r1
     5f6:	10 92 39 01 	sts	0x0139, r1
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	90 93 3c 01 	sts	0x013C, r25
     602:	80 93 3b 01 	sts	0x013B, r24
     606:	58 9a       	sbi	0x0b, 0	; 11
     608:	59 98       	cbi	0x0b, 1	; 11
     60a:	e1 9a       	sbi	0x1c, 1	; 28
     60c:	9f 91       	pop	r25
     60e:	8f 91       	pop	r24
     610:	0f 90       	pop	r0
     612:	0f be       	out	0x3f, r0	; 63
     614:	0f 90       	pop	r0
     616:	1f 90       	pop	r1
     618:	18 95       	reti

0000061a <__vector_3>:
     61a:	1f 92       	push	r1
     61c:	0f 92       	push	r0
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	0f 92       	push	r0
     622:	11 24       	eor	r1, r1
     624:	8f 93       	push	r24
     626:	9f 93       	push	r25
     628:	80 91 39 01 	lds	r24, 0x0139
     62c:	90 91 3a 01 	lds	r25, 0x013A
     630:	89 2b       	or	r24, r25
     632:	39 f4       	brne	.+14     	; 0x642 <__vector_3+0x28>
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	90 93 3a 01 	sts	0x013A, r25
     63c:	80 93 39 01 	sts	0x0139, r24
     640:	04 c0       	rjmp	.+8      	; 0x64a <__vector_3+0x30>
     642:	10 92 3a 01 	sts	0x013A, r1
     646:	10 92 39 01 	sts	0x0139, r1
     64a:	e2 9a       	sbi	0x1c, 2	; 28
     64c:	9f 91       	pop	r25
     64e:	8f 91       	pop	r24
     650:	0f 90       	pop	r0
     652:	0f be       	out	0x3f, r0	; 63
     654:	0f 90       	pop	r0
     656:	1f 90       	pop	r1
     658:	18 95       	reti

0000065a <i2c_setup>:
     65a:	88 23       	and	r24, r24
     65c:	69 f0       	breq	.+26     	; 0x678 <i2c_setup+0x1e>
     65e:	3e 98       	cbi	0x07, 6	; 7
     660:	3f 98       	cbi	0x07, 7	; 7
     662:	e8 9a       	sbi	0x1d, 0	; 29
     664:	e9 e6       	ldi	r30, 0x69	; 105
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	83 60       	ori	r24, 0x03	; 3
     66c:	80 83       	st	Z, r24
     66e:	80 e1       	ldi	r24, 0x10	; 16
     670:	80 93 b8 00 	sts	0x00B8, r24
     674:	10 92 b9 00 	sts	0x00B9, r1
     678:	08 95       	ret

0000067a <i2c_send>:
     67a:	8f 92       	push	r8
     67c:	9f 92       	push	r9
     67e:	af 92       	push	r10
     680:	bf 92       	push	r11
     682:	cf 92       	push	r12
     684:	df 92       	push	r13
     686:	ef 92       	push	r14
     688:	ff 92       	push	r15
     68a:	0f 93       	push	r16
     68c:	1f 93       	push	r17
     68e:	cf 93       	push	r28
     690:	df 93       	push	r29
     692:	eb 01       	movw	r28, r22
     694:	08 81       	ld	r16, Y
     696:	02 95       	swap	r16
     698:	0f 70       	andi	r16, 0x0F	; 15
     69a:	10 e0       	ldi	r17, 0x00	; 0
     69c:	4b 01       	movw	r8, r22
     69e:	68 94       	set
     6a0:	ee 24       	eor	r14, r14
     6a2:	e3 f8       	bld	r14, 3
     6a4:	f1 2c       	mov	r15, r1
     6a6:	40 e0       	ldi	r20, 0x00	; 0
     6a8:	50 e0       	ldi	r21, 0x00	; 0
     6aa:	ec eb       	ldi	r30, 0xBC	; 188
     6ac:	f0 e0       	ldi	r31, 0x00	; 0
     6ae:	0f 2e       	mov	r0, r31
     6b0:	f4 ea       	ldi	r31, 0xA4	; 164
     6b2:	df 2e       	mov	r13, r31
     6b4:	f0 2d       	mov	r31, r0
     6b6:	a9 eb       	ldi	r26, 0xB9	; 185
     6b8:	b0 e0       	ldi	r27, 0x00	; 0
     6ba:	8e 7f       	andi	r24, 0xFE	; 254
     6bc:	c8 2e       	mov	r12, r24
     6be:	6b eb       	ldi	r22, 0xBB	; 187
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	84 e8       	ldi	r24, 0x84	; 132
     6c4:	68 94       	set
     6c6:	aa 24       	eor	r10, r10
     6c8:	a4 f8       	bld	r10, 4
     6ca:	b1 2c       	mov	r11, r1
     6cc:	d0 82       	st	Z, r13
     6ce:	90 81       	ld	r25, Z
     6d0:	99 23       	and	r25, r25
     6d2:	ec f7       	brge	.-6      	; 0x6ce <i2c_send+0x54>
     6d4:	2c 91       	ld	r18, X
     6d6:	28 7f       	andi	r18, 0xF8	; 248
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	2e 15       	cp	r18, r14
     6dc:	3f 05       	cpc	r19, r15
     6de:	69 f5       	brne	.+90     	; 0x73a <i2c_send+0xc0>
     6e0:	eb 01       	movw	r28, r22
     6e2:	c8 82       	st	Y, r12
     6e4:	80 83       	st	Z, r24
     6e6:	90 81       	ld	r25, Z
     6e8:	99 23       	and	r25, r25
     6ea:	ec f7       	brge	.-6      	; 0x6e6 <i2c_send+0x6c>
     6ec:	9c 91       	ld	r25, X
     6ee:	98 7f       	andi	r25, 0xF8	; 248
     6f0:	98 31       	cpi	r25, 0x18	; 24
     6f2:	29 f0       	breq	.+10     	; 0x6fe <i2c_send+0x84>
     6f4:	84 e9       	ldi	r24, 0x94	; 148
     6f6:	80 93 bc 00 	sts	0x00BC, r24
     6fa:	80 e0       	ldi	r24, 0x00	; 0
     6fc:	1f c0       	rjmp	.+62     	; 0x73c <i2c_send+0xc2>
     6fe:	e4 01       	movw	r28, r8
     700:	99 91       	ld	r25, Y+
     702:	4e 01       	movw	r8, r28
     704:	eb 01       	movw	r28, r22
     706:	98 83       	st	Y, r25
     708:	80 83       	st	Z, r24
     70a:	90 81       	ld	r25, Z
     70c:	99 23       	and	r25, r25
     70e:	ec f7       	brge	.-6      	; 0x70a <i2c_send+0x90>
     710:	9c 91       	ld	r25, X
     712:	98 7f       	andi	r25, 0xF8	; 248
     714:	98 32       	cpi	r25, 0x28	; 40
     716:	29 f0       	breq	.+10     	; 0x722 <i2c_send+0xa8>
     718:	84 e9       	ldi	r24, 0x94	; 148
     71a:	80 93 bc 00 	sts	0x00BC, r24
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	0d c0       	rjmp	.+26     	; 0x73c <i2c_send+0xc2>
     722:	4f 5f       	subi	r20, 0xFF	; 255
     724:	5f 4f       	sbci	r21, 0xFF	; 255
     726:	ea 2c       	mov	r14, r10
     728:	fb 2c       	mov	r15, r11
     72a:	04 17       	cp	r16, r20
     72c:	15 07       	cpc	r17, r21
     72e:	74 f6       	brge	.-100    	; 0x6cc <i2c_send+0x52>
     730:	84 e9       	ldi	r24, 0x94	; 148
     732:	80 93 bc 00 	sts	0x00BC, r24
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	01 c0       	rjmp	.+2      	; 0x73c <i2c_send+0xc2>
     73a:	80 e0       	ldi	r24, 0x00	; 0
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	1f 91       	pop	r17
     742:	0f 91       	pop	r16
     744:	ff 90       	pop	r15
     746:	ef 90       	pop	r14
     748:	df 90       	pop	r13
     74a:	cf 90       	pop	r12
     74c:	bf 90       	pop	r11
     74e:	af 90       	pop	r10
     750:	9f 90       	pop	r9
     752:	8f 90       	pop	r8
     754:	08 95       	ret

00000756 <req_gyro_turn>:
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
     75a:	1f 92       	push	r1
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62
     760:	87 e0       	ldi	r24, 0x07	; 7
     762:	89 83       	std	Y+1, r24	; 0x01
     764:	be 01       	movw	r22, r28
     766:	6f 5f       	subi	r22, 0xFF	; 255
     768:	7f 4f       	sbci	r23, 0xFF	; 255
     76a:	86 e0       	ldi	r24, 0x06	; 6
     76c:	86 df       	rcall	.-244    	; 0x67a <i2c_send>
     76e:	81 e0       	ldi	r24, 0x01	; 1
     770:	80 93 27 01 	sts	0x0127, r24
     774:	87 ea       	ldi	r24, 0xA7	; 167
     776:	91 e6       	ldi	r25, 0x61	; 97
     778:	01 97       	sbiw	r24, 0x01	; 1
     77a:	f1 f7       	brne	.-4      	; 0x778 <req_gyro_turn+0x22>
     77c:	00 c0       	rjmp	.+0      	; 0x77e <req_gyro_turn+0x28>
     77e:	00 00       	nop
     780:	0f 90       	pop	r0
     782:	df 91       	pop	r29
     784:	cf 91       	pop	r28
     786:	08 95       	ret

00000788 <manual_drive>:
     788:	20 91 1f 01 	lds	r18, 0x011F
     78c:	30 91 20 01 	lds	r19, 0x0120
     790:	21 30       	cpi	r18, 0x01	; 1
     792:	31 05       	cpc	r19, r1
     794:	59 f4       	brne	.+22     	; 0x7ac <manual_drive+0x24>
     796:	86 e0       	ldi	r24, 0x06	; 6
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	90 93 22 01 	sts	0x0122, r25
     79e:	80 93 21 01 	sts	0x0121, r24
     7a2:	80 91 3f 01 	lds	r24, 0x013F
     7a6:	81 11       	cpse	r24, r1
     7a8:	8b c0       	rjmp	.+278    	; 0x8c0 <manual_drive+0x138>
     7aa:	08 95       	ret
     7ac:	80 91 1d 01 	lds	r24, 0x011D
     7b0:	90 91 1e 01 	lds	r25, 0x011E
     7b4:	01 97       	sbiw	r24, 0x01	; 1
     7b6:	71 f4       	brne	.+28     	; 0x7d4 <manual_drive+0x4c>
     7b8:	85 e0       	ldi	r24, 0x05	; 5
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	90 93 22 01 	sts	0x0122, r25
     7c0:	80 93 21 01 	sts	0x0121, r24
     7c4:	80 91 1d 01 	lds	r24, 0x011D
     7c8:	90 91 1e 01 	lds	r25, 0x011E
     7cc:	00 97       	sbiw	r24, 0x00	; 0
     7ce:	09 f0       	breq	.+2      	; 0x7d2 <manual_drive+0x4a>
     7d0:	59 c0       	rjmp	.+178    	; 0x884 <manual_drive+0xfc>
     7d2:	4f c0       	rjmp	.+158    	; 0x872 <manual_drive+0xea>
     7d4:	80 91 21 01 	lds	r24, 0x0121
     7d8:	90 91 22 01 	lds	r25, 0x0122
     7dc:	00 97       	sbiw	r24, 0x00	; 0
     7de:	29 f4       	brne	.+10     	; 0x7ea <manual_drive+0x62>
     7e0:	2e 98       	cbi	0x05, 6	; 5
     7e2:	2d 98       	cbi	0x05, 5	; 5
     7e4:	17 bc       	out	0x27, r1	; 39
     7e6:	18 bc       	out	0x28, r1	; 40
     7e8:	08 95       	ret
     7ea:	81 30       	cpi	r24, 0x01	; 1
     7ec:	91 05       	cpc	r25, r1
     7ee:	49 f4       	brne	.+18     	; 0x802 <manual_drive+0x7a>
     7f0:	2e 98       	cbi	0x05, 6	; 5
     7f2:	2d 98       	cbi	0x05, 5	; 5
     7f4:	80 91 37 01 	lds	r24, 0x0137
     7f8:	87 bd       	out	0x27, r24	; 39
     7fa:	80 91 35 01 	lds	r24, 0x0135
     7fe:	88 bd       	out	0x28, r24	; 40
     800:	08 95       	ret
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	91 05       	cpc	r25, r1
     806:	59 f4       	brne	.+22     	; 0x81e <manual_drive+0x96>
     808:	85 b1       	in	r24, 0x05	; 5
     80a:	80 66       	ori	r24, 0x60	; 96
     80c:	85 b9       	out	0x05, r24	; 5
     80e:	80 91 37 01 	lds	r24, 0x0137
     812:	8d 50       	subi	r24, 0x0D	; 13
     814:	87 bd       	out	0x27, r24	; 39
     816:	80 91 35 01 	lds	r24, 0x0135
     81a:	88 bd       	out	0x28, r24	; 40
     81c:	08 95       	ret
     81e:	83 30       	cpi	r24, 0x03	; 3
     820:	91 05       	cpc	r25, r1
     822:	81 f4       	brne	.+32     	; 0x844 <manual_drive+0xbc>
     824:	2e 98       	cbi	0x05, 6	; 5
     826:	2d 98       	cbi	0x05, 5	; 5
     828:	80 91 37 01 	lds	r24, 0x0137
     82c:	87 bd       	out	0x27, r24	; 39
     82e:	20 91 35 01 	lds	r18, 0x0135
     832:	90 91 36 01 	lds	r25, 0x0136
     836:	82 2f       	mov	r24, r18
     838:	63 e0       	ldi	r22, 0x03	; 3
     83a:	70 e0       	ldi	r23, 0x00	; 0
     83c:	82 d5       	rcall	.+2820   	; 0x1342 <__divmodhi4>
     83e:	26 1b       	sub	r18, r22
     840:	28 bd       	out	0x28, r18	; 40
     842:	08 95       	ret
     844:	84 30       	cpi	r24, 0x04	; 4
     846:	91 05       	cpc	r25, r1
     848:	81 f4       	brne	.+32     	; 0x86a <manual_drive+0xe2>
     84a:	2e 98       	cbi	0x05, 6	; 5
     84c:	2d 98       	cbi	0x05, 5	; 5
     84e:	20 91 37 01 	lds	r18, 0x0137
     852:	90 91 38 01 	lds	r25, 0x0138
     856:	82 2f       	mov	r24, r18
     858:	63 e0       	ldi	r22, 0x03	; 3
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	72 d5       	rcall	.+2788   	; 0x1342 <__divmodhi4>
     85e:	26 1b       	sub	r18, r22
     860:	27 bd       	out	0x27, r18	; 39
     862:	80 91 35 01 	lds	r24, 0x0135
     866:	88 bd       	out	0x28, r24	; 40
     868:	08 95       	ret
     86a:	85 30       	cpi	r24, 0x05	; 5
     86c:	91 05       	cpc	r25, r1
     86e:	d9 f4       	brne	.+54     	; 0x8a6 <manual_drive+0x11e>
     870:	37 c0       	rjmp	.+110    	; 0x8e0 <manual_drive+0x158>
     872:	71 df       	rcall	.-286    	; 0x756 <req_gyro_turn>
     874:	23 de       	rcall	.-954    	; 0x4bc <turn_right>
     876:	81 e0       	ldi	r24, 0x01	; 1
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	90 93 1e 01 	sts	0x011E, r25
     87e:	80 93 1d 01 	sts	0x011D, r24
     882:	08 95       	ret
     884:	01 97       	sbiw	r24, 0x01	; 1
     886:	99 f5       	brne	.+102    	; 0x8ee <manual_drive+0x166>
     888:	80 91 3f 01 	lds	r24, 0x013F
     88c:	88 23       	and	r24, r24
     88e:	79 f1       	breq	.+94     	; 0x8ee <manual_drive+0x166>
     890:	10 92 22 01 	sts	0x0122, r1
     894:	10 92 21 01 	sts	0x0121, r1
     898:	10 92 1e 01 	sts	0x011E, r1
     89c:	10 92 1d 01 	sts	0x011D, r1
     8a0:	10 92 3f 01 	sts	0x013F, r1
     8a4:	08 95       	ret
     8a6:	06 97       	sbiw	r24, 0x06	; 6
     8a8:	b1 f4       	brne	.+44     	; 0x8d6 <manual_drive+0x14e>
     8aa:	23 2b       	or	r18, r19
     8ac:	01 f5       	brne	.+64     	; 0x8ee <manual_drive+0x166>
     8ae:	53 df       	rcall	.-346    	; 0x756 <req_gyro_turn>
     8b0:	fb dd       	rcall	.-1034   	; 0x4a8 <turn_left>
     8b2:	81 e0       	ldi	r24, 0x01	; 1
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	90 93 20 01 	sts	0x0120, r25
     8ba:	80 93 1f 01 	sts	0x011F, r24
     8be:	08 95       	ret
     8c0:	10 92 22 01 	sts	0x0122, r1
     8c4:	10 92 21 01 	sts	0x0121, r1
     8c8:	10 92 20 01 	sts	0x0120, r1
     8cc:	10 92 1f 01 	sts	0x011F, r1
     8d0:	10 92 3f 01 	sts	0x013F, r1
     8d4:	08 95       	ret
     8d6:	10 92 22 01 	sts	0x0122, r1
     8da:	10 92 21 01 	sts	0x0121, r1
     8de:	08 95       	ret
     8e0:	80 91 1d 01 	lds	r24, 0x011D
     8e4:	90 91 1e 01 	lds	r25, 0x011E
     8e8:	89 2b       	or	r24, r25
     8ea:	09 f4       	brne	.+2      	; 0x8ee <manual_drive+0x166>
     8ec:	c2 cf       	rjmp	.-124    	; 0x872 <manual_drive+0xea>
     8ee:	08 95       	ret

000008f0 <PD_for_lab>:
     8f0:	2f 92       	push	r2
     8f2:	3f 92       	push	r3
     8f4:	4f 92       	push	r4
     8f6:	5f 92       	push	r5
     8f8:	6f 92       	push	r6
     8fa:	7f 92       	push	r7
     8fc:	8f 92       	push	r8
     8fe:	9f 92       	push	r9
     900:	af 92       	push	r10
     902:	bf 92       	push	r11
     904:	cf 92       	push	r12
     906:	df 92       	push	r13
     908:	ef 92       	push	r14
     90a:	ff 92       	push	r15
     90c:	0f 93       	push	r16
     90e:	1f 93       	push	r17
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	cd b7       	in	r28, 0x3d	; 61
     916:	de b7       	in	r29, 0x3e	; 62
     918:	2a 97       	sbiw	r28, 0x0a	; 10
     91a:	0f b6       	in	r0, 0x3f	; 63
     91c:	f8 94       	cli
     91e:	de bf       	out	0x3e, r29	; 62
     920:	0f be       	out	0x3f, r0	; 63
     922:	cd bf       	out	0x3d, r28	; 61
     924:	4c 01       	movw	r8, r24
     926:	3a 01       	movw	r6, r20
     928:	e0 90 06 01 	lds	r14, 0x0106
     92c:	f0 90 07 01 	lds	r15, 0x0107
     930:	c7 01       	movw	r24, r14
     932:	86 1b       	sub	r24, r22
     934:	97 0b       	sbc	r25, r23
     936:	9a 87       	std	Y+10, r25	; 0x0a
     938:	89 87       	std	Y+9, r24	; 0x09
     93a:	40 90 17 01 	lds	r4, 0x0117
     93e:	50 90 18 01 	lds	r5, 0x0118
     942:	a0 90 0a 01 	lds	r10, 0x010A
     946:	b0 90 0b 01 	lds	r11, 0x010B
     94a:	60 91 08 01 	lds	r22, 0x0108
     94e:	70 91 09 01 	lds	r23, 0x0109
     952:	07 2e       	mov	r0, r23
     954:	00 0c       	add	r0, r0
     956:	88 0b       	sbc	r24, r24
     958:	99 0b       	sbc	r25, r25
     95a:	04 d4       	rcall	.+2056   	; 0x1164 <__floatsisf>
     95c:	69 83       	std	Y+1, r22	; 0x01
     95e:	7a 83       	std	Y+2, r23	; 0x02
     960:	8b 83       	std	Y+3, r24	; 0x03
     962:	9c 83       	std	Y+4, r25	; 0x04
     964:	e9 85       	ldd	r30, Y+9	; 0x09
     966:	fa 85       	ldd	r31, Y+10	; 0x0a
     968:	ea 9d       	mul	r30, r10
     96a:	b0 01       	movw	r22, r0
     96c:	eb 9d       	mul	r30, r11
     96e:	70 0d       	add	r23, r0
     970:	fa 9d       	mul	r31, r10
     972:	70 0d       	add	r23, r0
     974:	11 24       	eor	r1, r1
     976:	07 2e       	mov	r0, r23
     978:	00 0c       	add	r0, r0
     97a:	88 0b       	sbc	r24, r24
     97c:	99 0b       	sbc	r25, r25
     97e:	f2 d3       	rcall	.+2020   	; 0x1164 <__floatsisf>
     980:	6d 83       	std	Y+5, r22	; 0x05
     982:	7e 83       	std	Y+6, r23	; 0x06
     984:	8f 83       	std	Y+7, r24	; 0x07
     986:	98 87       	std	Y+8, r25	; 0x08
     988:	62 01       	movw	r12, r4
     98a:	cc 0c       	add	r12, r12
     98c:	dd 1c       	adc	r13, r13
     98e:	86 01       	movw	r16, r12
     990:	00 5c       	subi	r16, 0xC0	; 192
     992:	1e 4f       	sbci	r17, 0xFE	; 254
     994:	f8 01       	movw	r30, r16
     996:	80 81       	ld	r24, Z
     998:	91 81       	ldd	r25, Z+1	; 0x01
     99a:	69 85       	ldd	r22, Y+9	; 0x09
     99c:	7a 85       	ldd	r23, Y+10	; 0x0a
     99e:	68 1b       	sub	r22, r24
     9a0:	79 0b       	sbc	r23, r25
     9a2:	07 2e       	mov	r0, r23
     9a4:	00 0c       	add	r0, r0
     9a6:	88 0b       	sbc	r24, r24
     9a8:	99 0b       	sbc	r25, r25
     9aa:	dc d3       	rcall	.+1976   	; 0x1164 <__floatsisf>
     9ac:	29 81       	ldd	r18, Y+1	; 0x01
     9ae:	3a 81       	ldd	r19, Y+2	; 0x02
     9b0:	4b 81       	ldd	r20, Y+3	; 0x03
     9b2:	5c 81       	ldd	r21, Y+4	; 0x04
     9b4:	63 d4       	rcall	.+2246   	; 0x127c <__mulsf3>
     9b6:	9b 01       	movw	r18, r22
     9b8:	ac 01       	movw	r20, r24
     9ba:	6d 81       	ldd	r22, Y+5	; 0x05
     9bc:	7e 81       	ldd	r23, Y+6	; 0x06
     9be:	8f 81       	ldd	r24, Y+7	; 0x07
     9c0:	98 85       	ldd	r25, Y+8	; 0x08
     9c2:	d1 d2       	rcall	.+1442   	; 0xf66 <__addsf3>
     9c4:	20 e0       	ldi	r18, 0x00	; 0
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	40 e2       	ldi	r20, 0x20	; 32
     9ca:	51 e4       	ldi	r21, 0x41	; 65
     9cc:	30 d3       	rcall	.+1632   	; 0x102e <__divsf3>
     9ce:	97 d3       	rcall	.+1838   	; 0x10fe <__fixsfsi>
     9d0:	1b 01       	movw	r2, r22
     9d2:	70 93 75 01 	sts	0x0175, r23
     9d6:	60 93 74 01 	sts	0x0174, r22
     9da:	89 85       	ldd	r24, Y+9	; 0x09
     9dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     9de:	f8 01       	movw	r30, r16
     9e0:	91 83       	std	Z+1, r25	; 0x01
     9e2:	80 83       	st	Z, r24
     9e4:	f7 01       	movw	r30, r14
     9e6:	e8 19       	sub	r30, r8
     9e8:	f9 09       	sbc	r31, r9
     9ea:	fe 83       	std	Y+6, r31	; 0x06
     9ec:	ed 83       	std	Y+5, r30	; 0x05
     9ee:	f0 93 65 01 	sts	0x0165, r31
     9f2:	e0 93 64 01 	sts	0x0164, r30
     9f6:	86 01       	movw	r16, r12
     9f8:	08 59       	subi	r16, 0x98	; 152
     9fa:	1e 4f       	sbci	r17, 0xFE	; 254
     9fc:	f8 01       	movw	r30, r16
     9fe:	80 81       	ld	r24, Z
     a00:	91 81       	ldd	r25, Z+1	; 0x01
     a02:	6d 81       	ldd	r22, Y+5	; 0x05
     a04:	7e 81       	ldd	r23, Y+6	; 0x06
     a06:	68 1b       	sub	r22, r24
     a08:	79 0b       	sbc	r23, r25
     a0a:	07 2e       	mov	r0, r23
     a0c:	00 0c       	add	r0, r0
     a0e:	88 0b       	sbc	r24, r24
     a10:	99 0b       	sbc	r25, r25
     a12:	a8 d3       	rcall	.+1872   	; 0x1164 <__floatsisf>
     a14:	6b 01       	movw	r12, r22
     a16:	7c 01       	movw	r14, r24
     a18:	60 93 19 01 	sts	0x0119, r22
     a1c:	70 93 1a 01 	sts	0x011A, r23
     a20:	80 93 1b 01 	sts	0x011B, r24
     a24:	90 93 1c 01 	sts	0x011C, r25
     a28:	8d 81       	ldd	r24, Y+5	; 0x05
     a2a:	9e 81       	ldd	r25, Y+6	; 0x06
     a2c:	a8 9e       	mul	r10, r24
     a2e:	b0 01       	movw	r22, r0
     a30:	a9 9e       	mul	r10, r25
     a32:	70 0d       	add	r23, r0
     a34:	b8 9e       	mul	r11, r24
     a36:	70 0d       	add	r23, r0
     a38:	11 24       	eor	r1, r1
     a3a:	07 2e       	mov	r0, r23
     a3c:	00 0c       	add	r0, r0
     a3e:	88 0b       	sbc	r24, r24
     a40:	99 0b       	sbc	r25, r25
     a42:	90 d3       	rcall	.+1824   	; 0x1164 <__floatsisf>
     a44:	4b 01       	movw	r8, r22
     a46:	5c 01       	movw	r10, r24
     a48:	a7 01       	movw	r20, r14
     a4a:	96 01       	movw	r18, r12
     a4c:	69 81       	ldd	r22, Y+1	; 0x01
     a4e:	7a 81       	ldd	r23, Y+2	; 0x02
     a50:	8b 81       	ldd	r24, Y+3	; 0x03
     a52:	9c 81       	ldd	r25, Y+4	; 0x04
     a54:	13 d4       	rcall	.+2086   	; 0x127c <__mulsf3>
     a56:	9b 01       	movw	r18, r22
     a58:	ac 01       	movw	r20, r24
     a5a:	c5 01       	movw	r24, r10
     a5c:	b4 01       	movw	r22, r8
     a5e:	83 d2       	rcall	.+1286   	; 0xf66 <__addsf3>
     a60:	20 e0       	ldi	r18, 0x00	; 0
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	40 e2       	ldi	r20, 0x20	; 32
     a66:	51 e4       	ldi	r21, 0x41	; 65
     a68:	e2 d2       	rcall	.+1476   	; 0x102e <__divsf3>
     a6a:	49 d3       	rcall	.+1682   	; 0x10fe <__fixsfsi>
     a6c:	9b 01       	movw	r18, r22
     a6e:	70 93 5c 01 	sts	0x015C, r23
     a72:	60 93 5b 01 	sts	0x015B, r22
     a76:	8d 81       	ldd	r24, Y+5	; 0x05
     a78:	9e 81       	ldd	r25, Y+6	; 0x06
     a7a:	f8 01       	movw	r30, r16
     a7c:	91 83       	std	Z+1, r25	; 0x01
     a7e:	80 83       	st	Z, r24
     a80:	c2 01       	movw	r24, r4
     a82:	01 96       	adiw	r24, 0x01	; 1
     a84:	90 93 18 01 	sts	0x0118, r25
     a88:	80 93 17 01 	sts	0x0117, r24
     a8c:	40 91 04 01 	lds	r20, 0x0104
     a90:	50 91 05 01 	lds	r21, 0x0105
     a94:	84 17       	cp	r24, r20
     a96:	95 07       	cpc	r25, r21
     a98:	24 f0       	brlt	.+8      	; 0xaa2 <PD_for_lab+0x1b2>
     a9a:	10 92 18 01 	sts	0x0118, r1
     a9e:	10 92 17 01 	sts	0x0117, r1
     aa2:	33 23       	and	r19, r19
     aa4:	2c f0       	brlt	.+10     	; 0xab0 <PD_for_lab+0x1c0>
     aa6:	10 92 5c 01 	sts	0x015C, r1
     aaa:	10 92 5b 01 	sts	0x015B, r1
     aae:	11 c0       	rjmp	.+34     	; 0xad2 <PD_for_lab+0x1e2>
     ab0:	87 b5       	in	r24, 0x27	; 39
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	91 95       	neg	r25
     ab6:	81 95       	neg	r24
     ab8:	91 09       	sbc	r25, r1
     aba:	82 17       	cp	r24, r18
     abc:	93 07       	cpc	r25, r19
     abe:	4c f0       	brlt	.+18     	; 0xad2 <PD_for_lab+0x1e2>
     ac0:	87 b5       	in	r24, 0x27	; 39
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	91 95       	neg	r25
     ac6:	81 95       	neg	r24
     ac8:	91 09       	sbc	r25, r1
     aca:	90 93 5c 01 	sts	0x015C, r25
     ace:	80 93 5b 01 	sts	0x015B, r24
     ad2:	33 20       	and	r3, r3
     ad4:	2c f0       	brlt	.+10     	; 0xae0 <PD_for_lab+0x1f0>
     ad6:	10 92 75 01 	sts	0x0175, r1
     ada:	10 92 74 01 	sts	0x0174, r1
     ade:	11 c0       	rjmp	.+34     	; 0xb02 <PD_for_lab+0x212>
     ae0:	88 b5       	in	r24, 0x28	; 40
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	91 95       	neg	r25
     ae6:	81 95       	neg	r24
     ae8:	91 09       	sbc	r25, r1
     aea:	82 15       	cp	r24, r2
     aec:	93 05       	cpc	r25, r3
     aee:	4c f0       	brlt	.+18     	; 0xb02 <PD_for_lab+0x212>
     af0:	88 b5       	in	r24, 0x28	; 40
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	91 95       	neg	r25
     af6:	81 95       	neg	r24
     af8:	91 09       	sbc	r25, r1
     afa:	90 93 75 01 	sts	0x0175, r25
     afe:	80 93 74 01 	sts	0x0174, r24
     b02:	90 e2       	ldi	r25, 0x20	; 32
     b04:	69 16       	cp	r6, r25
     b06:	71 04       	cpc	r7, r1
     b08:	1c f4       	brge	.+6      	; 0xb10 <PD_for_lab+0x220>
     b0a:	25 de       	rcall	.-950    	; 0x756 <req_gyro_turn>
     b0c:	cd dc       	rcall	.-1638   	; 0x4a8 <turn_left>
     b0e:	0c c0       	rjmp	.+24     	; 0xb28 <PD_for_lab+0x238>
     b10:	90 91 5b 01 	lds	r25, 0x015B
     b14:	80 91 37 01 	lds	r24, 0x0137
     b18:	89 0f       	add	r24, r25
     b1a:	87 bd       	out	0x27, r24	; 39
     b1c:	90 91 74 01 	lds	r25, 0x0174
     b20:	80 91 35 01 	lds	r24, 0x0135
     b24:	89 0f       	add	r24, r25
     b26:	88 bd       	out	0x28, r24	; 40
     b28:	2a 96       	adiw	r28, 0x0a	; 10
     b2a:	0f b6       	in	r0, 0x3f	; 63
     b2c:	f8 94       	cli
     b2e:	de bf       	out	0x3e, r29	; 62
     b30:	0f be       	out	0x3f, r0	; 63
     b32:	cd bf       	out	0x3d, r28	; 61
     b34:	df 91       	pop	r29
     b36:	cf 91       	pop	r28
     b38:	1f 91       	pop	r17
     b3a:	0f 91       	pop	r16
     b3c:	ff 90       	pop	r15
     b3e:	ef 90       	pop	r14
     b40:	df 90       	pop	r13
     b42:	cf 90       	pop	r12
     b44:	bf 90       	pop	r11
     b46:	af 90       	pop	r10
     b48:	9f 90       	pop	r9
     b4a:	8f 90       	pop	r8
     b4c:	7f 90       	pop	r7
     b4e:	6f 90       	pop	r6
     b50:	5f 90       	pop	r5
     b52:	4f 90       	pop	r4
     b54:	3f 90       	pop	r3
     b56:	2f 90       	pop	r2
     b58:	08 95       	ret

00000b5a <labyreg>:
     b5a:	f8 94       	cli
     b5c:	40 91 5f 01 	lds	r20, 0x015F
     b60:	50 e0       	ldi	r21, 0x00	; 0
     b62:	60 91 67 01 	lds	r22, 0x0167
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	80 91 62 01 	lds	r24, 0x0162
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	78 94       	sei
     b70:	bf ce       	rjmp	.-642    	; 0x8f0 <PD_for_lab>
     b72:	08 95       	ret

00000b74 <regulator>:
     b74:	80 91 2b 01 	lds	r24, 0x012B
     b78:	90 91 2c 01 	lds	r25, 0x012C
     b7c:	81 30       	cpi	r24, 0x01	; 1
     b7e:	91 05       	cpc	r25, r1
     b80:	61 f4       	brne	.+24     	; 0xb9a <regulator+0x26>
     b82:	80 91 29 01 	lds	r24, 0x0129
     b86:	90 91 2a 01 	lds	r25, 0x012A
     b8a:	01 97       	sbiw	r24, 0x01	; 1
     b8c:	89 f4       	brne	.+34     	; 0xbb0 <regulator+0x3c>
     b8e:	5f dc       	rcall	.-1858   	; 0x44e <linje_main>
     b90:	10 92 2a 01 	sts	0x012A, r1
     b94:	10 92 29 01 	sts	0x0129, r1
     b98:	08 95       	ret
     b9a:	89 2b       	or	r24, r25
     b9c:	49 f4       	brne	.+18     	; 0xbb0 <regulator+0x3c>
     b9e:	2d 98       	cbi	0x05, 5	; 5
     ba0:	2e 98       	cbi	0x05, 6	; 5
     ba2:	80 91 28 01 	lds	r24, 0x0128
     ba6:	88 23       	and	r24, r24
     ba8:	19 f0       	breq	.+6      	; 0xbb0 <regulator+0x3c>
     baa:	10 92 28 01 	sts	0x0128, r1
     bae:	d5 cf       	rjmp	.-86     	; 0xb5a <labyreg>
     bb0:	08 95       	ret

00000bb2 <i2c_recive>:
	byte* data;
	int counter=0;
	int start =TW_START;
	//int size = 0;

	TWCR |= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//START
     bb2:	ec eb       	ldi	r30, 0xBC	; 188
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	90 81       	ld	r25, Z
     bb8:	94 6a       	ori	r25, 0xA4	; 164
     bba:	90 83       	st	Z, r25
	while(!(TWCR & (1<<TWINT))); //Wait for TWINT, START is now sent
     bbc:	90 81       	ld	r25, Z
     bbe:	99 23       	and	r25, r25
     bc0:	ec f7       	brge	.-6      	; 0xbbc <i2c_recive+0xa>
	if((TWSR & 0xF8) != start) // om status en start eventuellt bara tw_start
     bc2:	90 91 b9 00 	lds	r25, 0x00B9
     bc6:	98 7f       	andi	r25, 0xF8	; 248
     bc8:	98 30       	cpi	r25, 0x08	; 8
     bca:	29 f0       	breq	.+10     	; 0xbd6 <i2c_recive+0x24>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     bcc:	84 e9       	ldi	r24, 0x94	; 148
     bce:	80 93 bc 00 	sts	0x00BC, r24
		return false;
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	08 95       	ret
	}
	TWDR = prossesor | 0x01;	//adress och Read 
     bd6:	81 60       	ori	r24, 0x01	; 1
     bd8:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT)|(1<<TWEN);
     bdc:	84 e8       	ldi	r24, 0x84	; 132
     bde:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT))); // wait for SLA+R transmited and ACK/NACK recived
     be2:	ec eb       	ldi	r30, 0xBC	; 188
     be4:	f0 e0       	ldi	r31, 0x00	; 0
     be6:	80 81       	ld	r24, Z
     be8:	88 23       	and	r24, r24
     bea:	ec f7       	brge	.-6      	; 0xbe6 <i2c_recive+0x34>
	if((TWSR & 0xF8) != TW_MR_SLA_ACK) // om slav adress har skickats och ack har fåtts
     bec:	80 91 b9 00 	lds	r24, 0x00B9
     bf0:	88 7f       	andi	r24, 0xF8	; 248
     bf2:	80 34       	cpi	r24, 0x40	; 64
     bf4:	29 f0       	breq	.+10     	; 0xc00 <i2c_recive+0x4e>
	{
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     bf6:	84 e9       	ldi	r24, 0x94	; 148
     bf8:	80 93 bc 00 	sts	0x00BC, r24
		return false;
     bfc:	80 e0       	ldi	r24, 0x00	; 0
     bfe:	08 95       	ret
	}
	
	TWCR |= (1<<TWINT)|(1<<TWEN);
     c00:	ec eb       	ldi	r30, 0xBC	; 188
     c02:	f0 e0       	ldi	r31, 0x00	; 0
     c04:	80 81       	ld	r24, Z
     c06:	84 68       	ori	r24, 0x84	; 132
     c08:	80 83       	st	Z, r24
	while(!(TWCR & (1<<TWINT)));
     c0a:	80 81       	ld	r24, Z
     c0c:	88 23       	and	r24, r24
     c0e:	ec f7       	brge	.-6      	; 0xc0a <i2c_recive+0x58>
	}*/
	/*if(counter == 0){
		data = data[(TWDR>>4) & 0x0f];
		size= (TWDR>>4) & 0x0f;
	}*/
	data = TWDR; //ta emot data 
     c10:	80 91 bb 00 	lds	r24, 0x00BB
	counter++;	
	start=TW_REP_START;
	//TWCR = (1<<TWINT);
	//while(!(TWCR & (1<<TWINT)));
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);	// Transmition STOP
     c14:	94 e9       	ldi	r25, 0x94	; 148
     c16:	90 93 bc 00 	sts	0x00BC, r25
	return data;
}
     c1a:	08 95       	ret

00000c1c <i2c_store_data>:

void i2c_store_data(byte data) //bygger ihop data till en aray liknande den som blev skickad och sätter flaggan i2c_newdata då all data i ett paket motaget
{
	static int counter;
	static int size;
	if(counter == 0){ //om första databiten ta ut mängd data som kommer komma 
     c1c:	20 91 0e 01 	lds	r18, 0x010E
     c20:	30 91 0f 01 	lds	r19, 0x010F
     c24:	21 15       	cp	r18, r1
     c26:	31 05       	cpc	r19, r1
     c28:	89 f4       	brne	.+34     	; 0xc4c <i2c_store_data+0x30>
		size = (data>>4) & 0x0f;
     c2a:	28 2f       	mov	r18, r24
     c2c:	22 95       	swap	r18
     c2e:	2f 70       	andi	r18, 0x0F	; 15
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	30 93 0d 01 	sts	0x010D, r19
     c36:	20 93 0c 01 	sts	0x010C, r18
		i2c_data[counter] = data;
     c3a:	80 93 4a 01 	sts	0x014A, r24
		counter++;
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	90 93 0f 01 	sts	0x010F, r25
     c46:	80 93 0e 01 	sts	0x010E, r24
     c4a:	18 c0       	rjmp	.+48     	; 0xc7c <i2c_store_data+0x60>
	}
	else if(counter < size+1){ //fyll på arayen med data
     c4c:	40 91 0c 01 	lds	r20, 0x010C
     c50:	50 91 0d 01 	lds	r21, 0x010D
     c54:	4f 5f       	subi	r20, 0xFF	; 255
     c56:	5f 4f       	sbci	r21, 0xFF	; 255
     c58:	24 17       	cp	r18, r20
     c5a:	35 07       	cpc	r19, r21
     c5c:	5c f4       	brge	.+22     	; 0xc74 <i2c_store_data+0x58>
		i2c_data[counter] = data;
     c5e:	f9 01       	movw	r30, r18
     c60:	e6 5b       	subi	r30, 0xB6	; 182
     c62:	fe 4f       	sbci	r31, 0xFE	; 254
     c64:	80 83       	st	Z, r24
		counter++;
     c66:	2f 5f       	subi	r18, 0xFF	; 255
     c68:	3f 4f       	sbci	r19, 0xFF	; 255
     c6a:	30 93 0f 01 	sts	0x010F, r19
     c6e:	20 93 0e 01 	sts	0x010E, r18
     c72:	04 c0       	rjmp	.+8      	; 0xc7c <i2c_store_data+0x60>
	}
	else{
		i2c_data[counter] = data;
     c74:	f9 01       	movw	r30, r18
     c76:	e6 5b       	subi	r30, 0xB6	; 182
     c78:	fe 4f       	sbci	r31, 0xFE	; 254
     c7a:	80 83       	st	Z, r24
	}
	if(counter>=size+1){ // aray färdig all data motagen
     c7c:	80 91 0c 01 	lds	r24, 0x010C
     c80:	90 91 0d 01 	lds	r25, 0x010D
     c84:	01 96       	adiw	r24, 0x01	; 1
     c86:	20 91 0e 01 	lds	r18, 0x010E
     c8a:	30 91 0f 01 	lds	r19, 0x010F
     c8e:	28 17       	cp	r18, r24
     c90:	39 07       	cpc	r19, r25
     c92:	44 f0       	brlt	.+16     	; 0xca4 <i2c_store_data+0x88>
		i2c_newdata = true;
     c94:	81 e0       	ldi	r24, 0x01	; 1
     c96:	80 93 12 01 	sts	0x0112, r24
		counter = 0;
     c9a:	10 92 0f 01 	sts	0x010F, r1
     c9e:	10 92 0e 01 	sts	0x010E, r1
		EIMSK &= ~(1<<INT0);
     ca2:	e8 98       	cbi	0x1d, 0	; 29
     ca4:	08 95       	ret

00000ca6 <__vector_1>:
byte i2c_data[15];
bool i2c_newdata=false;
int Reflex_data;
//aidshub was here
ISR(INT0_vect)// händer om annan processor kör request to send
{	
     ca6:	1f 92       	push	r1
     ca8:	0f 92       	push	r0
     caa:	0f b6       	in	r0, 0x3f	; 63
     cac:	0f 92       	push	r0
     cae:	11 24       	eor	r1, r1
     cb0:	0b b6       	in	r0, 0x3b	; 59
     cb2:	0f 92       	push	r0
     cb4:	2f 93       	push	r18
     cb6:	3f 93       	push	r19
     cb8:	4f 93       	push	r20
     cba:	5f 93       	push	r21
     cbc:	6f 93       	push	r22
     cbe:	7f 93       	push	r23
     cc0:	8f 93       	push	r24
     cc2:	9f 93       	push	r25
     cc4:	af 93       	push	r26
     cc6:	bf 93       	push	r27
     cc8:	ef 93       	push	r30
     cca:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ccc:	00 00       	nop
	_delay_us(1);
	if (PINC&(1<< PC6)){	//komunikation vill skicka
     cce:	36 9b       	sbis	0x06, 6	; 6
     cd0:	04 c0       	rjmp	.+8      	; 0xcda <__vector_1+0x34>
		i2c_store_data(i2c_recive(0x02)); // adress processor 1
     cd2:	82 e0       	ldi	r24, 0x02	; 2
     cd4:	6e df       	rcall	.-292    	; 0xbb2 <i2c_recive>
     cd6:	a2 df       	rcall	.-188    	; 0xc1c <i2c_store_data>
     cd8:	05 c0       	rjmp	.+10     	; 0xce4 <__vector_1+0x3e>
		//PORTD ^=(1 << PD0);
	}
	else if(PINC&(1<< PC7)){ //sensor vill skicka  
     cda:	37 9b       	sbis	0x06, 7	; 6
     cdc:	03 c0       	rjmp	.+6      	; 0xce4 <__vector_1+0x3e>
		i2c_store_data(i2c_recive(0x06)); // adress processor 3
     cde:	86 e0       	ldi	r24, 0x06	; 6
     ce0:	68 df       	rcall	.-304    	; 0xbb2 <i2c_recive>
     ce2:	9c df       	rcall	.-200    	; 0xc1c <i2c_store_data>
	}
}
     ce4:	ff 91       	pop	r31
     ce6:	ef 91       	pop	r30
     ce8:	bf 91       	pop	r27
     cea:	af 91       	pop	r26
     cec:	9f 91       	pop	r25
     cee:	8f 91       	pop	r24
     cf0:	7f 91       	pop	r23
     cf2:	6f 91       	pop	r22
     cf4:	5f 91       	pop	r21
     cf6:	4f 91       	pop	r20
     cf8:	3f 91       	pop	r19
     cfa:	2f 91       	pop	r18
     cfc:	0f 90       	pop	r0
     cfe:	0b be       	out	0x3b, r0	; 59
     d00:	0f 90       	pop	r0
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	0f 90       	pop	r0
     d06:	1f 90       	pop	r1
     d08:	18 95       	reti

00000d0a <i2c_handel_data>:
	}

}

void i2c_handel_data(void){ //hanterar den motagna datan och läger den på rätt plats och skickar vidare sensordata till komunikation
	if(i2c_newdata==true)
     d0a:	80 91 12 01 	lds	r24, 0x0112
     d0e:	88 23       	and	r24, r24
     d10:	09 f4       	brne	.+2      	; 0xd14 <i2c_handel_data+0xa>
     d12:	f0 c0       	rjmp	.+480    	; 0xef4 <i2c_handel_data+0x1ea>
	{
		i2c_newdata=false;
     d14:	10 92 12 01 	sts	0x0112, r1
		if(!((i2c_data[0]>>3)&0x01)){
     d18:	80 91 4a 01 	lds	r24, 0x014A
     d1c:	83 fd       	sbrc	r24, 3
     d1e:	07 c0       	rjmp	.+14     	; 0xd2e <i2c_handel_data+0x24>
     d20:	84 e6       	ldi	r24, 0x64	; 100
     d22:	8a 95       	dec	r24
     d24:	f1 f7       	brne	.-4      	; 0xd22 <i2c_handel_data+0x18>
			_delay_us(300);
			i2c_send(0x02,i2c_data);// send to komunikation
     d26:	6a e4       	ldi	r22, 0x4A	; 74
     d28:	71 e0       	ldi	r23, 0x01	; 1
     d2a:	82 e0       	ldi	r24, 0x02	; 2
     d2c:	a6 dc       	rcall	.-1716   	; 0x67a <i2c_send>
		}
		
		switch (i2c_data[0] & 0x0f){
     d2e:	80 91 4a 01 	lds	r24, 0x014A
     d32:	e8 2f       	mov	r30, r24
     d34:	ef 70       	andi	r30, 0x0F	; 15
     d36:	8e 2f       	mov	r24, r30
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	fc 01       	movw	r30, r24
     d3c:	ea 5b       	subi	r30, 0xBA	; 186
     d3e:	ff 4f       	sbci	r31, 0xFF	; 255
     d40:	13 c3       	rjmp	.+1574   	; 0x1368 <__tablejump2__>
			case 0x00 ://batteri nivå
				batteri=i2c_data[1],i2c_data[2];
     d42:	80 91 4b 01 	lds	r24, 0x014B
     d46:	80 93 63 01 	sts	0x0163, r24
				break;
     d4a:	d3 c0       	rjmp	.+422    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x01 ://avståndssensorer
				distans_right = i2c_data[3];
     d4c:	ea e4       	ldi	r30, 0x4A	; 74
     d4e:	f1 e0       	ldi	r31, 0x01	; 1
     d50:	83 81       	ldd	r24, Z+3	; 0x03
     d52:	80 93 67 01 	sts	0x0167, r24
				distans_fram = i2c_data[2];;
     d56:	82 81       	ldd	r24, Z+2	; 0x02
     d58:	80 93 5f 01 	sts	0x015F, r24
				distans_left = i2c_data[1];
     d5c:	81 81       	ldd	r24, Z+1	; 0x01
     d5e:	80 93 62 01 	sts	0x0162, r24
				//updaterad_labyrint = true;
				break;
     d62:	c7 c0       	rjmp	.+398    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x02 :// refelxsensor data
				regler_ready_linje = 1;					// Ny data har lästs in då uppdaterar vi regleringen
     d64:	81 e0       	ldi	r24, 0x01	; 1
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	90 93 2a 01 	sts	0x012A, r25
     d6c:	80 93 29 01 	sts	0x0129, r24
				
				Reflex_data = (i2c_data[2]<<8) + i2c_data[1];
     d70:	ea e4       	ldi	r30, 0x4A	; 74
     d72:	f1 e0       	ldi	r31, 0x01	; 1
     d74:	82 81       	ldd	r24, Z+2	; 0x02
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	98 2f       	mov	r25, r24
     d7a:	88 27       	eor	r24, r24
     d7c:	21 81       	ldd	r18, Z+1	; 0x01
     d7e:	82 0f       	add	r24, r18
     d80:	91 1d       	adc	r25, r1
     d82:	90 93 5a 01 	sts	0x015A, r25
     d86:	80 93 59 01 	sts	0x0159, r24
				Reflex_data2 = i2c_data[3];// går inte att få in mer än 16 bitar i en int...
     d8a:	83 81       	ldd	r24, Z+3	; 0x03
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	90 93 73 01 	sts	0x0173, r25
     d92:	80 93 72 01 	sts	0x0172, r24
				break;
     d96:	ad c0       	rjmp	.+346    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x03 :
				RGB_data=1;//"röd";"
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	80 93 66 01 	sts	0x0166, r24
				break;
     d9e:	a9 c0       	rjmp	.+338    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x04 :
				RGB_data=2;//"grön";
     da0:	82 e0       	ldi	r24, 0x02	; 2
     da2:	80 93 66 01 	sts	0x0166, r24
				break;		
     da6:	a5 c0       	rjmp	.+330    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x05 :
				RGB_data=3;//"blå";
     da8:	83 e0       	ldi	r24, 0x03	; 3
     daa:	80 93 66 01 	sts	0x0166, r24
				break;
     dae:	a1 c0       	rjmp	.+322    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x06 : // gyro klart
				gyro_90 = true;
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	80 93 3f 01 	sts	0x013F, r24
				turning = false;
     db6:	10 92 27 01 	sts	0x0127, r1
				start = 0;
     dba:	10 92 3a 01 	sts	0x013A, r1
     dbe:	10 92 39 01 	sts	0x0139, r1
				break;
     dc2:	97 c0       	rjmp	.+302    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x07 :// gyro data
				// Kod vi skickar till sensor
				break;
			case 0x08 : // manuel stå still
				manual_function=0;
     dc4:	10 92 22 01 	sts	0x0122, r1
     dc8:	10 92 21 01 	sts	0x0121, r1
				break;
     dcc:	92 c0       	rjmp	.+292    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x09 : //manuel kar rakt fram
				manual_function=1;			
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	90 93 22 01 	sts	0x0122, r25
     dd6:	80 93 21 01 	sts	0x0121, r24
				break;
     dda:	8b c0       	rjmp	.+278    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x0a : //manuel kör bakåt
				manual_function=2;				
     ddc:	82 e0       	ldi	r24, 0x02	; 2
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	90 93 22 01 	sts	0x0122, r25
     de4:	80 93 21 01 	sts	0x0121, r24
				break;
     de8:	84 c0       	rjmp	.+264    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x0b ://manuel vänster fram
				manual_function=4;
     dea:	84 e0       	ldi	r24, 0x04	; 4
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	90 93 22 01 	sts	0x0122, r25
     df2:	80 93 21 01 	sts	0x0121, r24
				break;
     df6:	7d c0       	rjmp	.+250    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x0c ://manuel höger fram
				manual_function=3;
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	90 93 22 01 	sts	0x0122, r25
     e00:	80 93 21 01 	sts	0x0121, r24
				break;
     e04:	76 c0       	rjmp	.+236    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x0d :// spin på stället åt vänster
				manual_function=6;
     e06:	86 e0       	ldi	r24, 0x06	; 6
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	90 93 22 01 	sts	0x0122, r25
     e0e:	80 93 21 01 	sts	0x0121, r24
				break;
     e12:	6f c0       	rjmp	.+222    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x0e :// spin på stället åt höger
				manual_function=5;
     e14:	85 e0       	ldi	r24, 0x05	; 5
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	90 93 22 01 	sts	0x0122, r25
     e1c:	80 93 21 01 	sts	0x0121, r24
				break;
     e20:	68 c0       	rjmp	.+208    	; 0xef2 <i2c_handel_data+0x1e8>
			case 0x0f :	// GUI skickar en extra byte där vi behandlar knapparna "man/auto" samt "start" (av/på) (används för extrafunktioner i almenhet som inte får plats i vanliga data tabellen)
				if(i2c_data[1]==0xf0){
     e22:	80 91 4b 01 	lds	r24, 0x014B
     e26:	80 3f       	cpi	r24, 0xF0	; 240
     e28:	91 f4       	brne	.+36     	; 0xe4e <i2c_handel_data+0x144>
					if(start==1){
     e2a:	80 91 39 01 	lds	r24, 0x0139
     e2e:	90 91 3a 01 	lds	r25, 0x013A
     e32:	01 97       	sbiw	r24, 0x01	; 1
     e34:	29 f4       	brne	.+10     	; 0xe40 <i2c_handel_data+0x136>
						start=0;
     e36:	10 92 3a 01 	sts	0x013A, r1
     e3a:	10 92 39 01 	sts	0x0139, r1
     e3e:	59 c0       	rjmp	.+178    	; 0xef2 <i2c_handel_data+0x1e8>
					}
					else{
						start=1;
     e40:	81 e0       	ldi	r24, 0x01	; 1
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	90 93 3a 01 	sts	0x013A, r25
     e48:	80 93 39 01 	sts	0x0139, r24
     e4c:	52 c0       	rjmp	.+164    	; 0xef2 <i2c_handel_data+0x1e8>
					}
				}
				else if(i2c_data[1]==0x0f){
     e4e:	8f 30       	cpi	r24, 0x0F	; 15
     e50:	f1 f4       	brne	.+60     	; 0xe8e <i2c_handel_data+0x184>
					if(drive_mode==1){
     e52:	80 91 3b 01 	lds	r24, 0x013B
     e56:	90 91 3c 01 	lds	r25, 0x013C
     e5a:	01 97       	sbiw	r24, 0x01	; 1
     e5c:	59 f4       	brne	.+22     	; 0xe74 <i2c_handel_data+0x16a>
						PORTD |= (1 << PD1);
     e5e:	59 9a       	sbi	0x0b, 1	; 11
						PORTD &= ~(1 << PD0);
     e60:	58 98       	cbi	0x0b, 0	; 11
						drive_mode=0;
     e62:	10 92 3c 01 	sts	0x013C, r1
     e66:	10 92 3b 01 	sts	0x013B, r1
						start=0;
     e6a:	10 92 3a 01 	sts	0x013A, r1
     e6e:	10 92 39 01 	sts	0x0139, r1
     e72:	3f c0       	rjmp	.+126    	; 0xef2 <i2c_handel_data+0x1e8>
					}
					else{
						PORTD |= (1 << PD0);
     e74:	58 9a       	sbi	0x0b, 0	; 11
						PORTD &= ~(1 << PD1);
     e76:	59 98       	cbi	0x0b, 1	; 11
						drive_mode=1;
     e78:	81 e0       	ldi	r24, 0x01	; 1
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	90 93 3c 01 	sts	0x013C, r25
     e80:	80 93 3b 01 	sts	0x013B, r24
						start=0;
     e84:	10 92 3a 01 	sts	0x013A, r1
     e88:	10 92 39 01 	sts	0x0139, r1
     e8c:	32 c0       	rjmp	.+100    	; 0xef2 <i2c_handel_data+0x1e8>
					}
				}
				else if(i2c_data[1]==0x00){			// Ändra P och D konstant för linje
     e8e:	81 11       	cpse	r24, r1
     e90:	0f c0       	rjmp	.+30     	; 0xeb0 <i2c_handel_data+0x1a6>
					d_constant = i2c_data[2];
     e92:	ea e4       	ldi	r30, 0x4A	; 74
     e94:	f1 e0       	ldi	r31, 0x01	; 1
     e96:	82 81       	ldd	r24, Z+2	; 0x02
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	90 93 01 01 	sts	0x0101, r25
     e9e:	80 93 00 01 	sts	0x0100, r24
					p_constant = i2c_data[3];
     ea2:	83 81       	ldd	r24, Z+3	; 0x03
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	90 93 03 01 	sts	0x0103, r25
     eaa:	80 93 02 01 	sts	0x0102, r24
     eae:	21 c0       	rjmp	.+66     	; 0xef2 <i2c_handel_data+0x1e8>
				}
				else if(i2c_data[1]==0x01){			// Ändra P och D konstant för labyrint
     eb0:	81 30       	cpi	r24, 0x01	; 1
     eb2:	79 f4       	brne	.+30     	; 0xed2 <i2c_handel_data+0x1c8>
					d_constant_lab = i2c_data[2];
     eb4:	ea e4       	ldi	r30, 0x4A	; 74
     eb6:	f1 e0       	ldi	r31, 0x01	; 1
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	90 93 09 01 	sts	0x0109, r25
     ec0:	80 93 08 01 	sts	0x0108, r24
					p_constant_lab = i2c_data[3];
     ec4:	83 81       	ldd	r24, Z+3	; 0x03
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	90 93 0b 01 	sts	0x010B, r25
     ecc:	80 93 0a 01 	sts	0x010A, r24
     ed0:	10 c0       	rjmp	.+32     	; 0xef2 <i2c_handel_data+0x1e8>
				}
				else if(i2c_data[1]==0x02){
     ed2:	82 30       	cpi	r24, 0x02	; 2
     ed4:	71 f4       	brne	.+28     	; 0xef2 <i2c_handel_data+0x1e8>
					left = i2c_data[2];
     ed6:	ea e4       	ldi	r30, 0x4A	; 74
     ed8:	f1 e0       	ldi	r31, 0x01	; 1
     eda:	82 81       	ldd	r24, Z+2	; 0x02
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	90 93 38 01 	sts	0x0138, r25
     ee2:	80 93 37 01 	sts	0x0137, r24
					right = i2c_data[3];
     ee6:	83 81       	ldd	r24, Z+3	; 0x03
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	90 93 36 01 	sts	0x0136, r25
     eee:	80 93 35 01 	sts	0x0135, r24
				
				break;		
			default :
				break;
		}
		EIMSK |= (1<<INT0);
     ef2:	e8 9a       	sbi	0x1d, 0	; 29
     ef4:	08 95       	ret

00000ef6 <main>:
#include "i2c_master.c"


int main(void)
{
	interrupt_init();
     ef6:	60 db       	rcall	.-2368   	; 0x5b8 <interrupt_init>
	board_init();
     ef8:	f8 d8       	rcall	.-3600   	; 0xea <board_init>
	initengine();
     efa:	ea da       	rcall	.-2604   	; 0x4d0 <initengine>
	timerinit();
     efc:	f6 da       	rcall	.-2580   	; 0x4ea <timerinit>
	i2c_setup(1);
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	ac db       	rcall	.-2216   	; 0x65a <i2c_setup>
	sei();
     f02:	78 94       	sei
	//***********Set motors speed value here *****************
	left=130*1;				// kanske räcker med en variable för båda om båda kör exakt lika fort
     f04:	82 e8       	ldi	r24, 0x82	; 130
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	90 93 38 01 	sts	0x0138, r25
     f0c:	80 93 37 01 	sts	0x0137, r24
	right=120*1;
     f10:	88 e7       	ldi	r24, 0x78	; 120
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	90 93 36 01 	sts	0x0136, r25
     f18:	80 93 35 01 	sts	0x0135, r24
	//********************************************************
	motor_left=left;
     f1c:	82 e8       	ldi	r24, 0x82	; 130
     f1e:	87 bd       	out	0x27, r24	; 39
	motor_right=right;
     f20:	80 91 35 01 	lds	r24, 0x0135
     f24:	88 bd       	out	0x28, r24	; 40
	while(1){
		i2c_handel_data();  //test av fregulito
     f26:	f1 de       	rcall	.-542    	; 0xd0a <i2c_handel_data>
		if(turning)
     f28:	80 91 27 01 	lds	r24, 0x0127
     f2c:	81 11       	cpse	r24, r1
     f2e:	fb cf       	rjmp	.-10     	; 0xf26 <main+0x30>
			;
		else if(drive_mode == 1){						// Drivemode is auto    // (drive_mode == 1 && start == 1)
     f30:	80 91 3b 01 	lds	r24, 0x013B
     f34:	90 91 3c 01 	lds	r25, 0x013C
     f38:	81 30       	cpi	r24, 0x01	; 1
     f3a:	91 05       	cpc	r25, r1
     f3c:	71 f4       	brne	.+28     	; 0xf5a <main+0x64>
			//current_position = arre[count_arre];	// används för att simulera linjeföljning, arrayen ändras i globala
			//if((gyro_left == 1)|| (gyro_right == 1)){
			//	drive_mode = 0;
			//}
			if(start == 1){
     f3e:	80 91 39 01 	lds	r24, 0x0139
     f42:	90 91 3a 01 	lds	r25, 0x013A
     f46:	81 30       	cpi	r24, 0x01	; 1
     f48:	91 05       	cpc	r25, r1
     f4a:	11 f4       	brne	.+4      	; 0xf50 <main+0x5a>
				regulator();	
     f4c:	13 de       	rcall	.-986    	; 0xb74 <regulator>
     f4e:	eb cf       	rjmp	.-42     	; 0xf26 <main+0x30>
			}
			else if(start == 0){					// if start is zero then turn off the auto, stops motors
     f50:	89 2b       	or	r24, r25
     f52:	49 f7       	brne	.-46     	; 0xf26 <main+0x30>
				motor_left=0;
     f54:	17 bc       	out	0x27, r1	; 39
				motor_right=0;
     f56:	18 bc       	out	0x28, r1	; 40
     f58:	e6 cf       	rjmp	.-52     	; 0xf26 <main+0x30>
			}
		}
		else if(drive_mode==0){										// Drivemode is manual
     f5a:	89 2b       	or	r24, r25
     f5c:	21 f7       	brne	.-56     	; 0xf26 <main+0x30>
			PORTD |= (1 << PD1);
     f5e:	59 9a       	sbi	0x0b, 1	; 11
			manual_drive();
     f60:	13 dc       	rcall	.-2010   	; 0x788 <manual_drive>
     f62:	e1 cf       	rjmp	.-62     	; 0xf26 <main+0x30>

00000f64 <__subsf3>:
     f64:	50 58       	subi	r21, 0x80	; 128

00000f66 <__addsf3>:
     f66:	bb 27       	eor	r27, r27
     f68:	aa 27       	eor	r26, r26
     f6a:	0e d0       	rcall	.+28     	; 0xf88 <__addsf3x>
     f6c:	4d c1       	rjmp	.+666    	; 0x1208 <__fp_round>
     f6e:	3e d1       	rcall	.+636    	; 0x11ec <__fp_pscA>
     f70:	30 f0       	brcs	.+12     	; 0xf7e <__addsf3+0x18>
     f72:	43 d1       	rcall	.+646    	; 0x11fa <__fp_pscB>
     f74:	20 f0       	brcs	.+8      	; 0xf7e <__addsf3+0x18>
     f76:	31 f4       	brne	.+12     	; 0xf84 <__addsf3+0x1e>
     f78:	9f 3f       	cpi	r25, 0xFF	; 255
     f7a:	11 f4       	brne	.+4      	; 0xf80 <__addsf3+0x1a>
     f7c:	1e f4       	brtc	.+6      	; 0xf84 <__addsf3+0x1e>
     f7e:	33 c1       	rjmp	.+614    	; 0x11e6 <__fp_nan>
     f80:	0e f4       	brtc	.+2      	; 0xf84 <__addsf3+0x1e>
     f82:	e0 95       	com	r30
     f84:	e7 fb       	bst	r30, 7
     f86:	29 c1       	rjmp	.+594    	; 0x11da <__fp_inf>

00000f88 <__addsf3x>:
     f88:	e9 2f       	mov	r30, r25
     f8a:	4f d1       	rcall	.+670    	; 0x122a <__fp_split3>
     f8c:	80 f3       	brcs	.-32     	; 0xf6e <__addsf3+0x8>
     f8e:	ba 17       	cp	r27, r26
     f90:	62 07       	cpc	r22, r18
     f92:	73 07       	cpc	r23, r19
     f94:	84 07       	cpc	r24, r20
     f96:	95 07       	cpc	r25, r21
     f98:	18 f0       	brcs	.+6      	; 0xfa0 <__addsf3x+0x18>
     f9a:	71 f4       	brne	.+28     	; 0xfb8 <__addsf3x+0x30>
     f9c:	9e f5       	brtc	.+102    	; 0x1004 <__addsf3x+0x7c>
     f9e:	67 c1       	rjmp	.+718    	; 0x126e <__fp_zero>
     fa0:	0e f4       	brtc	.+2      	; 0xfa4 <__addsf3x+0x1c>
     fa2:	e0 95       	com	r30
     fa4:	0b 2e       	mov	r0, r27
     fa6:	ba 2f       	mov	r27, r26
     fa8:	a0 2d       	mov	r26, r0
     faa:	0b 01       	movw	r0, r22
     fac:	b9 01       	movw	r22, r18
     fae:	90 01       	movw	r18, r0
     fb0:	0c 01       	movw	r0, r24
     fb2:	ca 01       	movw	r24, r20
     fb4:	a0 01       	movw	r20, r0
     fb6:	11 24       	eor	r1, r1
     fb8:	ff 27       	eor	r31, r31
     fba:	59 1b       	sub	r21, r25
     fbc:	99 f0       	breq	.+38     	; 0xfe4 <__addsf3x+0x5c>
     fbe:	59 3f       	cpi	r21, 0xF9	; 249
     fc0:	50 f4       	brcc	.+20     	; 0xfd6 <__addsf3x+0x4e>
     fc2:	50 3e       	cpi	r21, 0xE0	; 224
     fc4:	68 f1       	brcs	.+90     	; 0x1020 <__addsf3x+0x98>
     fc6:	1a 16       	cp	r1, r26
     fc8:	f0 40       	sbci	r31, 0x00	; 0
     fca:	a2 2f       	mov	r26, r18
     fcc:	23 2f       	mov	r18, r19
     fce:	34 2f       	mov	r19, r20
     fd0:	44 27       	eor	r20, r20
     fd2:	58 5f       	subi	r21, 0xF8	; 248
     fd4:	f3 cf       	rjmp	.-26     	; 0xfbc <__addsf3x+0x34>
     fd6:	46 95       	lsr	r20
     fd8:	37 95       	ror	r19
     fda:	27 95       	ror	r18
     fdc:	a7 95       	ror	r26
     fde:	f0 40       	sbci	r31, 0x00	; 0
     fe0:	53 95       	inc	r21
     fe2:	c9 f7       	brne	.-14     	; 0xfd6 <__addsf3x+0x4e>
     fe4:	7e f4       	brtc	.+30     	; 0x1004 <__addsf3x+0x7c>
     fe6:	1f 16       	cp	r1, r31
     fe8:	ba 0b       	sbc	r27, r26
     fea:	62 0b       	sbc	r22, r18
     fec:	73 0b       	sbc	r23, r19
     fee:	84 0b       	sbc	r24, r20
     ff0:	ba f0       	brmi	.+46     	; 0x1020 <__addsf3x+0x98>
     ff2:	91 50       	subi	r25, 0x01	; 1
     ff4:	a1 f0       	breq	.+40     	; 0x101e <__addsf3x+0x96>
     ff6:	ff 0f       	add	r31, r31
     ff8:	bb 1f       	adc	r27, r27
     ffa:	66 1f       	adc	r22, r22
     ffc:	77 1f       	adc	r23, r23
     ffe:	88 1f       	adc	r24, r24
    1000:	c2 f7       	brpl	.-16     	; 0xff2 <__addsf3x+0x6a>
    1002:	0e c0       	rjmp	.+28     	; 0x1020 <__addsf3x+0x98>
    1004:	ba 0f       	add	r27, r26
    1006:	62 1f       	adc	r22, r18
    1008:	73 1f       	adc	r23, r19
    100a:	84 1f       	adc	r24, r20
    100c:	48 f4       	brcc	.+18     	; 0x1020 <__addsf3x+0x98>
    100e:	87 95       	ror	r24
    1010:	77 95       	ror	r23
    1012:	67 95       	ror	r22
    1014:	b7 95       	ror	r27
    1016:	f7 95       	ror	r31
    1018:	9e 3f       	cpi	r25, 0xFE	; 254
    101a:	08 f0       	brcs	.+2      	; 0x101e <__addsf3x+0x96>
    101c:	b3 cf       	rjmp	.-154    	; 0xf84 <__addsf3+0x1e>
    101e:	93 95       	inc	r25
    1020:	88 0f       	add	r24, r24
    1022:	08 f0       	brcs	.+2      	; 0x1026 <__addsf3x+0x9e>
    1024:	99 27       	eor	r25, r25
    1026:	ee 0f       	add	r30, r30
    1028:	97 95       	ror	r25
    102a:	87 95       	ror	r24
    102c:	08 95       	ret

0000102e <__divsf3>:
    102e:	0c d0       	rcall	.+24     	; 0x1048 <__divsf3x>
    1030:	eb c0       	rjmp	.+470    	; 0x1208 <__fp_round>
    1032:	e3 d0       	rcall	.+454    	; 0x11fa <__fp_pscB>
    1034:	40 f0       	brcs	.+16     	; 0x1046 <__divsf3+0x18>
    1036:	da d0       	rcall	.+436    	; 0x11ec <__fp_pscA>
    1038:	30 f0       	brcs	.+12     	; 0x1046 <__divsf3+0x18>
    103a:	21 f4       	brne	.+8      	; 0x1044 <__divsf3+0x16>
    103c:	5f 3f       	cpi	r21, 0xFF	; 255
    103e:	19 f0       	breq	.+6      	; 0x1046 <__divsf3+0x18>
    1040:	cc c0       	rjmp	.+408    	; 0x11da <__fp_inf>
    1042:	51 11       	cpse	r21, r1
    1044:	15 c1       	rjmp	.+554    	; 0x1270 <__fp_szero>
    1046:	cf c0       	rjmp	.+414    	; 0x11e6 <__fp_nan>

00001048 <__divsf3x>:
    1048:	f0 d0       	rcall	.+480    	; 0x122a <__fp_split3>
    104a:	98 f3       	brcs	.-26     	; 0x1032 <__divsf3+0x4>

0000104c <__divsf3_pse>:
    104c:	99 23       	and	r25, r25
    104e:	c9 f3       	breq	.-14     	; 0x1042 <__divsf3+0x14>
    1050:	55 23       	and	r21, r21
    1052:	b1 f3       	breq	.-20     	; 0x1040 <__divsf3+0x12>
    1054:	95 1b       	sub	r25, r21
    1056:	55 0b       	sbc	r21, r21
    1058:	bb 27       	eor	r27, r27
    105a:	aa 27       	eor	r26, r26
    105c:	62 17       	cp	r22, r18
    105e:	73 07       	cpc	r23, r19
    1060:	84 07       	cpc	r24, r20
    1062:	38 f0       	brcs	.+14     	; 0x1072 <__divsf3_pse+0x26>
    1064:	9f 5f       	subi	r25, 0xFF	; 255
    1066:	5f 4f       	sbci	r21, 0xFF	; 255
    1068:	22 0f       	add	r18, r18
    106a:	33 1f       	adc	r19, r19
    106c:	44 1f       	adc	r20, r20
    106e:	aa 1f       	adc	r26, r26
    1070:	a9 f3       	breq	.-22     	; 0x105c <__divsf3_pse+0x10>
    1072:	33 d0       	rcall	.+102    	; 0x10da <__divsf3_pse+0x8e>
    1074:	0e 2e       	mov	r0, r30
    1076:	3a f0       	brmi	.+14     	; 0x1086 <__divsf3_pse+0x3a>
    1078:	e0 e8       	ldi	r30, 0x80	; 128
    107a:	30 d0       	rcall	.+96     	; 0x10dc <__divsf3_pse+0x90>
    107c:	91 50       	subi	r25, 0x01	; 1
    107e:	50 40       	sbci	r21, 0x00	; 0
    1080:	e6 95       	lsr	r30
    1082:	00 1c       	adc	r0, r0
    1084:	ca f7       	brpl	.-14     	; 0x1078 <__divsf3_pse+0x2c>
    1086:	29 d0       	rcall	.+82     	; 0x10da <__divsf3_pse+0x8e>
    1088:	fe 2f       	mov	r31, r30
    108a:	27 d0       	rcall	.+78     	; 0x10da <__divsf3_pse+0x8e>
    108c:	66 0f       	add	r22, r22
    108e:	77 1f       	adc	r23, r23
    1090:	88 1f       	adc	r24, r24
    1092:	bb 1f       	adc	r27, r27
    1094:	26 17       	cp	r18, r22
    1096:	37 07       	cpc	r19, r23
    1098:	48 07       	cpc	r20, r24
    109a:	ab 07       	cpc	r26, r27
    109c:	b0 e8       	ldi	r27, 0x80	; 128
    109e:	09 f0       	breq	.+2      	; 0x10a2 <__divsf3_pse+0x56>
    10a0:	bb 0b       	sbc	r27, r27
    10a2:	80 2d       	mov	r24, r0
    10a4:	bf 01       	movw	r22, r30
    10a6:	ff 27       	eor	r31, r31
    10a8:	93 58       	subi	r25, 0x83	; 131
    10aa:	5f 4f       	sbci	r21, 0xFF	; 255
    10ac:	2a f0       	brmi	.+10     	; 0x10b8 <__divsf3_pse+0x6c>
    10ae:	9e 3f       	cpi	r25, 0xFE	; 254
    10b0:	51 05       	cpc	r21, r1
    10b2:	68 f0       	brcs	.+26     	; 0x10ce <__divsf3_pse+0x82>
    10b4:	92 c0       	rjmp	.+292    	; 0x11da <__fp_inf>
    10b6:	dc c0       	rjmp	.+440    	; 0x1270 <__fp_szero>
    10b8:	5f 3f       	cpi	r21, 0xFF	; 255
    10ba:	ec f3       	brlt	.-6      	; 0x10b6 <__divsf3_pse+0x6a>
    10bc:	98 3e       	cpi	r25, 0xE8	; 232
    10be:	dc f3       	brlt	.-10     	; 0x10b6 <__divsf3_pse+0x6a>
    10c0:	86 95       	lsr	r24
    10c2:	77 95       	ror	r23
    10c4:	67 95       	ror	r22
    10c6:	b7 95       	ror	r27
    10c8:	f7 95       	ror	r31
    10ca:	9f 5f       	subi	r25, 0xFF	; 255
    10cc:	c9 f7       	brne	.-14     	; 0x10c0 <__divsf3_pse+0x74>
    10ce:	88 0f       	add	r24, r24
    10d0:	91 1d       	adc	r25, r1
    10d2:	96 95       	lsr	r25
    10d4:	87 95       	ror	r24
    10d6:	97 f9       	bld	r25, 7
    10d8:	08 95       	ret
    10da:	e1 e0       	ldi	r30, 0x01	; 1
    10dc:	66 0f       	add	r22, r22
    10de:	77 1f       	adc	r23, r23
    10e0:	88 1f       	adc	r24, r24
    10e2:	bb 1f       	adc	r27, r27
    10e4:	62 17       	cp	r22, r18
    10e6:	73 07       	cpc	r23, r19
    10e8:	84 07       	cpc	r24, r20
    10ea:	ba 07       	cpc	r27, r26
    10ec:	20 f0       	brcs	.+8      	; 0x10f6 <__divsf3_pse+0xaa>
    10ee:	62 1b       	sub	r22, r18
    10f0:	73 0b       	sbc	r23, r19
    10f2:	84 0b       	sbc	r24, r20
    10f4:	ba 0b       	sbc	r27, r26
    10f6:	ee 1f       	adc	r30, r30
    10f8:	88 f7       	brcc	.-30     	; 0x10dc <__divsf3_pse+0x90>
    10fa:	e0 95       	com	r30
    10fc:	08 95       	ret

000010fe <__fixsfsi>:
    10fe:	04 d0       	rcall	.+8      	; 0x1108 <__fixunssfsi>
    1100:	68 94       	set
    1102:	b1 11       	cpse	r27, r1
    1104:	b5 c0       	rjmp	.+362    	; 0x1270 <__fp_szero>
    1106:	08 95       	ret

00001108 <__fixunssfsi>:
    1108:	98 d0       	rcall	.+304    	; 0x123a <__fp_splitA>
    110a:	88 f0       	brcs	.+34     	; 0x112e <__fixunssfsi+0x26>
    110c:	9f 57       	subi	r25, 0x7F	; 127
    110e:	90 f0       	brcs	.+36     	; 0x1134 <__fixunssfsi+0x2c>
    1110:	b9 2f       	mov	r27, r25
    1112:	99 27       	eor	r25, r25
    1114:	b7 51       	subi	r27, 0x17	; 23
    1116:	a0 f0       	brcs	.+40     	; 0x1140 <__fixunssfsi+0x38>
    1118:	d1 f0       	breq	.+52     	; 0x114e <__fixunssfsi+0x46>
    111a:	66 0f       	add	r22, r22
    111c:	77 1f       	adc	r23, r23
    111e:	88 1f       	adc	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	1a f0       	brmi	.+6      	; 0x112a <__fixunssfsi+0x22>
    1124:	ba 95       	dec	r27
    1126:	c9 f7       	brne	.-14     	; 0x111a <__fixunssfsi+0x12>
    1128:	12 c0       	rjmp	.+36     	; 0x114e <__fixunssfsi+0x46>
    112a:	b1 30       	cpi	r27, 0x01	; 1
    112c:	81 f0       	breq	.+32     	; 0x114e <__fixunssfsi+0x46>
    112e:	9f d0       	rcall	.+318    	; 0x126e <__fp_zero>
    1130:	b1 e0       	ldi	r27, 0x01	; 1
    1132:	08 95       	ret
    1134:	9c c0       	rjmp	.+312    	; 0x126e <__fp_zero>
    1136:	67 2f       	mov	r22, r23
    1138:	78 2f       	mov	r23, r24
    113a:	88 27       	eor	r24, r24
    113c:	b8 5f       	subi	r27, 0xF8	; 248
    113e:	39 f0       	breq	.+14     	; 0x114e <__fixunssfsi+0x46>
    1140:	b9 3f       	cpi	r27, 0xF9	; 249
    1142:	cc f3       	brlt	.-14     	; 0x1136 <__fixunssfsi+0x2e>
    1144:	86 95       	lsr	r24
    1146:	77 95       	ror	r23
    1148:	67 95       	ror	r22
    114a:	b3 95       	inc	r27
    114c:	d9 f7       	brne	.-10     	; 0x1144 <__fixunssfsi+0x3c>
    114e:	3e f4       	brtc	.+14     	; 0x115e <__fixunssfsi+0x56>
    1150:	90 95       	com	r25
    1152:	80 95       	com	r24
    1154:	70 95       	com	r23
    1156:	61 95       	neg	r22
    1158:	7f 4f       	sbci	r23, 0xFF	; 255
    115a:	8f 4f       	sbci	r24, 0xFF	; 255
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	08 95       	ret

00001160 <__floatunsisf>:
    1160:	e8 94       	clt
    1162:	09 c0       	rjmp	.+18     	; 0x1176 <__floatsisf+0x12>

00001164 <__floatsisf>:
    1164:	97 fb       	bst	r25, 7
    1166:	3e f4       	brtc	.+14     	; 0x1176 <__floatsisf+0x12>
    1168:	90 95       	com	r25
    116a:	80 95       	com	r24
    116c:	70 95       	com	r23
    116e:	61 95       	neg	r22
    1170:	7f 4f       	sbci	r23, 0xFF	; 255
    1172:	8f 4f       	sbci	r24, 0xFF	; 255
    1174:	9f 4f       	sbci	r25, 0xFF	; 255
    1176:	99 23       	and	r25, r25
    1178:	a9 f0       	breq	.+42     	; 0x11a4 <__floatsisf+0x40>
    117a:	f9 2f       	mov	r31, r25
    117c:	96 e9       	ldi	r25, 0x96	; 150
    117e:	bb 27       	eor	r27, r27
    1180:	93 95       	inc	r25
    1182:	f6 95       	lsr	r31
    1184:	87 95       	ror	r24
    1186:	77 95       	ror	r23
    1188:	67 95       	ror	r22
    118a:	b7 95       	ror	r27
    118c:	f1 11       	cpse	r31, r1
    118e:	f8 cf       	rjmp	.-16     	; 0x1180 <__floatsisf+0x1c>
    1190:	fa f4       	brpl	.+62     	; 0x11d0 <__floatsisf+0x6c>
    1192:	bb 0f       	add	r27, r27
    1194:	11 f4       	brne	.+4      	; 0x119a <__floatsisf+0x36>
    1196:	60 ff       	sbrs	r22, 0
    1198:	1b c0       	rjmp	.+54     	; 0x11d0 <__floatsisf+0x6c>
    119a:	6f 5f       	subi	r22, 0xFF	; 255
    119c:	7f 4f       	sbci	r23, 0xFF	; 255
    119e:	8f 4f       	sbci	r24, 0xFF	; 255
    11a0:	9f 4f       	sbci	r25, 0xFF	; 255
    11a2:	16 c0       	rjmp	.+44     	; 0x11d0 <__floatsisf+0x6c>
    11a4:	88 23       	and	r24, r24
    11a6:	11 f0       	breq	.+4      	; 0x11ac <__floatsisf+0x48>
    11a8:	96 e9       	ldi	r25, 0x96	; 150
    11aa:	11 c0       	rjmp	.+34     	; 0x11ce <__floatsisf+0x6a>
    11ac:	77 23       	and	r23, r23
    11ae:	21 f0       	breq	.+8      	; 0x11b8 <__floatsisf+0x54>
    11b0:	9e e8       	ldi	r25, 0x8E	; 142
    11b2:	87 2f       	mov	r24, r23
    11b4:	76 2f       	mov	r23, r22
    11b6:	05 c0       	rjmp	.+10     	; 0x11c2 <__floatsisf+0x5e>
    11b8:	66 23       	and	r22, r22
    11ba:	71 f0       	breq	.+28     	; 0x11d8 <__floatsisf+0x74>
    11bc:	96 e8       	ldi	r25, 0x86	; 134
    11be:	86 2f       	mov	r24, r22
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	60 e0       	ldi	r22, 0x00	; 0
    11c4:	2a f0       	brmi	.+10     	; 0x11d0 <__floatsisf+0x6c>
    11c6:	9a 95       	dec	r25
    11c8:	66 0f       	add	r22, r22
    11ca:	77 1f       	adc	r23, r23
    11cc:	88 1f       	adc	r24, r24
    11ce:	da f7       	brpl	.-10     	; 0x11c6 <__floatsisf+0x62>
    11d0:	88 0f       	add	r24, r24
    11d2:	96 95       	lsr	r25
    11d4:	87 95       	ror	r24
    11d6:	97 f9       	bld	r25, 7
    11d8:	08 95       	ret

000011da <__fp_inf>:
    11da:	97 f9       	bld	r25, 7
    11dc:	9f 67       	ori	r25, 0x7F	; 127
    11de:	80 e8       	ldi	r24, 0x80	; 128
    11e0:	70 e0       	ldi	r23, 0x00	; 0
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	08 95       	ret

000011e6 <__fp_nan>:
    11e6:	9f ef       	ldi	r25, 0xFF	; 255
    11e8:	80 ec       	ldi	r24, 0xC0	; 192
    11ea:	08 95       	ret

000011ec <__fp_pscA>:
    11ec:	00 24       	eor	r0, r0
    11ee:	0a 94       	dec	r0
    11f0:	16 16       	cp	r1, r22
    11f2:	17 06       	cpc	r1, r23
    11f4:	18 06       	cpc	r1, r24
    11f6:	09 06       	cpc	r0, r25
    11f8:	08 95       	ret

000011fa <__fp_pscB>:
    11fa:	00 24       	eor	r0, r0
    11fc:	0a 94       	dec	r0
    11fe:	12 16       	cp	r1, r18
    1200:	13 06       	cpc	r1, r19
    1202:	14 06       	cpc	r1, r20
    1204:	05 06       	cpc	r0, r21
    1206:	08 95       	ret

00001208 <__fp_round>:
    1208:	09 2e       	mov	r0, r25
    120a:	03 94       	inc	r0
    120c:	00 0c       	add	r0, r0
    120e:	11 f4       	brne	.+4      	; 0x1214 <__fp_round+0xc>
    1210:	88 23       	and	r24, r24
    1212:	52 f0       	brmi	.+20     	; 0x1228 <__fp_round+0x20>
    1214:	bb 0f       	add	r27, r27
    1216:	40 f4       	brcc	.+16     	; 0x1228 <__fp_round+0x20>
    1218:	bf 2b       	or	r27, r31
    121a:	11 f4       	brne	.+4      	; 0x1220 <__fp_round+0x18>
    121c:	60 ff       	sbrs	r22, 0
    121e:	04 c0       	rjmp	.+8      	; 0x1228 <__fp_round+0x20>
    1220:	6f 5f       	subi	r22, 0xFF	; 255
    1222:	7f 4f       	sbci	r23, 0xFF	; 255
    1224:	8f 4f       	sbci	r24, 0xFF	; 255
    1226:	9f 4f       	sbci	r25, 0xFF	; 255
    1228:	08 95       	ret

0000122a <__fp_split3>:
    122a:	57 fd       	sbrc	r21, 7
    122c:	90 58       	subi	r25, 0x80	; 128
    122e:	44 0f       	add	r20, r20
    1230:	55 1f       	adc	r21, r21
    1232:	59 f0       	breq	.+22     	; 0x124a <__fp_splitA+0x10>
    1234:	5f 3f       	cpi	r21, 0xFF	; 255
    1236:	71 f0       	breq	.+28     	; 0x1254 <__fp_splitA+0x1a>
    1238:	47 95       	ror	r20

0000123a <__fp_splitA>:
    123a:	88 0f       	add	r24, r24
    123c:	97 fb       	bst	r25, 7
    123e:	99 1f       	adc	r25, r25
    1240:	61 f0       	breq	.+24     	; 0x125a <__fp_splitA+0x20>
    1242:	9f 3f       	cpi	r25, 0xFF	; 255
    1244:	79 f0       	breq	.+30     	; 0x1264 <__fp_splitA+0x2a>
    1246:	87 95       	ror	r24
    1248:	08 95       	ret
    124a:	12 16       	cp	r1, r18
    124c:	13 06       	cpc	r1, r19
    124e:	14 06       	cpc	r1, r20
    1250:	55 1f       	adc	r21, r21
    1252:	f2 cf       	rjmp	.-28     	; 0x1238 <__fp_split3+0xe>
    1254:	46 95       	lsr	r20
    1256:	f1 df       	rcall	.-30     	; 0x123a <__fp_splitA>
    1258:	08 c0       	rjmp	.+16     	; 0x126a <__fp_splitA+0x30>
    125a:	16 16       	cp	r1, r22
    125c:	17 06       	cpc	r1, r23
    125e:	18 06       	cpc	r1, r24
    1260:	99 1f       	adc	r25, r25
    1262:	f1 cf       	rjmp	.-30     	; 0x1246 <__fp_splitA+0xc>
    1264:	86 95       	lsr	r24
    1266:	71 05       	cpc	r23, r1
    1268:	61 05       	cpc	r22, r1
    126a:	08 94       	sec
    126c:	08 95       	ret

0000126e <__fp_zero>:
    126e:	e8 94       	clt

00001270 <__fp_szero>:
    1270:	bb 27       	eor	r27, r27
    1272:	66 27       	eor	r22, r22
    1274:	77 27       	eor	r23, r23
    1276:	cb 01       	movw	r24, r22
    1278:	97 f9       	bld	r25, 7
    127a:	08 95       	ret

0000127c <__mulsf3>:
    127c:	0b d0       	rcall	.+22     	; 0x1294 <__mulsf3x>
    127e:	c4 cf       	rjmp	.-120    	; 0x1208 <__fp_round>
    1280:	b5 df       	rcall	.-150    	; 0x11ec <__fp_pscA>
    1282:	28 f0       	brcs	.+10     	; 0x128e <__mulsf3+0x12>
    1284:	ba df       	rcall	.-140    	; 0x11fa <__fp_pscB>
    1286:	18 f0       	brcs	.+6      	; 0x128e <__mulsf3+0x12>
    1288:	95 23       	and	r25, r21
    128a:	09 f0       	breq	.+2      	; 0x128e <__mulsf3+0x12>
    128c:	a6 cf       	rjmp	.-180    	; 0x11da <__fp_inf>
    128e:	ab cf       	rjmp	.-170    	; 0x11e6 <__fp_nan>
    1290:	11 24       	eor	r1, r1
    1292:	ee cf       	rjmp	.-36     	; 0x1270 <__fp_szero>

00001294 <__mulsf3x>:
    1294:	ca df       	rcall	.-108    	; 0x122a <__fp_split3>
    1296:	a0 f3       	brcs	.-24     	; 0x1280 <__mulsf3+0x4>

00001298 <__mulsf3_pse>:
    1298:	95 9f       	mul	r25, r21
    129a:	d1 f3       	breq	.-12     	; 0x1290 <__mulsf3+0x14>
    129c:	95 0f       	add	r25, r21
    129e:	50 e0       	ldi	r21, 0x00	; 0
    12a0:	55 1f       	adc	r21, r21
    12a2:	62 9f       	mul	r22, r18
    12a4:	f0 01       	movw	r30, r0
    12a6:	72 9f       	mul	r23, r18
    12a8:	bb 27       	eor	r27, r27
    12aa:	f0 0d       	add	r31, r0
    12ac:	b1 1d       	adc	r27, r1
    12ae:	63 9f       	mul	r22, r19
    12b0:	aa 27       	eor	r26, r26
    12b2:	f0 0d       	add	r31, r0
    12b4:	b1 1d       	adc	r27, r1
    12b6:	aa 1f       	adc	r26, r26
    12b8:	64 9f       	mul	r22, r20
    12ba:	66 27       	eor	r22, r22
    12bc:	b0 0d       	add	r27, r0
    12be:	a1 1d       	adc	r26, r1
    12c0:	66 1f       	adc	r22, r22
    12c2:	82 9f       	mul	r24, r18
    12c4:	22 27       	eor	r18, r18
    12c6:	b0 0d       	add	r27, r0
    12c8:	a1 1d       	adc	r26, r1
    12ca:	62 1f       	adc	r22, r18
    12cc:	73 9f       	mul	r23, r19
    12ce:	b0 0d       	add	r27, r0
    12d0:	a1 1d       	adc	r26, r1
    12d2:	62 1f       	adc	r22, r18
    12d4:	83 9f       	mul	r24, r19
    12d6:	a0 0d       	add	r26, r0
    12d8:	61 1d       	adc	r22, r1
    12da:	22 1f       	adc	r18, r18
    12dc:	74 9f       	mul	r23, r20
    12de:	33 27       	eor	r19, r19
    12e0:	a0 0d       	add	r26, r0
    12e2:	61 1d       	adc	r22, r1
    12e4:	23 1f       	adc	r18, r19
    12e6:	84 9f       	mul	r24, r20
    12e8:	60 0d       	add	r22, r0
    12ea:	21 1d       	adc	r18, r1
    12ec:	82 2f       	mov	r24, r18
    12ee:	76 2f       	mov	r23, r22
    12f0:	6a 2f       	mov	r22, r26
    12f2:	11 24       	eor	r1, r1
    12f4:	9f 57       	subi	r25, 0x7F	; 127
    12f6:	50 40       	sbci	r21, 0x00	; 0
    12f8:	8a f0       	brmi	.+34     	; 0x131c <__mulsf3_pse+0x84>
    12fa:	e1 f0       	breq	.+56     	; 0x1334 <__mulsf3_pse+0x9c>
    12fc:	88 23       	and	r24, r24
    12fe:	4a f0       	brmi	.+18     	; 0x1312 <__mulsf3_pse+0x7a>
    1300:	ee 0f       	add	r30, r30
    1302:	ff 1f       	adc	r31, r31
    1304:	bb 1f       	adc	r27, r27
    1306:	66 1f       	adc	r22, r22
    1308:	77 1f       	adc	r23, r23
    130a:	88 1f       	adc	r24, r24
    130c:	91 50       	subi	r25, 0x01	; 1
    130e:	50 40       	sbci	r21, 0x00	; 0
    1310:	a9 f7       	brne	.-22     	; 0x12fc <__mulsf3_pse+0x64>
    1312:	9e 3f       	cpi	r25, 0xFE	; 254
    1314:	51 05       	cpc	r21, r1
    1316:	70 f0       	brcs	.+28     	; 0x1334 <__mulsf3_pse+0x9c>
    1318:	60 cf       	rjmp	.-320    	; 0x11da <__fp_inf>
    131a:	aa cf       	rjmp	.-172    	; 0x1270 <__fp_szero>
    131c:	5f 3f       	cpi	r21, 0xFF	; 255
    131e:	ec f3       	brlt	.-6      	; 0x131a <__mulsf3_pse+0x82>
    1320:	98 3e       	cpi	r25, 0xE8	; 232
    1322:	dc f3       	brlt	.-10     	; 0x131a <__mulsf3_pse+0x82>
    1324:	86 95       	lsr	r24
    1326:	77 95       	ror	r23
    1328:	67 95       	ror	r22
    132a:	b7 95       	ror	r27
    132c:	f7 95       	ror	r31
    132e:	e7 95       	ror	r30
    1330:	9f 5f       	subi	r25, 0xFF	; 255
    1332:	c1 f7       	brne	.-16     	; 0x1324 <__mulsf3_pse+0x8c>
    1334:	fe 2b       	or	r31, r30
    1336:	88 0f       	add	r24, r24
    1338:	91 1d       	adc	r25, r1
    133a:	96 95       	lsr	r25
    133c:	87 95       	ror	r24
    133e:	97 f9       	bld	r25, 7
    1340:	08 95       	ret

00001342 <__divmodhi4>:
    1342:	97 fb       	bst	r25, 7
    1344:	07 2e       	mov	r0, r23
    1346:	16 f4       	brtc	.+4      	; 0x134c <__divmodhi4+0xa>
    1348:	00 94       	com	r0
    134a:	06 d0       	rcall	.+12     	; 0x1358 <__divmodhi4_neg1>
    134c:	77 fd       	sbrc	r23, 7
    134e:	08 d0       	rcall	.+16     	; 0x1360 <__divmodhi4_neg2>
    1350:	14 d0       	rcall	.+40     	; 0x137a <__udivmodhi4>
    1352:	07 fc       	sbrc	r0, 7
    1354:	05 d0       	rcall	.+10     	; 0x1360 <__divmodhi4_neg2>
    1356:	3e f4       	brtc	.+14     	; 0x1366 <__divmodhi4_exit>

00001358 <__divmodhi4_neg1>:
    1358:	90 95       	com	r25
    135a:	81 95       	neg	r24
    135c:	9f 4f       	sbci	r25, 0xFF	; 255
    135e:	08 95       	ret

00001360 <__divmodhi4_neg2>:
    1360:	70 95       	com	r23
    1362:	61 95       	neg	r22
    1364:	7f 4f       	sbci	r23, 0xFF	; 255

00001366 <__divmodhi4_exit>:
    1366:	08 95       	ret

00001368 <__tablejump2__>:
    1368:	ee 0f       	add	r30, r30
    136a:	ff 1f       	adc	r31, r31
    136c:	00 24       	eor	r0, r0
    136e:	00 1c       	adc	r0, r0
    1370:	0b be       	out	0x3b, r0	; 59
    1372:	07 90       	elpm	r0, Z+
    1374:	f6 91       	elpm	r31, Z
    1376:	e0 2d       	mov	r30, r0
    1378:	09 94       	ijmp

0000137a <__udivmodhi4>:
    137a:	aa 1b       	sub	r26, r26
    137c:	bb 1b       	sub	r27, r27
    137e:	51 e1       	ldi	r21, 0x11	; 17
    1380:	07 c0       	rjmp	.+14     	; 0x1390 <__udivmodhi4_ep>

00001382 <__udivmodhi4_loop>:
    1382:	aa 1f       	adc	r26, r26
    1384:	bb 1f       	adc	r27, r27
    1386:	a6 17       	cp	r26, r22
    1388:	b7 07       	cpc	r27, r23
    138a:	10 f0       	brcs	.+4      	; 0x1390 <__udivmodhi4_ep>
    138c:	a6 1b       	sub	r26, r22
    138e:	b7 0b       	sbc	r27, r23

00001390 <__udivmodhi4_ep>:
    1390:	88 1f       	adc	r24, r24
    1392:	99 1f       	adc	r25, r25
    1394:	5a 95       	dec	r21
    1396:	a9 f7       	brne	.-22     	; 0x1382 <__udivmodhi4_loop>
    1398:	80 95       	com	r24
    139a:	90 95       	com	r25
    139c:	bc 01       	movw	r22, r24
    139e:	cd 01       	movw	r24, r26
    13a0:	08 95       	ret

000013a2 <_exit>:
    13a2:	f8 94       	cli

000013a4 <__stop_program>:
    13a4:	ff cf       	rjmp	.-2      	; 0x13a4 <__stop_program>
