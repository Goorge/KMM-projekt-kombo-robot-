
styrmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000740  000007d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000740  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003e  00800140  00800140  00000814  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000844  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b10  00000000  00000000  000009b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002c6  00000000  00000000  000014c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001393  00000000  00000000  0000178a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000314  00000000  00000000  00002b20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001062f  00000000  00000000  00002e34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000696  00000000  00000000  00013463  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00013af9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003f0e  00000000  00000000  00013c51  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	54 c0       	rjmp	.+168    	; 0xaa <__ctors_end>
   2:	00 00       	nop
   4:	93 c2       	rjmp	.+1318   	; 0x52c <__vector_1>
   6:	00 00       	nop
   8:	c2 c1       	rjmp	.+900    	; 0x38e <__vector_2>
   a:	00 00       	nop
   c:	e8 c1       	rjmp	.+976    	; 0x3de <__vector_3>
   e:	00 00       	nop
  10:	69 c0       	rjmp	.+210    	; 0xe4 <__bad_interrupt>
  12:	00 00       	nop
  14:	67 c0       	rjmp	.+206    	; 0xe4 <__bad_interrupt>
  16:	00 00       	nop
  18:	65 c0       	rjmp	.+202    	; 0xe4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	63 c0       	rjmp	.+198    	; 0xe4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	61 c0       	rjmp	.+194    	; 0xe4 <__bad_interrupt>
  22:	00 00       	nop
  24:	5f c0       	rjmp	.+190    	; 0xe4 <__bad_interrupt>
  26:	00 00       	nop
  28:	5d c0       	rjmp	.+186    	; 0xe4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5b c0       	rjmp	.+182    	; 0xe4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	59 c0       	rjmp	.+178    	; 0xe4 <__bad_interrupt>
  32:	00 00       	nop
  34:	72 c1       	rjmp	.+740    	; 0x31a <__vector_13>
  36:	00 00       	nop
  38:	55 c0       	rjmp	.+170    	; 0xe4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	53 c0       	rjmp	.+166    	; 0xe4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	51 c0       	rjmp	.+162    	; 0xe4 <__bad_interrupt>
  42:	00 00       	nop
  44:	4f c0       	rjmp	.+158    	; 0xe4 <__bad_interrupt>
  46:	00 00       	nop
  48:	4d c0       	rjmp	.+154    	; 0xe4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4b c0       	rjmp	.+150    	; 0xe4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	49 c0       	rjmp	.+146    	; 0xe4 <__bad_interrupt>
  52:	00 00       	nop
  54:	47 c0       	rjmp	.+142    	; 0xe4 <__bad_interrupt>
  56:	00 00       	nop
  58:	45 c0       	rjmp	.+138    	; 0xe4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	43 c0       	rjmp	.+134    	; 0xe4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	41 c0       	rjmp	.+130    	; 0xe4 <__bad_interrupt>
  62:	00 00       	nop
  64:	3f c0       	rjmp	.+126    	; 0xe4 <__bad_interrupt>
  66:	00 00       	nop
  68:	3d c0       	rjmp	.+122    	; 0xe4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3b c0       	rjmp	.+118    	; 0xe4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	39 c0       	rjmp	.+114    	; 0xe4 <__bad_interrupt>
  72:	00 00       	nop
  74:	37 c0       	rjmp	.+110    	; 0xe4 <__bad_interrupt>
  76:	00 00       	nop
  78:	35 c0       	rjmp	.+106    	; 0xe4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	33 c0       	rjmp	.+102    	; 0xe4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	31 c0       	rjmp	.+98     	; 0xe4 <__bad_interrupt>
  82:	00 00       	nop
  84:	2f c0       	rjmp	.+94     	; 0xe4 <__bad_interrupt>
  86:	00 00       	nop
  88:	2d c0       	rjmp	.+90     	; 0xe4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	dd 02       	muls	r29, r29
  8e:	e2 02       	muls	r30, r18
  90:	f4 02       	muls	r31, r20
  92:	00 03       	mulsu	r16, r16
  94:	04 03       	mulsu	r16, r20
  96:	08 03       	fmul	r16, r16
  98:	44 03       	mulsu	r20, r20
  9a:	0c 03       	fmul	r16, r20
  9c:	10 03       	mulsu	r17, r16
  9e:	15 03       	mulsu	r17, r21
  a0:	1d 03       	fmul	r17, r21
  a2:	25 03       	mulsu	r18, r21
  a4:	2d 03       	fmul	r18, r21
  a6:	35 03       	mulsu	r19, r21
  a8:	3d 03       	fmul	r19, r21

000000aa <__ctors_end>:
  aa:	11 24       	eor	r1, r1
  ac:	1f be       	out	0x3f, r1	; 63
  ae:	cf ef       	ldi	r28, 0xFF	; 255
  b0:	d0 e4       	ldi	r29, 0x40	; 64
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
  b6:	11 e0       	ldi	r17, 0x01	; 1
  b8:	a0 e0       	ldi	r26, 0x00	; 0
  ba:	b1 e0       	ldi	r27, 0x01	; 1
  bc:	e0 e4       	ldi	r30, 0x40	; 64
  be:	f7 e0       	ldi	r31, 0x07	; 7
  c0:	00 e0       	ldi	r16, 0x00	; 0
  c2:	0b bf       	out	0x3b, r16	; 59
  c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
  c6:	07 90       	elpm	r0, Z+
  c8:	0d 92       	st	X+, r0
  ca:	a0 34       	cpi	r26, 0x40	; 64
  cc:	b1 07       	cpc	r27, r17
  ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
  d0:	21 e0       	ldi	r18, 0x01	; 1
  d2:	a0 e4       	ldi	r26, 0x40	; 64
  d4:	b1 e0       	ldi	r27, 0x01	; 1
  d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
  d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
  da:	ae 37       	cpi	r26, 0x7E	; 126
  dc:	b2 07       	cpc	r27, r18
  de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
  e0:	d5 d2       	rcall	.+1450   	; 0x68c <main>
  e2:	2c c3       	rjmp	.+1624   	; 0x73c <_exit>

000000e4 <__bad_interrupt>:
  e4:	8d cf       	rjmp	.-230    	; 0x0 <__vectors>

000000e6 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  e6:	08 95       	ret

000000e8 <manual_drive>:
	else if(detect_labyrint()==true){
		//byt till kör i labyrintmode
	}
	else{
		current_position=linje_get_error();
		linje();
  e8:	80 91 4d 01 	lds	r24, 0x014D
  ec:	90 91 4e 01 	lds	r25, 0x014E
  f0:	00 97       	sbiw	r24, 0x00	; 0
  f2:	21 f4       	brne	.+8      	; 0xfc <manual_drive+0x14>
  f4:	15 b8       	out	0x05, r1	; 5
  f6:	17 bc       	out	0x27, r1	; 39
  f8:	18 bc       	out	0x28, r1	; 40
  fa:	08 95       	ret
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	91 05       	cpc	r25, r1
 100:	49 f4       	brne	.+18     	; 0x114 <manual_drive+0x2c>
 102:	85 b1       	in	r24, 0x05	; 5
 104:	15 b8       	out	0x05, r1	; 5
 106:	80 91 57 01 	lds	r24, 0x0157
 10a:	87 bd       	out	0x27, r24	; 39
 10c:	80 91 55 01 	lds	r24, 0x0155
 110:	88 bd       	out	0x28, r24	; 40
 112:	08 95       	ret
 114:	82 30       	cpi	r24, 0x02	; 2
 116:	91 05       	cpc	r25, r1
 118:	59 f4       	brne	.+22     	; 0x130 <manual_drive+0x48>
 11a:	85 b1       	in	r24, 0x05	; 5
 11c:	80 66       	ori	r24, 0x60	; 96
 11e:	85 b9       	out	0x05, r24	; 5
 120:	80 91 57 01 	lds	r24, 0x0157
 124:	8d 50       	subi	r24, 0x0D	; 13
 126:	87 bd       	out	0x27, r24	; 39
 128:	80 91 55 01 	lds	r24, 0x0155
 12c:	88 bd       	out	0x28, r24	; 40
 12e:	08 95       	ret
 130:	83 30       	cpi	r24, 0x03	; 3
 132:	91 05       	cpc	r25, r1
 134:	81 f4       	brne	.+32     	; 0x156 <manual_drive+0x6e>
 136:	85 b1       	in	r24, 0x05	; 5
 138:	15 b8       	out	0x05, r1	; 5
 13a:	80 91 57 01 	lds	r24, 0x0157
 13e:	87 bd       	out	0x27, r24	; 39
 140:	80 91 55 01 	lds	r24, 0x0155
 144:	90 91 56 01 	lds	r25, 0x0156
 148:	99 23       	and	r25, r25
 14a:	0c f4       	brge	.+2      	; 0x14e <manual_drive+0x66>
 14c:	01 96       	adiw	r24, 0x01	; 1
 14e:	95 95       	asr	r25
 150:	87 95       	ror	r24
 152:	88 bd       	out	0x28, r24	; 40
 154:	08 95       	ret
 156:	84 30       	cpi	r24, 0x04	; 4
 158:	91 05       	cpc	r25, r1
 15a:	81 f4       	brne	.+32     	; 0x17c <manual_drive+0x94>
 15c:	85 b1       	in	r24, 0x05	; 5
 15e:	85 b9       	out	0x05, r24	; 5
 160:	80 91 57 01 	lds	r24, 0x0157
 164:	90 91 58 01 	lds	r25, 0x0158
 168:	99 23       	and	r25, r25
 16a:	0c f4       	brge	.+2      	; 0x16e <manual_drive+0x86>
 16c:	01 96       	adiw	r24, 0x01	; 1
 16e:	95 95       	asr	r25
 170:	87 95       	ror	r24
 172:	87 bd       	out	0x27, r24	; 39
 174:	80 91 55 01 	lds	r24, 0x0155
 178:	88 bd       	out	0x28, r24	; 40
 17a:	08 95       	ret
 17c:	85 30       	cpi	r24, 0x05	; 5
 17e:	91 05       	cpc	r25, r1
 180:	51 f4       	brne	.+20     	; 0x196 <manual_drive+0xae>
 182:	85 b1       	in	r24, 0x05	; 5
 184:	15 b8       	out	0x05, r1	; 5
 186:	2e 9a       	sbi	0x05, 6	; 5
 188:	80 91 57 01 	lds	r24, 0x0157
 18c:	87 bd       	out	0x27, r24	; 39
 18e:	80 91 55 01 	lds	r24, 0x0155
 192:	88 bd       	out	0x28, r24	; 40
 194:	08 95       	ret
 196:	06 97       	sbiw	r24, 0x06	; 6
 198:	49 f4       	brne	.+18     	; 0x1ac <manual_drive+0xc4>
 19a:	2e 98       	cbi	0x05, 6	; 5
 19c:	2d 9a       	sbi	0x05, 5	; 5
 19e:	80 91 57 01 	lds	r24, 0x0157
 1a2:	87 bd       	out	0x27, r24	; 39
 1a4:	80 91 55 01 	lds	r24, 0x0155
 1a8:	88 bd       	out	0x28, r24	; 40
 1aa:	08 95       	ret
 1ac:	10 92 4e 01 	sts	0x014E, r1
 1b0:	10 92 4d 01 	sts	0x014D, r1
 1b4:	08 95       	ret

000001b6 <labyreg>:
 1b6:	f8 94       	cli
 1b8:	80 91 71 01 	lds	r24, 0x0171
 1bc:	90 91 72 01 	lds	r25, 0x0172
 1c0:	20 91 5d 01 	lds	r18, 0x015D
 1c4:	30 91 5e 01 	lds	r19, 0x015E
 1c8:	78 94       	sei
 1ca:	82 1b       	sub	r24, r18
 1cc:	93 0b       	sbc	r25, r19
 1ce:	90 93 7b 01 	sts	0x017B, r25
 1d2:	80 93 7a 01 	sts	0x017A, r24
 1d6:	20 91 4b 01 	lds	r18, 0x014B
 1da:	30 91 4c 01 	lds	r19, 0x014C
 1de:	ac 01       	movw	r20, r24
 1e0:	42 1b       	sub	r20, r18
 1e2:	53 0b       	sbc	r21, r19
 1e4:	50 93 4a 01 	sts	0x014A, r21
 1e8:	40 93 49 01 	sts	0x0149, r20
 1ec:	20 91 3e 01 	lds	r18, 0x013E
 1f0:	30 91 3f 01 	lds	r19, 0x013F
 1f4:	82 9f       	mul	r24, r18
 1f6:	b0 01       	movw	r22, r0
 1f8:	83 9f       	mul	r24, r19
 1fa:	70 0d       	add	r23, r0
 1fc:	92 9f       	mul	r25, r18
 1fe:	70 0d       	add	r23, r0
 200:	11 24       	eor	r1, r1
 202:	e0 91 3c 01 	lds	r30, 0x013C
 206:	f0 91 3d 01 	lds	r31, 0x013D
 20a:	4e 9f       	mul	r20, r30
 20c:	90 01       	movw	r18, r0
 20e:	4f 9f       	mul	r20, r31
 210:	30 0d       	add	r19, r0
 212:	5e 9f       	mul	r21, r30
 214:	30 0d       	add	r19, r0
 216:	11 24       	eor	r1, r1
 218:	26 0f       	add	r18, r22
 21a:	37 1f       	adc	r19, r23
 21c:	30 93 78 01 	sts	0x0178, r19
 220:	20 93 77 01 	sts	0x0177, r18
 224:	90 93 4c 01 	sts	0x014C, r25
 228:	80 93 4b 01 	sts	0x014B, r24
 22c:	87 b5       	in	r24, 0x27	; 39
 22e:	86 95       	lsr	r24
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	28 17       	cp	r18, r24
 234:	39 07       	cpc	r19, r25
 236:	3c f0       	brlt	.+14     	; 0x246 <labyreg+0x90>
 238:	87 b5       	in	r24, 0x27	; 39
 23a:	86 95       	lsr	r24
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	90 93 78 01 	sts	0x0178, r25
 242:	80 93 77 01 	sts	0x0177, r24
 246:	88 b5       	in	r24, 0x28	; 40
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	91 95       	neg	r25
 24c:	81 95       	neg	r24
 24e:	91 09       	sbc	r25, r1
 250:	0a f4       	brpl	.+2      	; 0x254 <labyreg+0x9e>
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	95 95       	asr	r25
 256:	87 95       	ror	r24
 258:	20 91 77 01 	lds	r18, 0x0177
 25c:	30 91 78 01 	lds	r19, 0x0178
 260:	82 17       	cp	r24, r18
 262:	93 07       	cpc	r25, r19
 264:	6c f0       	brlt	.+26     	; 0x280 <labyreg+0xca>
 266:	88 b5       	in	r24, 0x28	; 40
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	91 95       	neg	r25
 26c:	81 95       	neg	r24
 26e:	91 09       	sbc	r25, r1
 270:	0a f4       	brpl	.+2      	; 0x274 <labyreg+0xbe>
 272:	01 96       	adiw	r24, 0x01	; 1
 274:	95 95       	asr	r25
 276:	87 95       	ror	r24
 278:	90 93 78 01 	sts	0x0178, r25
 27c:	80 93 77 01 	sts	0x0177, r24
 280:	80 91 77 01 	lds	r24, 0x0177
 284:	90 91 78 01 	lds	r25, 0x0178
 288:	18 16       	cp	r1, r24
 28a:	19 06       	cpc	r1, r25
 28c:	44 f4       	brge	.+16     	; 0x29e <labyreg+0xe8>
 28e:	90 91 57 01 	lds	r25, 0x0157
 292:	98 1b       	sub	r25, r24
 294:	97 bd       	out	0x27, r25	; 39
 296:	80 91 55 01 	lds	r24, 0x0155
 29a:	88 bd       	out	0x28, r24	; 40
 29c:	08 95       	ret
 29e:	99 23       	and	r25, r25
 2a0:	54 f4       	brge	.+20     	; 0x2b6 <labyreg+0x100>
 2a2:	80 91 57 01 	lds	r24, 0x0157
 2a6:	87 bd       	out	0x27, r24	; 39
 2a8:	90 91 77 01 	lds	r25, 0x0177
 2ac:	80 91 55 01 	lds	r24, 0x0155
 2b0:	89 0f       	add	r24, r25
 2b2:	88 bd       	out	0x28, r24	; 40
 2b4:	08 95       	ret
 2b6:	89 2b       	or	r24, r25
 2b8:	31 f4       	brne	.+12     	; 0x2c6 <labyreg+0x110>
 2ba:	80 91 57 01 	lds	r24, 0x0157
 2be:	87 bd       	out	0x27, r24	; 39
 2c0:	80 91 55 01 	lds	r24, 0x0155
 2c4:	88 bd       	out	0x28, r24	; 40
 2c6:	08 95       	ret

000002c8 <regulator>:
 2c8:	80 91 4f 01 	lds	r24, 0x014F
 2cc:	90 91 50 01 	lds	r25, 0x0150
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	09 f0       	breq	.+2      	; 0x2d6 <regulator+0xe>
 2d4:	70 cf       	rjmp	.-288    	; 0x1b6 <labyreg>
 2d6:	08 95       	ret

000002d8 <initengine>:
 2d8:	84 b5       	in	r24, 0x24	; 36
 2da:	83 6a       	ori	r24, 0xA3	; 163
 2dc:	84 bd       	out	0x24, r24	; 36
 2de:	17 bc       	out	0x27, r1	; 39
 2e0:	18 bc       	out	0x28, r1	; 40
 2e2:	85 b5       	in	r24, 0x25	; 37
 2e4:	83 60       	ori	r24, 0x03	; 3
 2e6:	85 bd       	out	0x25, r24	; 37
 2e8:	88 e7       	ldi	r24, 0x78	; 120
 2ea:	84 b9       	out	0x04, r24	; 4
 2ec:	85 b1       	in	r24, 0x05	; 5
 2ee:	15 b8       	out	0x05, r1	; 5
 2f0:	08 95       	ret

000002f2 <timerinit>:
 2f2:	83 e0       	ldi	r24, 0x03	; 3
 2f4:	8a b9       	out	0x0a, r24	; 10
 2f6:	e1 e8       	ldi	r30, 0x81	; 129
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	8d 60       	ori	r24, 0x0D	; 13
 2fe:	80 83       	st	Z, r24
 300:	80 ea       	ldi	r24, 0xA0	; 160
 302:	95 e0       	ldi	r25, 0x05	; 5
 304:	90 93 89 00 	sts	0x0089, r25
 308:	80 93 88 00 	sts	0x0088, r24
 30c:	ef e6       	ldi	r30, 0x6F	; 111
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	82 60       	ori	r24, 0x02	; 2
 314:	80 83       	st	Z, r24
 316:	b1 9a       	sbi	0x16, 1	; 22
 318:	08 95       	ret

0000031a <__vector_13>:
 31a:	1f 92       	push	r1
 31c:	0f 92       	push	r0
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	0f 92       	push	r0
 322:	11 24       	eor	r1, r1
 324:	2f 93       	push	r18
 326:	3f 93       	push	r19
 328:	8f 93       	push	r24
 32a:	9f 93       	push	r25
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	90 93 54 01 	sts	0x0154, r25
 334:	80 93 53 01 	sts	0x0153, r24
 338:	80 91 44 01 	lds	r24, 0x0144
 33c:	90 91 45 01 	lds	r25, 0x0145
 340:	01 96       	adiw	r24, 0x01	; 1
 342:	90 93 45 01 	sts	0x0145, r25
 346:	80 93 44 01 	sts	0x0144, r24
 34a:	20 91 51 01 	lds	r18, 0x0151
 34e:	30 91 52 01 	lds	r19, 0x0152
 352:	2f 5f       	subi	r18, 0xFF	; 255
 354:	3f 4f       	sbci	r19, 0xFF	; 255
 356:	30 93 52 01 	sts	0x0152, r19
 35a:	20 93 51 01 	sts	0x0151, r18
 35e:	4d 97       	sbiw	r24, 0x1d	; 29
 360:	24 f0       	brlt	.+8      	; 0x36a <__vector_13+0x50>
 362:	10 92 45 01 	sts	0x0145, r1
 366:	10 92 44 01 	sts	0x0144, r1
 36a:	9f 91       	pop	r25
 36c:	8f 91       	pop	r24
 36e:	3f 91       	pop	r19
 370:	2f 91       	pop	r18
 372:	0f 90       	pop	r0
 374:	0f be       	out	0x3f, r0	; 63
 376:	0f 90       	pop	r0
 378:	1f 90       	pop	r1
 37a:	18 95       	reti

0000037c <interrupt_init>:
 37c:	8d b3       	in	r24, 0x1d	; 29
 37e:	86 60       	ori	r24, 0x06	; 6
 380:	8d bb       	out	0x1d, r24	; 29
 382:	e9 e6       	ldi	r30, 0x69	; 105
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	80 81       	ld	r24, Z
 388:	88 62       	ori	r24, 0x28	; 40
 38a:	80 83       	st	Z, r24
 38c:	08 95       	ret

0000038e <__vector_2>:
 38e:	1f 92       	push	r1
 390:	0f 92       	push	r0
 392:	0f b6       	in	r0, 0x3f	; 63
 394:	0f 92       	push	r0
 396:	11 24       	eor	r1, r1
 398:	8f 93       	push	r24
 39a:	9f 93       	push	r25
 39c:	80 91 5b 01 	lds	r24, 0x015B
 3a0:	90 91 5c 01 	lds	r25, 0x015C
 3a4:	01 97       	sbiw	r24, 0x01	; 1
 3a6:	39 f4       	brne	.+14     	; 0x3b6 <__vector_2+0x28>
 3a8:	10 92 5c 01 	sts	0x015C, r1
 3ac:	10 92 5b 01 	sts	0x015B, r1
 3b0:	59 9a       	sbi	0x0b, 1	; 11
 3b2:	58 98       	cbi	0x0b, 0	; 11
 3b4:	0c c0       	rjmp	.+24     	; 0x3ce <__vector_2+0x40>
 3b6:	10 92 5a 01 	sts	0x015A, r1
 3ba:	10 92 59 01 	sts	0x0159, r1
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	90 93 5c 01 	sts	0x015C, r25
 3c6:	80 93 5b 01 	sts	0x015B, r24
 3ca:	58 9a       	sbi	0x0b, 0	; 11
 3cc:	59 98       	cbi	0x0b, 1	; 11
 3ce:	e1 9a       	sbi	0x1c, 1	; 28
 3d0:	9f 91       	pop	r25
 3d2:	8f 91       	pop	r24
 3d4:	0f 90       	pop	r0
 3d6:	0f be       	out	0x3f, r0	; 63
 3d8:	0f 90       	pop	r0
 3da:	1f 90       	pop	r1
 3dc:	18 95       	reti

000003de <__vector_3>:
 3de:	1f 92       	push	r1
 3e0:	0f 92       	push	r0
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	0f 92       	push	r0
 3e6:	11 24       	eor	r1, r1
 3e8:	8f 93       	push	r24
 3ea:	9f 93       	push	r25
 3ec:	80 91 59 01 	lds	r24, 0x0159
 3f0:	90 91 5a 01 	lds	r25, 0x015A
 3f4:	89 2b       	or	r24, r25
 3f6:	39 f4       	brne	.+14     	; 0x406 <__vector_3+0x28>
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	90 93 5a 01 	sts	0x015A, r25
 400:	80 93 59 01 	sts	0x0159, r24
 404:	04 c0       	rjmp	.+8      	; 0x40e <__vector_3+0x30>
 406:	10 92 5a 01 	sts	0x015A, r1
 40a:	10 92 59 01 	sts	0x0159, r1
 40e:	e2 9a       	sbi	0x1c, 2	; 28
 410:	9f 91       	pop	r25
 412:	8f 91       	pop	r24
 414:	0f 90       	pop	r0
 416:	0f be       	out	0x3f, r0	; 63
 418:	0f 90       	pop	r0
 41a:	1f 90       	pop	r1
 41c:	18 95       	reti

0000041e <i2c_setup>:
 41e:	88 23       	and	r24, r24
 420:	69 f0       	breq	.+26     	; 0x43c <i2c_setup+0x1e>
 422:	3e 98       	cbi	0x07, 6	; 7
 424:	3f 98       	cbi	0x07, 7	; 7
 426:	e8 9a       	sbi	0x1d, 0	; 29
 428:	e9 e6       	ldi	r30, 0x69	; 105
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	80 81       	ld	r24, Z
 42e:	83 60       	ori	r24, 0x03	; 3
 430:	80 83       	st	Z, r24
 432:	80 e1       	ldi	r24, 0x10	; 16
 434:	80 93 b8 00 	sts	0x00B8, r24
 438:	10 92 b9 00 	sts	0x00B9, r1
 43c:	08 95       	ret

0000043e <i2c_recive>:
 43e:	ec eb       	ldi	r30, 0xBC	; 188
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	90 81       	ld	r25, Z
 444:	94 6a       	ori	r25, 0xA4	; 164
 446:	90 83       	st	Z, r25
 448:	90 81       	ld	r25, Z
 44a:	99 23       	and	r25, r25
 44c:	ec f7       	brge	.-6      	; 0x448 <i2c_recive+0xa>
 44e:	90 91 b9 00 	lds	r25, 0x00B9
 452:	98 7f       	andi	r25, 0xF8	; 248
 454:	98 30       	cpi	r25, 0x08	; 8
 456:	29 f0       	breq	.+10     	; 0x462 <i2c_recive+0x24>
 458:	84 e9       	ldi	r24, 0x94	; 148
 45a:	80 93 bc 00 	sts	0x00BC, r24
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	08 95       	ret
 462:	81 60       	ori	r24, 0x01	; 1
 464:	80 93 bb 00 	sts	0x00BB, r24
 468:	84 e8       	ldi	r24, 0x84	; 132
 46a:	80 93 bc 00 	sts	0x00BC, r24
 46e:	ec eb       	ldi	r30, 0xBC	; 188
 470:	f0 e0       	ldi	r31, 0x00	; 0
 472:	80 81       	ld	r24, Z
 474:	88 23       	and	r24, r24
 476:	ec f7       	brge	.-6      	; 0x472 <i2c_recive+0x34>
 478:	80 91 b9 00 	lds	r24, 0x00B9
 47c:	88 7f       	andi	r24, 0xF8	; 248
 47e:	80 34       	cpi	r24, 0x40	; 64
 480:	29 f0       	breq	.+10     	; 0x48c <i2c_recive+0x4e>
 482:	84 e9       	ldi	r24, 0x94	; 148
 484:	80 93 bc 00 	sts	0x00BC, r24
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	08 95       	ret
 48c:	ec eb       	ldi	r30, 0xBC	; 188
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	80 81       	ld	r24, Z
 492:	84 68       	ori	r24, 0x84	; 132
 494:	80 83       	st	Z, r24
 496:	80 81       	ld	r24, Z
 498:	88 23       	and	r24, r24
 49a:	ec f7       	brge	.-6      	; 0x496 <i2c_recive+0x58>
 49c:	80 91 bb 00 	lds	r24, 0x00BB
 4a0:	94 e9       	ldi	r25, 0x94	; 148
 4a2:	90 93 bc 00 	sts	0x00BC, r25
 4a6:	08 95       	ret

000004a8 <i2c_store_data>:
 4a8:	20 91 42 01 	lds	r18, 0x0142
 4ac:	30 91 43 01 	lds	r19, 0x0143
 4b0:	21 15       	cp	r18, r1
 4b2:	31 05       	cpc	r19, r1
 4b4:	89 f4       	brne	.+34     	; 0x4d8 <i2c_store_data+0x30>
 4b6:	28 2f       	mov	r18, r24
 4b8:	22 95       	swap	r18
 4ba:	2f 70       	andi	r18, 0x0F	; 15
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	30 93 41 01 	sts	0x0141, r19
 4c2:	20 93 40 01 	sts	0x0140, r18
 4c6:	80 93 60 01 	sts	0x0160, r24
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	90 93 43 01 	sts	0x0143, r25
 4d2:	80 93 42 01 	sts	0x0142, r24
 4d6:	16 c0       	rjmp	.+44     	; 0x504 <i2c_store_data+0x5c>
 4d8:	40 91 40 01 	lds	r20, 0x0140
 4dc:	50 91 41 01 	lds	r21, 0x0141
 4e0:	24 17       	cp	r18, r20
 4e2:	35 07       	cpc	r19, r21
 4e4:	5c f4       	brge	.+22     	; 0x4fc <i2c_store_data+0x54>
 4e6:	f9 01       	movw	r30, r18
 4e8:	e0 5a       	subi	r30, 0xA0	; 160
 4ea:	fe 4f       	sbci	r31, 0xFE	; 254
 4ec:	80 83       	st	Z, r24
 4ee:	2f 5f       	subi	r18, 0xFF	; 255
 4f0:	3f 4f       	sbci	r19, 0xFF	; 255
 4f2:	30 93 43 01 	sts	0x0143, r19
 4f6:	20 93 42 01 	sts	0x0142, r18
 4fa:	04 c0       	rjmp	.+8      	; 0x504 <i2c_store_data+0x5c>
 4fc:	f9 01       	movw	r30, r18
 4fe:	e0 5a       	subi	r30, 0xA0	; 160
 500:	fe 4f       	sbci	r31, 0xFE	; 254
 502:	80 83       	st	Z, r24
 504:	20 91 42 01 	lds	r18, 0x0142
 508:	30 91 43 01 	lds	r19, 0x0143
 50c:	80 91 40 01 	lds	r24, 0x0140
 510:	90 91 41 01 	lds	r25, 0x0141
 514:	28 17       	cp	r18, r24
 516:	39 07       	cpc	r19, r25
 518:	44 f0       	brlt	.+16     	; 0x52a <i2c_store_data+0x82>
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	80 93 46 01 	sts	0x0146, r24
 520:	10 92 43 01 	sts	0x0143, r1
 524:	10 92 42 01 	sts	0x0142, r1
 528:	e8 98       	cbi	0x1d, 0	; 29
 52a:	08 95       	ret

0000052c <__vector_1>:
 52c:	1f 92       	push	r1
 52e:	0f 92       	push	r0
 530:	0f b6       	in	r0, 0x3f	; 63
 532:	0f 92       	push	r0
 534:	11 24       	eor	r1, r1
 536:	0b b6       	in	r0, 0x3b	; 59
 538:	0f 92       	push	r0
 53a:	2f 93       	push	r18
 53c:	3f 93       	push	r19
 53e:	4f 93       	push	r20
 540:	5f 93       	push	r21
 542:	6f 93       	push	r22
 544:	7f 93       	push	r23
 546:	8f 93       	push	r24
 548:	9f 93       	push	r25
 54a:	af 93       	push	r26
 54c:	bf 93       	push	r27
 54e:	ef 93       	push	r30
 550:	ff 93       	push	r31
 552:	00 00       	nop
 554:	36 9b       	sbis	0x06, 6	; 6
 556:	04 c0       	rjmp	.+8      	; 0x560 <__vector_1+0x34>
 558:	82 e0       	ldi	r24, 0x02	; 2
 55a:	71 df       	rcall	.-286    	; 0x43e <i2c_recive>
 55c:	a5 df       	rcall	.-182    	; 0x4a8 <i2c_store_data>
 55e:	05 c0       	rjmp	.+10     	; 0x56a <__vector_1+0x3e>
 560:	37 9b       	sbis	0x06, 7	; 6
 562:	03 c0       	rjmp	.+6      	; 0x56a <__vector_1+0x3e>
 564:	86 e0       	ldi	r24, 0x06	; 6
 566:	6b df       	rcall	.-298    	; 0x43e <i2c_recive>
 568:	9f df       	rcall	.-194    	; 0x4a8 <i2c_store_data>
 56a:	ff 91       	pop	r31
 56c:	ef 91       	pop	r30
 56e:	bf 91       	pop	r27
 570:	af 91       	pop	r26
 572:	9f 91       	pop	r25
 574:	8f 91       	pop	r24
 576:	7f 91       	pop	r23
 578:	6f 91       	pop	r22
 57a:	5f 91       	pop	r21
 57c:	4f 91       	pop	r20
 57e:	3f 91       	pop	r19
 580:	2f 91       	pop	r18
 582:	0f 90       	pop	r0
 584:	0b be       	out	0x3b, r0	; 59
 586:	0f 90       	pop	r0
 588:	0f be       	out	0x3f, r0	; 63
 58a:	0f 90       	pop	r0
 58c:	1f 90       	pop	r1
 58e:	18 95       	reti

00000590 <i2c_handel_data>:
 590:	80 91 46 01 	lds	r24, 0x0146
 594:	88 23       	and	r24, r24
 596:	09 f4       	brne	.+2      	; 0x59a <i2c_handel_data+0xa>
 598:	78 c0       	rjmp	.+240    	; 0x68a <i2c_handel_data+0xfa>
 59a:	10 92 46 01 	sts	0x0146, r1
 59e:	20 91 60 01 	lds	r18, 0x0160
 5a2:	e2 2f       	mov	r30, r18
 5a4:	ef 70       	andi	r30, 0x0F	; 15
 5a6:	8e 2f       	mov	r24, r30
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	8f 30       	cpi	r24, 0x0F	; 15
 5ac:	91 05       	cpc	r25, r1
 5ae:	08 f0       	brcs	.+2      	; 0x5b2 <i2c_handel_data+0x22>
 5b0:	6b c0       	rjmp	.+214    	; 0x688 <i2c_handel_data+0xf8>
 5b2:	fc 01       	movw	r30, r24
 5b4:	ea 5b       	subi	r30, 0xBA	; 186
 5b6:	ff 4f       	sbci	r31, 0xFF	; 255
 5b8:	b8 c0       	rjmp	.+368    	; 0x72a <__tablejump2__>
 5ba:	80 91 61 01 	lds	r24, 0x0161
 5be:	80 93 79 01 	sts	0x0179, r24
 5c2:	62 c0       	rjmp	.+196    	; 0x688 <i2c_handel_data+0xf8>
 5c4:	e0 e6       	ldi	r30, 0x60	; 96
 5c6:	f1 e0       	ldi	r31, 0x01	; 1
 5c8:	83 81       	ldd	r24, Z+3	; 0x03
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	90 93 72 01 	sts	0x0172, r25
 5d0:	80 93 71 01 	sts	0x0171, r24
 5d4:	82 81       	ldd	r24, Z+2	; 0x02
 5d6:	80 93 73 01 	sts	0x0173, r24
 5da:	81 81       	ldd	r24, Z+1	; 0x01
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	90 93 5e 01 	sts	0x015E, r25
 5e2:	80 93 5d 01 	sts	0x015D, r24
 5e6:	50 c0       	rjmp	.+160    	; 0x688 <i2c_handel_data+0xf8>
 5e8:	80 91 61 01 	lds	r24, 0x0161
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	98 2f       	mov	r25, r24
 5f0:	88 27       	eor	r24, r24
 5f2:	82 0f       	add	r24, r18
 5f4:	91 1d       	adc	r25, r1
 5f6:	90 93 70 01 	sts	0x0170, r25
 5fa:	80 93 6f 01 	sts	0x016F, r24
 5fe:	44 c0       	rjmp	.+136    	; 0x688 <i2c_handel_data+0xf8>
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	80 93 7c 01 	sts	0x017C, r24
 606:	40 c0       	rjmp	.+128    	; 0x688 <i2c_handel_data+0xf8>
 608:	82 e0       	ldi	r24, 0x02	; 2
 60a:	80 93 7c 01 	sts	0x017C, r24
 60e:	3c c0       	rjmp	.+120    	; 0x688 <i2c_handel_data+0xf8>
 610:	83 e0       	ldi	r24, 0x03	; 3
 612:	80 93 7c 01 	sts	0x017C, r24
 616:	38 c0       	rjmp	.+112    	; 0x688 <i2c_handel_data+0xf8>
 618:	81 e0       	ldi	r24, 0x01	; 1
 61a:	80 93 5f 01 	sts	0x015F, r24
 61e:	34 c0       	rjmp	.+104    	; 0x688 <i2c_handel_data+0xf8>
 620:	10 92 4e 01 	sts	0x014E, r1
 624:	10 92 4d 01 	sts	0x014D, r1
 628:	2f c0       	rjmp	.+94     	; 0x688 <i2c_handel_data+0xf8>
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	90 93 4e 01 	sts	0x014E, r25
 632:	80 93 4d 01 	sts	0x014D, r24
 636:	58 9a       	sbi	0x0b, 0	; 11
 638:	27 c0       	rjmp	.+78     	; 0x688 <i2c_handel_data+0xf8>
 63a:	58 9a       	sbi	0x0b, 0	; 11
 63c:	82 e0       	ldi	r24, 0x02	; 2
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	90 93 4e 01 	sts	0x014E, r25
 644:	80 93 4d 01 	sts	0x014D, r24
 648:	1f c0       	rjmp	.+62     	; 0x688 <i2c_handel_data+0xf8>
 64a:	58 9a       	sbi	0x0b, 0	; 11
 64c:	84 e0       	ldi	r24, 0x04	; 4
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	90 93 4e 01 	sts	0x014E, r25
 654:	80 93 4d 01 	sts	0x014D, r24
 658:	17 c0       	rjmp	.+46     	; 0x688 <i2c_handel_data+0xf8>
 65a:	58 9a       	sbi	0x0b, 0	; 11
 65c:	83 e0       	ldi	r24, 0x03	; 3
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	90 93 4e 01 	sts	0x014E, r25
 664:	80 93 4d 01 	sts	0x014D, r24
 668:	0f c0       	rjmp	.+30     	; 0x688 <i2c_handel_data+0xf8>
 66a:	58 9a       	sbi	0x0b, 0	; 11
 66c:	86 e0       	ldi	r24, 0x06	; 6
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	90 93 4e 01 	sts	0x014E, r25
 674:	80 93 4d 01 	sts	0x014D, r24
 678:	07 c0       	rjmp	.+14     	; 0x688 <i2c_handel_data+0xf8>
 67a:	58 9a       	sbi	0x0b, 0	; 11
 67c:	85 e0       	ldi	r24, 0x05	; 5
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	90 93 4e 01 	sts	0x014E, r25
 684:	80 93 4d 01 	sts	0x014D, r24
 688:	e8 9a       	sbi	0x1d, 0	; 29
 68a:	08 95       	ret

0000068c <main>:
				5,  4,  3,  2, 0 };
//*********************************for test only

int main(void)
{
	interrupt_init();
 68c:	77 de       	rcall	.-786    	; 0x37c <interrupt_init>
	board_init();
 68e:	2b dd       	rcall	.-1450   	; 0xe6 <board_init>
	initengine();
 690:	23 de       	rcall	.-954    	; 0x2d8 <initengine>
	timerinit();
 692:	2f de       	rcall	.-930    	; 0x2f2 <timerinit>
	i2c_setup(1);
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	c3 de       	rcall	.-634    	; 0x41e <i2c_setup>
	linje_setup();
	sei();
 698:	78 94       	sei
	//***********Set motors speed value here *****************
	left=100;				// kanske räcker med en variable för båda om båda kör exakt lika fort
 69a:	84 e6       	ldi	r24, 0x64	; 100
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	90 93 58 01 	sts	0x0158, r25
 6a2:	80 93 57 01 	sts	0x0157, r24
	right=93;
 6a6:	8d e5       	ldi	r24, 0x5D	; 93
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	90 93 56 01 	sts	0x0156, r25
 6ae:	80 93 55 01 	sts	0x0155, r24
	//********************************************************
	motor_left=left;      
 6b2:	84 e6       	ldi	r24, 0x64	; 100
 6b4:	87 bd       	out	0x27, r24	; 39
	motor_right=right;
 6b6:	80 91 55 01 	lds	r24, 0x0155
 6ba:	88 bd       	out	0x28, r24	; 40
	while(1){
		i2c_handel_data();  //test av fregulito	
 6bc:	69 df       	rcall	.-302    	; 0x590 <i2c_handel_data>
			if(drive_mode == 1){						// Drivemode is auto    // (drive_mode == 1 && start == 1)
 6be:	80 91 5b 01 	lds	r24, 0x015B
 6c2:	90 91 5c 01 	lds	r25, 0x015C
 6c6:	81 30       	cpi	r24, 0x01	; 1
 6c8:	91 05       	cpc	r25, r1
 6ca:	59 f5       	brne	.+86     	; 0x722 <main+0x96>
				PORTB &= (0 << motor_dir_left) | (0 << motor_dir_right);		// Set motor direction to forward
 6cc:	85 b1       	in	r24, 0x05	; 5
 6ce:	15 b8       	out	0x05, r1	; 5
				current_position = arre[count_arre];	// används för att simulera linjeföljning, arrayen ändras i globala
 6d0:	e0 91 44 01 	lds	r30, 0x0144
 6d4:	f0 91 45 01 	lds	r31, 0x0145
 6d8:	ee 0f       	add	r30, r30
 6da:	ff 1f       	adc	r31, r31
 6dc:	e0 50       	subi	r30, 0x00	; 0
 6de:	ff 4f       	sbci	r31, 0xFF	; 255
 6e0:	80 81       	ld	r24, Z
 6e2:	91 81       	ldd	r25, Z+1	; 0x01
 6e4:	90 93 48 01 	sts	0x0148, r25
 6e8:	80 93 47 01 	sts	0x0147, r24
				if(regler_ready==1 && start == 1){
 6ec:	80 91 53 01 	lds	r24, 0x0153
 6f0:	90 91 54 01 	lds	r25, 0x0154
 6f4:	01 97       	sbiw	r24, 0x01	; 1
 6f6:	61 f4       	brne	.+24     	; 0x710 <main+0x84>
 6f8:	80 91 59 01 	lds	r24, 0x0159
 6fc:	90 91 5a 01 	lds	r25, 0x015A
 700:	01 97       	sbiw	r24, 0x01	; 1
 702:	31 f4       	brne	.+12     	; 0x710 <main+0x84>
					regulator();
 704:	e1 dd       	rcall	.-1086   	; 0x2c8 <regulator>
					regler_ready=0;	
 706:	10 92 54 01 	sts	0x0154, r1
 70a:	10 92 53 01 	sts	0x0153, r1
 70e:	d6 cf       	rjmp	.-84     	; 0x6bc <main+0x30>
				}
				else if(start == 0){					// if start is zero then turn off the auto, stops motors
 710:	80 91 59 01 	lds	r24, 0x0159
 714:	90 91 5a 01 	lds	r25, 0x015A
 718:	89 2b       	or	r24, r25
 71a:	81 f6       	brne	.-96     	; 0x6bc <main+0x30>
					motor_left=0;
 71c:	17 bc       	out	0x27, r1	; 39
					motor_right=0;
 71e:	18 bc       	out	0x28, r1	; 40
 720:	cd cf       	rjmp	.-102    	; 0x6bc <main+0x30>
				}
			}
			else if(drive_mode==0){										// Drivemode is manual
 722:	89 2b       	or	r24, r25
 724:	59 f6       	brne	.-106    	; 0x6bc <main+0x30>
				manual_drive();
 726:	e0 dc       	rcall	.-1600   	; 0xe8 <manual_drive>
 728:	c9 cf       	rjmp	.-110    	; 0x6bc <main+0x30>

0000072a <__tablejump2__>:
 72a:	ee 0f       	add	r30, r30
 72c:	ff 1f       	adc	r31, r31
 72e:	00 24       	eor	r0, r0
 730:	00 1c       	adc	r0, r0
 732:	0b be       	out	0x3b, r0	; 59
 734:	07 90       	elpm	r0, Z+
 736:	f6 91       	elpm	r31, Z
 738:	e0 2d       	mov	r30, r0
 73a:	09 94       	ijmp

0000073c <_exit>:
 73c:	f8 94       	cli

0000073e <__stop_program>:
 73e:	ff cf       	rjmp	.-2      	; 0x73e <__stop_program>
